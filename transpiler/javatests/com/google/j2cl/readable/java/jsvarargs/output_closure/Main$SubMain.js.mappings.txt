[SubMain] => [SubMain]
[SubMain] => [constructor]
[SubMain] => [super();] "jsvarargs.Main$SubMain.<synthetic: ctor_js>"
[SubMain] => [$create__]
[SubMain] => [SubMain.$clinit();] "jsvarargs.Main$SubMain.<synthetic: ctor_create>"
[SubMain] => [let $instance = new SubMain();] "jsvarargs.Main$SubMain.<synthetic: ctor_create>"
[SubMain] => [$instance.$ctor__jsvarargs_Main_SubMain__void();] "jsvarargs.Main$SubMain.<synthetic: ctor_create>"
[SubMain] => [return $instance;] "jsvarargs.Main$SubMain.<synthetic: ctor_create>"
[SubMain] => [$ctor__jsvarargs_Main_SubMain__void]
[super(10);] => [this.$ctor__jsvarargs_Main__int__void(10);] "jsvarargs.Main$SubMain.<init>"
[f3] => [f3]
[m] => [m] "m"
[numbers] => [numbers] "numbers"
[{
      // multiple arguments.
...      return a;
    }] => [$Arrays.$stampType(numbers, $$int, 1);] "jsvarargs.Main$SubMain.f3"
[int a = super.f3(1, 1, 2);] => [let a = super.f3(1, 1, 2);] "jsvarargs.Main$SubMain.f3"
[a] => [a] "a"
[a += super.f3(1);] => [a = a + super.f3(1) | 0;] "jsvarargs.Main$SubMain.f3"
[a += super.f3(1, new int[] {1, 2});] => [a = a + super.f3(1, 1, 2) | 0;] "jsvarargs.Main$SubMain.f3"
[a += super.f3(1, new int[] {});] => [a = a + super.f3(1) | 0;] "jsvarargs.Main$SubMain.f3"
[int[] ints = new int[] {1, 2};] => [let ints = /**@type {!Array<number>}*/ ($Arrays.$init([1, 2], $$int));] "jsvarargs.Main$SubMain.f3"
[ints] => [ints] "ints"
[a += super.f3(1, ints);] => [a = a + super.f3(1, ...InternalPreconditions.m_checkNotNull__java_lang_Object__java_lang_Object(ints)) | 0;] "jsvarargs.Main$SubMain.f3"
[return a;] => [return a;] "jsvarargs.Main$SubMain.f3"
[SubMain] => [$clinit]
[SubMain] => [SubMain.$clinit = () =>{};] "jsvarargs.Main$SubMain.<clinit>"
[SubMain] => [SubMain.$loadModules();] "jsvarargs.Main$SubMain.<clinit>"
[SubMain] => [Main.$clinit();] "jsvarargs.Main$SubMain.<clinit>"
