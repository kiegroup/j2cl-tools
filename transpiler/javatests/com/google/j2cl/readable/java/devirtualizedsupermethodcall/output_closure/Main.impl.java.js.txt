goog.module('devirtualizedsupermethodcall.Main$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let FooCallsSuperObjectMethod = goog.forwardDeclare('devirtualizedsupermethodcall.FooCallsSuperObjectMethod$impl');
let SubNumber = goog.forwardDeclare('devirtualizedsupermethodcall.SubNumber$impl');
let $Numbers = goog.forwardDeclare('vmbootstrap.Numbers$impl');

class Main extends j_l_Object {
 /** @protected @nodts */
 constructor() {
  super();
 }
 /** @nodts @return {!Main} */
 static $create__() {
  Main.$clinit();
  let $instance = new Main();
  $instance.$ctor__devirtualizedsupermethodcall_Main__void();
  return $instance;
 }
 /** @nodts */
 $ctor__devirtualizedsupermethodcall_Main__void() {
  this.$ctor__java_lang_Object__void();
 }
 /** @nodts */
 m_main__void() {
  let fooCallsSuperObjectMethods = FooCallsSuperObjectMethod.$create__();
  fooCallsSuperObjectMethods.hashCode();
  let sn = SubNumber.$create__();
  $Numbers.m_byteValue__java_lang_Number__byte(sn);
  sn.m_doubleValue__double();
  sn.m_floatValue__float();
  sn.m_intValue__int();
  $Numbers.m_shortValue__java_lang_Number__short(sn);
 }
 /** @nodts */
 static $clinit() {
  Main.$clinit = () =>{};
  Main.$loadModules();
  j_l_Object.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof Main;
 }
 
 /** @nodts */
 static $loadModules() {
  FooCallsSuperObjectMethod = goog.module.get('devirtualizedsupermethodcall.FooCallsSuperObjectMethod$impl');
  SubNumber = goog.module.get('devirtualizedsupermethodcall.SubNumber$impl');
  $Numbers = goog.module.get('vmbootstrap.Numbers$impl');
 }
}
$Util.$setClassMetadata(Main, 'devirtualizedsupermethodcall.Main');

exports = Main;

//# sourceMappingURL=Main.js.map
