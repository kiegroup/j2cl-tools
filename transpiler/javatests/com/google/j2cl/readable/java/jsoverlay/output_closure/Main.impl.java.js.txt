goog.module('jsoverlay.Main$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let j_l_String = goog.forwardDeclare('java.lang.String$impl');
let NativeJsTypeInterfaceWithOverlay_$Overlay = goog.forwardDeclare('jsoverlay.Main.NativeJsTypeInterfaceWithOverlay.$Overlay$impl');
let NativeJsTypeInterfaceWithOverlayImpl = goog.forwardDeclare('jsoverlay.Main.NativeJsTypeInterfaceWithOverlayImpl$impl');
let $Overlay = goog.forwardDeclare('jsoverlay.Main.NativeJsTypeWithOverlay.$Overlay$impl');
let NativeJsTypeInterfaceWithOverlay = goog.forwardDeclare('test.foo.NativeJsTypeInterfaceWithOverlay');
let NativeJsTypeWithOverlay = goog.forwardDeclare('test.foo.NativeJsTypeWithOverlay');
let $Arrays = goog.forwardDeclare('vmbootstrap.Arrays$impl');
let $$int = goog.forwardDeclare('vmbootstrap.primitives.$int$impl');

class Main extends j_l_Object {
 /** @protected @nodts */
 constructor() {
  super();
 }
 /** @nodts @return {!Main} */
 static $create__() {
  Main.$clinit();
  let $instance = new Main();
  $instance.$ctor__jsoverlay_Main__void();
  return $instance;
 }
 /** @nodts */
 $ctor__jsoverlay_Main__void() {
  this.$ctor__java_lang_Object__void();
 }
 /** @nodts */
 m_test__void() {
  let n = new NativeJsTypeWithOverlay();
  $Overlay.m_callM__$devirt__jsoverlay_Main_NativeJsTypeWithOverlay__int(n);
  $Overlay.m_fun__int();
  NativeJsTypeWithOverlay.n();
  $Overlay.m_bar__int();
  $Overlay.m_foo__$devirt__jsoverlay_Main_NativeJsTypeWithOverlay__int(n);
  let a = $Overlay.f_COMPILE_TIME_CONSTANT__jsoverlay_Main_NativeJsTypeWithOverlay_$Overlay + NativeJsTypeWithOverlay.nonJsOverlayField | 0;
  $Overlay.f_staticField__jsoverlay_Main_NativeJsTypeWithOverlay_$Overlay = null;
  $Overlay.m_varargs__arrayOf_int__int(/**@type {!Array<number>}*/ ($Arrays.$init([1, 2, 3], $$int)));
  $Overlay.m_baz__$devirt__jsoverlay_Main_NativeJsTypeWithOverlay__int(n);
  let b = j_l_String.m_valueOf__java_lang_Object__java_lang_String(NativeJsTypeInterfaceWithOverlay_$Overlay.f_COMPILE_TIME_CONSTANT__jsoverlay_Main_NativeJsTypeInterfaceWithOverlay_$Overlay) + j_l_String.m_valueOf__java_lang_Object__java_lang_String(NativeJsTypeInterfaceWithOverlay_$Overlay.f_staticField__jsoverlay_Main_NativeJsTypeInterfaceWithOverlay_$Overlay);
 }
 /** @nodts */
 m_testOverlayInterface__jsoverlay_Main_NativeJsTypeInterfaceWithOverlay__void(/** NativeJsTypeInterfaceWithOverlay */ foo) {
  foo.m();
  NativeJsTypeInterfaceWithOverlay_$Overlay.m_callM__$devirt__jsoverlay_Main_NativeJsTypeInterfaceWithOverlay__int(foo);
 }
 /** @nodts */
 static m_testOverlayInterfaceImpl__void() {
  Main.$clinit();
  let foo = NativeJsTypeInterfaceWithOverlayImpl.$create__();
  foo.m();
  NativeJsTypeInterfaceWithOverlay_$Overlay.m_callM__$devirt__jsoverlay_Main_NativeJsTypeInterfaceWithOverlay__int(foo);
 }
 /** @nodts */
 static $clinit() {
  Main.$clinit = () =>{};
  Main.$loadModules();
  j_l_Object.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof Main;
 }
 
 /** @nodts */
 static $loadModules() {
  j_l_String = goog.module.get('java.lang.String$impl');
  NativeJsTypeInterfaceWithOverlay_$Overlay = goog.module.get('jsoverlay.Main.NativeJsTypeInterfaceWithOverlay.$Overlay$impl');
  NativeJsTypeInterfaceWithOverlayImpl = goog.module.get('jsoverlay.Main.NativeJsTypeInterfaceWithOverlayImpl$impl');
  $Overlay = goog.module.get('jsoverlay.Main.NativeJsTypeWithOverlay.$Overlay$impl');
  NativeJsTypeWithOverlay = goog.module.get('test.foo.NativeJsTypeWithOverlay');
  $Arrays = goog.module.get('vmbootstrap.Arrays$impl');
  $$int = goog.module.get('vmbootstrap.primitives.$int$impl');
 }
}
$Util.$setClassMetadata(Main, 'jsoverlay.Main');

exports = Main;

//# sourceMappingURL=Main.js.map
