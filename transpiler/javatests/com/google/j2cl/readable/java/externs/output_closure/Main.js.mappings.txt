[Main] => [Main]
[Main] => [constructor]
[Main] => [super();] "externs.Main.<synthetic: ctor_js>"
[Main] => [/**@type {Foo} @nodts*/
  this.f_aFoo__externs_Main;] "externs.Main.<synthetic: ctor_js>"
[aFoo] => [f_aFoo__externs_Main]
[Main] => [/**@type {TopLevelExtern.InnerExtern} @nodts*/
  this.f_innerExtern__externs_Main;] "externs.Main.<synthetic: ctor_js>"
[innerExtern] => [f_innerExtern__externs_Main]
[Main] => [/**@type {Inner} @nodts*/
  this.f_inner__externs_Main;] "externs.Main.<synthetic: ctor_js>"
[inner] => [f_inner__externs_Main]
[Main] => [$create__]
[Main] => [Main.$clinit();] "externs.Main.<synthetic: ctor_create>"
[Main] => [let $instance = new Main();] "externs.Main.<synthetic: ctor_create>"
[Main] => [$instance.$ctor__externs_Main__void();] "externs.Main.<synthetic: ctor_create>"
[Main] => [return $instance;] "externs.Main.<synthetic: ctor_create>"
[Main] => [$ctor__externs_Main__void]
[Main] => [this.$ctor__java_lang_Object__void();] "externs.Main.<init>"
[testFooOverlay] => [m_testFooOverlay__externs_Main_FooOverlay__boolean]
[fooOverlay] => [fooOverlay] "fooOverlay"
[return fooOverlay.getFoo().equals("Hello");] => [return j_l_String.m_equals__java_lang_String__java_lang_Object__boolean(fooOverlay.foo, 'Hello');] "externs.Main.testFooOverlay"
[useDirectlyAsFoo] => [useDirectlyAsFoo]
[fooOverlay] => [fooOverlay] "fooOverlay"
[main] => [m_main__arrayOf_java_lang_String__void]
[args] => [args] "args"
[{
    testFooOverlay((FooOverlay) (Object) new FooImpl());
    useDirectlyAsFoo(new FooImpl());
  }] => [Main.$clinit();] "externs.Main.main"
[testFooOverlay((FooOverlay) (Object) new FooImpl());] => [Main.m_testFooOverlay__externs_Main_FooOverlay__boolean(/**@type {!Foo}*/ (FooImpl.$create__()));] "externs.Main.main"
[useDirectlyAsFoo(new FooImpl());] => [Main.useDirectlyAsFoo(FooImpl.$create__());] "externs.Main.main"
[Main] => [$clinit]
[Main] => [Main.$clinit = () =>{};] "externs.Main.<clinit>"
[Main] => [Main.$loadModules();] "externs.Main.<clinit>"
[Main] => [j_l_Object.$clinit();] "externs.Main.<clinit>"
[// Copyright 2017 Google Inc.] => [// Copyright 2017 Google Inc.] "externs.Main.<native>"
[//] => [//] "externs.Main.<native>"
[// Licensed under the Apache License, Version 2.0 (the "License");] => [// Licensed under the Apache License, Version 2.0 (the "License");] "externs.Main.<native>"
[// you may not use this file except in compliance with the License.] => [// you may not use this file except in compliance with the License.] "externs.Main.<native>"
[// You may obtain a copy of the License at] => [// You may obtain a copy of the License at] "externs.Main.<native>"
[//] => [//] "externs.Main.<native>"
[//     https://www.apache.org/licenses/LICENSE-2.0] => [//     https://www.apache.org/licenses/LICENSE-2.0] "externs.Main.<native>"
[//] => [//] "externs.Main.<native>"
[// Unless required by applicable law or agreed to in writing, software] => [// Unless required by applicable law or agreed to in writing, software] "externs.Main.<native>"
[// distributed under the License is distributed on an "AS IS" BASIS,] => [// distributed under the License is distributed on an "AS IS" BASIS,] "externs.Main.<native>"
[// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.] => [// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.] "externs.Main.<native>"
[// See the License for the specific language governing permissions and] => [// See the License for the specific language governing permissions and] "externs.Main.<native>"
[// limitations under the License.] => [// limitations under the License.] "externs.Main.<native>"
[/**] => [/**] "externs.Main.<native>"
[* @param {Foo} foo] => [* @param {Foo} foo] "externs.Main.<native>"
[* @returns {string}] => [* @returns {string}] "externs.Main.<native>"
[*/] => [*/] "externs.Main.<native>"
[function useFoo(foo) {] => [function useFoo(foo) {] "externs.Main.<native>"
[return foo.foo;] => [return foo.foo;] "externs.Main.<native>"
[}] => [}] "externs.Main.<native>"
[/**] => [/**] "externs.Main.<native>"
[* @param {*} foo] => [* @param {*} foo] "externs.Main.<native>"
[* @return {void}] => [* @return {void}] "externs.Main.<native>"
[* @public] => [* @public] "externs.Main.<native>"
[*/] => [*/] "externs.Main.<native>"
[Main.useDirectlyAsFoo = function(foo) {] => [Main.useDirectlyAsFoo = function(foo) {] "externs.Main.<native>"
[useFoo(/** @type {Foo} */ (foo));] => [useFoo(/** @type {Foo} */ (foo));] "externs.Main.<native>"
[};] => [};] "externs.Main.<native>"
