goog.module('functionalinterface.FunctionalInterfaces.WithKtProperty$impl');

const $Util = goog.require('nativebootstrap.Util$impl');

let $LambdaAdaptor = goog.forwardDeclare('functionalinterface.FunctionalInterfaces.WithKtProperty.$LambdaAdaptor$impl');

/**
 * @interface
 */
class WithKtProperty {
 /** @abstract @nodts @return {number} */
 m_size__int() {}
 /** @nodts @return {WithKtProperty} */
 static $adapt(/** ?function():number */ fn) {
  WithKtProperty.$clinit();
  return new $LambdaAdaptor(fn);
 }
 /** @nodts */
 static $clinit() {
  WithKtProperty.$clinit = () =>{};
  WithKtProperty.$loadModules();
 }
 
 static $markImplementor(/** Function */ ctor) {
  ctor.prototype.$implements__functionalinterface_FunctionalInterfaces_WithKtProperty = true;
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance != null && !!instance.$implements__functionalinterface_FunctionalInterfaces_WithKtProperty;
 }
 
 /** @nodts */
 static $loadModules() {
  $LambdaAdaptor = goog.module.get('functionalinterface.FunctionalInterfaces.WithKtProperty.$LambdaAdaptor$impl');
 }
}
WithKtProperty.$markImplementor(/**@type {Function}*/ (WithKtProperty));
$Util.$setClassMetadataForInterface(WithKtProperty, 'functionalinterface.FunctionalInterfaces$WithKtProperty');

exports = WithKtProperty;

//# sourceMappingURL=FunctionalInterfaces$WithKtProperty.js.map
