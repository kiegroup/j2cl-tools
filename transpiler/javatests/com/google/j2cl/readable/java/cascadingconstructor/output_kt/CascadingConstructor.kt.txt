// Generated from "cascadingconstructor/CascadingConstructor.java"
@file:OptIn(ExperimentalObjCName::class, ExperimentalObjCRefinement::class)
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "REPEATED_BOUND",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER")

package cascadingconstructor

import javaemul.lang.*
import kotlin.Int
import kotlin.OptIn
import kotlin.Suppress
import kotlin.experimental.ExperimentalObjCName
import kotlin.experimental.ExperimentalObjCRefinement
import kotlin.jvm.JvmField
import kotlin.native.HiddenFromObjC
import kotlin.native.ObjCName

@ObjCName("J2ktCascadingconstructorCascadingConstructor", exact = true)
open class CascadingConstructor {
 @JvmField
 @HiddenFromObjC
 var a_private_2: Int = 0

 @JvmField
 @HiddenFromObjC
 var b_private_2: Int = 0

 constructor(a: Int, b: Int) {
  this.a_private_2 = a
  this.b_private_2 = b
 }

 constructor(
  @ObjCName("Int") a: Int
 ): this(a, a * 2)
}
