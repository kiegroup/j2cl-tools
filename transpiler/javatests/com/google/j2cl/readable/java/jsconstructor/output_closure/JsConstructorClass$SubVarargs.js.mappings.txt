[SubVarargs] => [SubVarargs]
[SubVarargs] => [constructor]
[i] => [i] "i"
[args] => [args] "args"
[SubVarargs] => [SubVarargs.$clinit();] "jsconstructor.JsConstructorClass$SubVarargs.<init>"
[SubVarargs] => [$Arrays.$stampType(args, $$int, 1);] "jsconstructor.JsConstructorClass$SubVarargs.<init>"
[SubVarargs] => [super(...InternalPreconditions.m_checkNotNull__java_lang_Object__java_lang_Object(args));] "jsconstructor.JsConstructorClass$SubVarargs.<init>"
[SubVarargs] => [this.$ctor__jsconstructor_JsConstructorClass_SubVarargs__java_lang_Object__arrayOf_int__void(i, args);] "jsconstructor.JsConstructorClass$SubVarargs.<init>"
[SubVarargs] => [$ctor__jsconstructor_JsConstructorClass_SubVarargs__java_lang_Object__arrayOf_int__void]
[i] => [i] "i"
[args] => [args] "args"
[SubVarargs] => [$create__int]
[j] => [j] "j"
[SubVarargs] => [SubVarargs.$clinit();] "jsconstructor.JsConstructorClass$SubVarargs.<synthetic: ctor_create>"
[SubVarargs] => [let $instance = new SubVarargs(j_l_Object.$create__(), j);] "jsconstructor.JsConstructorClass$SubVarargs.<synthetic: ctor_create>"
[SubVarargs] => [$instance.$ctor__jsconstructor_JsConstructorClass_SubVarargs__int__void(j);] "jsconstructor.JsConstructorClass$SubVarargs.<synthetic: ctor_create>"
[SubVarargs] => [return $instance;] "jsconstructor.JsConstructorClass$SubVarargs.<synthetic: ctor_create>"
[SubVarargs] => [$ctor__jsconstructor_JsConstructorClass_SubVarargs__int__void]
[j] => [j] "j"
[subNativeInvocation] => [m_subNativeInvocation__void]
[{
      SubVarargs unusedS1 = new SubVarargs(2);
      SubVarargs unusedS2 = new SubVarargs(new Object(), 1, 2, 3);
    }] => [SubVarargs.$clinit();] "jsconstructor.JsConstructorClass$SubVarargs.subNativeInvocation"
[SubVarargs unusedS1 = new SubVarargs(2);] => [let unusedS1 = SubVarargs.$create__int(2);] "jsconstructor.JsConstructorClass$SubVarargs.subNativeInvocation"
[unusedS1] => [unusedS1] "unusedS1"
[SubVarargs unusedS2 = new SubVarargs(new Object(), 1, 2, 3);] => [let unusedS2 = new SubVarargs(j_l_Object.$create__(), 1, 2, 3);] "jsconstructor.JsConstructorClass$SubVarargs.subNativeInvocation"
[unusedS2] => [unusedS2] "unusedS2"
[SubVarargs] => [$clinit]
[SubVarargs] => [SubVarargs.$clinit = () =>{};] "jsconstructor.JsConstructorClass$SubVarargs.<clinit>"
[SubVarargs] => [SubVarargs.$loadModules();] "jsconstructor.JsConstructorClass$SubVarargs.<clinit>"
[SubVarargs] => [Varargs.$clinit();] "jsconstructor.JsConstructorClass$SubVarargs.<clinit>"
