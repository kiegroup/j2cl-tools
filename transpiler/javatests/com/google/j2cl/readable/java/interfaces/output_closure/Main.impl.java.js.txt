goog.module('interfaces.Main$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Implementor = goog.forwardDeclare('interfaces.Main.Implementor$impl');
let Interface = goog.forwardDeclare('interfaces.Main.Interface$impl');

class Main extends j_l_Object {
 /** @protected @nodts */
 constructor() {
  super();
 }
 /** @nodts @return {!Main} */
 static $create__() {
  Main.$clinit();
  let $instance = new Main();
  $instance.$ctor__interfaces_Main__void();
  return $instance;
 }
 /** @nodts */
 $ctor__interfaces_Main__void() {
  this.$ctor__java_lang_Object__void();
 }
 /** @nodts */
 m_testInterfaceMembers__void_$pp_interfaces() {
  let i = Implementor.$create__interfaces_Main(this);
  i.m_interfaceMethod__void();
  i.m_defaultMethod__java_lang_Object__void(null);
  Interface.m_staticInterfaceMethod__void();
  let x = (Implementor.$create__interfaces_Main(this), Interface.f_a__interfaces_Main_Interface) + Interface.f_b__interfaces_Main_Interface | 0;
 }
 /** @nodts */
 static $clinit() {
  Main.$clinit = () =>{};
  Main.$loadModules();
  j_l_Object.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof Main;
 }
 
 /** @nodts */
 static $loadModules() {
  Implementor = goog.module.get('interfaces.Main.Implementor$impl');
  Interface = goog.module.get('interfaces.Main.Interface$impl');
 }
}
$Util.$setClassMetadata(Main, 'interfaces.Main');

exports = Main;

//# sourceMappingURL=Main.js.map
