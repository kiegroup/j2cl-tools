// Generated from "ternaryexpression/TernaryExpression.java"
@file:OptIn(ExperimentalObjCName::class)
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "REPEATED_BOUND",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER")

package ternaryexpression

import javaemul.lang.*
import kotlin.Boolean
import kotlin.Int
import kotlin.OptIn
import kotlin.Suppress
import kotlin.experimental.ExperimentalObjCName
import kotlin.native.ObjCName

@ObjCName("J2ktTernaryexpressionTernaryExpression", exact = true)
open class TernaryExpression {
 @ObjCName("test")
 open fun test() {
  val a: Boolean = true
  val number: Int = if (a) 1 else 2
  val b: Boolean = if (number == 1) number == 2 else number == 1
  val value: Int = (if (b) Int(15) else Int(30))!!.toInt()
 }
}
