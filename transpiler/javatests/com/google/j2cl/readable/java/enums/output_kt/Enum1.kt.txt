// Generated from "enums/Enum1.java"
@file:OptIn(ExperimentalObjCName::class, ExperimentalObjCRefinement::class)
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "REPEATED_BOUND",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER")

package enums

import javaemul.lang.*
import java.util.function.Function
import kotlin.Any
import kotlin.Array
import kotlin.Enum
import kotlin.Int
import kotlin.OptIn
import kotlin.Suppress
import kotlin.experimental.ExperimentalObjCName
import kotlin.experimental.ExperimentalObjCRefinement
import kotlin.jvm.JvmField
import kotlin.jvm.JvmStatic
import kotlin.native.HiddenFromObjC
import kotlin.native.ObjCName

@ObjCName("J2ktEnumsEnum1", exact = true)
enum class Enum1 {
 @ObjCName("V1")
 V1,
 @ObjCName("V2")
 V2;
}

enum class Enum2 {
 VALUE1(2),
 VALUE2(Enum1.V1 as Enum<*>?),
 VALUE3,
 VALUE4(5) {};

 @JvmField
 @HiddenFromObjC
 var foo_pp_enums: Int = Enum1.V1.ordinal

 constructor(foo: Int) {
  this.foo_pp_enums = foo
 }

 constructor(foo: Enum<*>?): this(foo!!.ordinal)

 constructor(vararg somePars: Any?): this(somePars!!.size) {
  val somePars_1: Array<Any?>? = somePars as Array<Any?>?
 }

 @HiddenFromObjC
 open fun specialMethods_pp_enums() {
  val o1: Int = Enum2.valueOf(null!!)!!.ordinal
  val o2: Int = Enum2.valueOf("VALUE1")!!.ordinal
  val l: Int = Enum2.values()!!.size
 }

 companion object {
  @JvmStatic
  @HiddenFromObjC
  fun f_pp_enums(o: Any?): Enum2? {
   return null
  }

  @JvmField
  @HiddenFromObjC
  var C_pp_enums: Enum2? = Enum2.f_pp_enums(Any())
 }
}

enum class Enum3 {
 VALUE1(Function<Int?, Int?> { v: Int? ->
  return@Function Int.valueOf(1 + v!!.toInt())
 });

 constructor(function: Function<Int?, Int?>?)
}
