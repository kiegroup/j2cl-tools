[TypeArgumentsInference] => [TypeArgumentsInference]
[TypeArgumentsInference] => [constructor]
[TypeArgumentsInference] => [super();] "nullability.defaultnotnullable.TypeArgumentsInference.<synthetic: ctor_js>"
[TypeArgumentsInference] => [$create__]
[TypeArgumentsInference] => [TypeArgumentsInference.$clinit();] "nullability.defaultnotnullable.TypeArgumentsInference.<synthetic: ctor_create>"
[TypeArgumentsInference] => [let $instance = new TypeArgumentsInference();] "nullability.defaultnotnullable.TypeArgumentsInference.<synthetic: ctor_create>"
[TypeArgumentsInference] => [$instance.$ctor__nullability_defaultnotnullable_TypeArgumentsInference__void();] "nullability.defaultnotnullable.TypeArgumentsInference.<synthetic: ctor_create>"
[TypeArgumentsInference] => [return $instance;] "nullability.defaultnotnullable.TypeArgumentsInference.<synthetic: ctor_create>"
[TypeArgumentsInference] => [$ctor__nullability_defaultnotnullable_TypeArgumentsInference__void]
[TypeArgumentsInference] => [this.$ctor__java_lang_Object__void();] "nullability.defaultnotnullable.TypeArgumentsInference.<init>"
[wildcardPair] => [m_wildcardPair__nullability_defaultnotnullable_TypeArgumentsInference_Pair]
[{
    return new Pair<>();
  }] => [TypeArgumentsInference.$clinit();] "nullability.defaultnotnullable.TypeArgumentsInference.wildcardPair"
[return new Pair<>();] => [return /**@type {!Pair<K, !*>}*/ (Pair.$create__());] "nullability.defaultnotnullable.TypeArgumentsInference.wildcardPair"
[pairIdentity] => [m_pairIdentity__nullability_defaultnotnullable_TypeArgumentsInference_Pair__nullability_defaultnotnullable_TypeArgumentsInference_Pair]
[pair] => [pair] "pair"
[{
    return pair;
  }] => [TypeArgumentsInference.$clinit();] "nullability.defaultnotnullable.TypeArgumentsInference.pairIdentity"
[return pair;] => [return pair;] "nullability.defaultnotnullable.TypeArgumentsInference.pairIdentity"
[wildcardPairAndIdentity] => [m_wildcardPairAndIdentity__nullability_defaultnotnullable_TypeArgumentsInference_Pair]
[{
    // Since it's not possible to specify explicit type arguments for "pairIdentity" method call,
...    return pairIdentity(wildcardPair());
  }] => [TypeArgumentsInference.$clinit();] "nullability.defaultnotnullable.TypeArgumentsInference.wildcardPairAndIdentity"
[return pairIdentity(wildcardPair());] => [return /**@type {!Pair<K, !*>}*/ (TypeArgumentsInference.m_pairIdentity__nullability_defaultnotnullable_TypeArgumentsInference_Pair__nullability_defaultnotnullable_TypeArgumentsInference_Pair(/**@type {!Pair<K, *>}*/ (TypeArgumentsInference.m_wildcardPair__nullability_defaultnotnullable_TypeArgumentsInference_Pair())));] "nullability.defaultnotnullable.TypeArgumentsInference.wildcardPairAndIdentity"
[TypeArgumentsInference] => [$clinit]
[TypeArgumentsInference] => [TypeArgumentsInference.$clinit = () =>{};] "nullability.defaultnotnullable.TypeArgumentsInference.<clinit>"
[TypeArgumentsInference] => [TypeArgumentsInference.$loadModules();] "nullability.defaultnotnullable.TypeArgumentsInference.<clinit>"
[TypeArgumentsInference] => [j_l_Object.$clinit();] "nullability.defaultnotnullable.TypeArgumentsInference.<clinit>"
