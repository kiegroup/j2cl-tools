 ;;; Code for jsoptional.Main.Function [type definition]
 (type $jsoptional.Main.Function.vtable (struct_subtype
  (field $m_f1__java_lang_String__arrayOf_java_lang_Object__java_lang_Object (ref $function.m_f1__java_lang_String__arrayOf_java_lang_Object__java_lang_Object))
  data)
 )

 ;;; Code for jsoptional.Main.I [type definition]
 (type $jsoptional.Main.I.vtable (struct_subtype
  (field $m_m__java_lang_Object__java_lang_Object__void (ref $function.m_m__java_lang_Object__java_lang_Object__void))
  data)
 )

 ;;; Code for jsoptional.Main [type definition]
 (type $jsoptional.Main (struct_subtype
  (field $vtable (ref $jsoptional.Main.vtable))
  (field $itable (ref $itable))
  (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
  (field $f_f__jsoptional_Main (mut (ref null $java.lang.Object)))
  $java.lang.Object)
 )
 (type $jsoptional.Main.vtable (struct_subtype
  (field $m_equals__java_lang_Object__boolean (ref $function.m_equals__java_lang_Object__boolean))
  (field $m_hashCode__int (ref $function.m_hashCode__int))
  (field $m_toString__java_lang_String (ref $function.m_toString__java_lang_String))
  (field $m_getClass__java_lang_Class (ref $function.m_getClass__java_lang_Class))
  (field $$getClassImpl__java_lang_Class (ref $function.$getClassImpl__java_lang_Class))
  (field $m_method1__int__java_lang_Double__java_lang_Integer__void (ref $function.m_method1__int__java_lang_Double__java_lang_Integer__void))
  (field $m_method2__java_lang_String__java_lang_Double__arrayOf_java_lang_Boolean__void (ref $function.m_method2__java_lang_String__java_lang_Double__arrayOf_java_lang_Boolean__void))
  (field $m_testFunction__jsoptional_Main_Function__void (ref $function.m_testFunction__jsoptional_Main_Function__void))
  (field $m_testOptionalFunction__jsoptional_Main_Function__void (ref $function.m_testOptionalFunction__jsoptional_Main_Function__void))
  $java.lang.Object.vtable)
 )

 ;;; Code for jsoptional.Main.$LambdaImplementor$1 [type definition]
 (type $jsoptional.Main.$LambdaImplementor$1 (struct_subtype
  (field $vtable (ref $jsoptional.Main.$LambdaImplementor$1.vtable))
  (field $itable (ref $jsoptional.Main.$LambdaImplementor$1.itable))
  (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
  $java.lang.Object)
 )
 (type $jsoptional.Main.$LambdaImplementor$1.vtable (struct_subtype
  (field $m_equals__java_lang_Object__boolean (ref $function.m_equals__java_lang_Object__boolean))
  (field $m_hashCode__int (ref $function.m_hashCode__int))
  (field $m_toString__java_lang_String (ref $function.m_toString__java_lang_String))
  (field $m_getClass__java_lang_Class (ref $function.m_getClass__java_lang_Class))
  (field $$getClassImpl__java_lang_Class (ref $function.$getClassImpl__java_lang_Class))
  (field $m_f1__java_lang_String__arrayOf_java_lang_Object__java_lang_Object (ref $function.m_f1__java_lang_String__arrayOf_java_lang_Object__java_lang_Object))
  $java.lang.Object.vtable)
 )
 (type $jsoptional.Main.$LambdaImplementor$1.itable (struct_subtype
 (field $slot0 (ref $jsoptional.Main.Function.vtable))
 (field $slot1 (ref null struct))
 (field $slot2 (ref null struct))
 (field $slot3 (ref null struct))
 (field $slot4 (ref null struct))
 (field $slot5 (ref null struct))
 (field $slot6 (ref null struct))
  $itable))

 ;;; Code for jsoptional.Main.AFunction [type definition]
 (type $jsoptional.Main.AFunction (struct_subtype
  (field $vtable (ref $jsoptional.Main.AFunction.vtable))
  (field $itable (ref $jsoptional.Main.AFunction.itable))
  (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
  $java.lang.Object)
 )
 (type $jsoptional.Main.AFunction.vtable (struct_subtype
  (field $m_equals__java_lang_Object__boolean (ref $function.m_equals__java_lang_Object__boolean))
  (field $m_hashCode__int (ref $function.m_hashCode__int))
  (field $m_toString__java_lang_String (ref $function.m_toString__java_lang_String))
  (field $m_getClass__java_lang_Class (ref $function.m_getClass__java_lang_Class))
  (field $$getClassImpl__java_lang_Class (ref $function.$getClassImpl__java_lang_Class))
  (field $m_f1__java_lang_String__arrayOf_java_lang_Object__java_lang_Object (ref $function.m_f1__java_lang_String__arrayOf_java_lang_Object__java_lang_Object))
  $java.lang.Object.vtable)
 )
 (type $jsoptional.Main.AFunction.itable (struct_subtype
 (field $slot0 (ref $jsoptional.Main.Function.vtable))
 (field $slot1 (ref null struct))
 (field $slot2 (ref null struct))
 (field $slot3 (ref null struct))
 (field $slot4 (ref null struct))
 (field $slot5 (ref null struct))
 (field $slot6 (ref null struct))
  $itable))

 ;;; Code for jsoptional.Main.TemplatedSubtype [type definition]
 (type $jsoptional.Main.TemplatedSubtype (struct_subtype
  (field $vtable (ref $jsoptional.Main.TemplatedSubtype.vtable))
  (field $itable (ref $jsoptional.Main.TemplatedSubtype.itable))
  (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
  $java.lang.Object)
 )
 (type $jsoptional.Main.TemplatedSubtype.vtable (struct_subtype
  (field $m_equals__java_lang_Object__boolean (ref $function.m_equals__java_lang_Object__boolean))
  (field $m_hashCode__int (ref $function.m_hashCode__int))
  (field $m_toString__java_lang_String (ref $function.m_toString__java_lang_String))
  (field $m_getClass__java_lang_Class (ref $function.m_getClass__java_lang_Class))
  (field $$getClassImpl__java_lang_Class (ref $function.$getClassImpl__java_lang_Class))
  (field $m_m__java_lang_String__java_lang_Object__void (ref $function.m_m__java_lang_String__java_lang_Object__void))
  (field $m_m__java_lang_Object__java_lang_Object__void (ref $function.m_m__java_lang_Object__java_lang_Object__void))
  $java.lang.Object.vtable)
 )
 (type $jsoptional.Main.TemplatedSubtype.itable (struct_subtype
 (field $slot0 (ref $jsoptional.Main.I.vtable))
 (field $slot1 (ref null struct))
 (field $slot2 (ref null struct))
 (field $slot3 (ref null struct))
 (field $slot4 (ref null struct))
 (field $slot5 (ref null struct))
 (field $slot6 (ref null struct))
  $itable))

 ;;; Code for jsoptional.Main.SpecializedSubtype [type definition]
 (type $jsoptional.Main.SpecializedSubtype (struct_subtype
  (field $vtable (ref $jsoptional.Main.SpecializedSubtype.vtable))
  (field $itable (ref $jsoptional.Main.SpecializedSubtype.itable))
  (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
  (field $$outer_this__jsoptional_Main_SpecializedSubtype (ref null $jsoptional.Main))
  $java.lang.Object)
 )
 (type $jsoptional.Main.SpecializedSubtype.vtable (struct_subtype
  (field $m_equals__java_lang_Object__boolean (ref $function.m_equals__java_lang_Object__boolean))
  (field $m_hashCode__int (ref $function.m_hashCode__int))
  (field $m_toString__java_lang_String (ref $function.m_toString__java_lang_String))
  (field $m_getClass__java_lang_Class (ref $function.m_getClass__java_lang_Class))
  (field $$getClassImpl__java_lang_Class (ref $function.$getClassImpl__java_lang_Class))
  (field $m_m__java_lang_String__java_lang_Object__void (ref $function.m_m__java_lang_String__java_lang_Object__void))
  (field $m_m__java_lang_Object__java_lang_Object__void (ref $function.m_m__java_lang_Object__java_lang_Object__void))
  $java.lang.Object.vtable)
 )
 (type $jsoptional.Main.SpecializedSubtype.itable (struct_subtype
 (field $slot0 (ref $jsoptional.Main.I.vtable))
 (field $slot1 (ref null struct))
 (field $slot2 (ref null struct))
 (field $slot3 (ref null struct))
 (field $slot4 (ref null struct))
 (field $slot5 (ref null struct))
 (field $slot6 (ref null struct))
  $itable))

 ;;; Code for jsoptional.Main.NonJsTypeSubtype [type definition]
 (type $jsoptional.Main.NonJsTypeSubtype (struct_subtype
  (field $vtable (ref $jsoptional.Main.NonJsTypeSubtype.vtable))
  (field $itable (ref $jsoptional.Main.NonJsTypeSubtype.itable))
  (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
  $java.lang.Object)
 )
 (type $jsoptional.Main.NonJsTypeSubtype.vtable (struct_subtype
  (field $m_equals__java_lang_Object__boolean (ref $function.m_equals__java_lang_Object__boolean))
  (field $m_hashCode__int (ref $function.m_hashCode__int))
  (field $m_toString__java_lang_String (ref $function.m_toString__java_lang_String))
  (field $m_getClass__java_lang_Class (ref $function.m_getClass__java_lang_Class))
  (field $$getClassImpl__java_lang_Class (ref $function.$getClassImpl__java_lang_Class))
  (field $m_m__java_lang_String__java_lang_Object__void (ref $function.m_m__java_lang_String__java_lang_Object__void))
  (field $m_m__java_lang_Object__java_lang_Object__void (ref $function.m_m__java_lang_Object__java_lang_Object__void))
  $java.lang.Object.vtable)
 )
 (type $jsoptional.Main.NonJsTypeSubtype.itable (struct_subtype
 (field $slot0 (ref $jsoptional.Main.I.vtable))
 (field $slot1 (ref null struct))
 (field $slot2 (ref null struct))
 (field $slot3 (ref null struct))
 (field $slot4 (ref null struct))
 (field $slot5 (ref null struct))
 (field $slot6 (ref null struct))
  $itable))

;;; Code for jsoptional.Main [vtable.init]
(global $jsoptional.Main.vtable (ref $jsoptional.Main.vtable)
 (struct.new $jsoptional.Main.vtable
  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
  (ref.func $m_hashCode__int@java.lang.Object)
  (ref.func $m_toString__java_lang_String@java.lang.Object)
  (ref.func $m_getClass__java_lang_Class@java.lang.Object)
  (ref.func $$getClassImpl__java_lang_Class@jsoptional.Main)
  (ref.func $m_method1__int__java_lang_Double__java_lang_Integer__void@jsoptional.Main)
  (ref.func $m_method2__java_lang_String__java_lang_Double__arrayOf_java_lang_Boolean__void@jsoptional.Main)
  (ref.func $m_testFunction__jsoptional_Main_Function__void@jsoptional.Main)
  (ref.func $m_testOptionalFunction__jsoptional_Main_Function__void@jsoptional.Main)
 )
)

;;; Code for jsoptional.Main.$LambdaImplementor$1 [vtable.init]
(global $jsoptional.Main.$LambdaImplementor$1.vtable (ref $jsoptional.Main.$LambdaImplementor$1.vtable)
 (struct.new $jsoptional.Main.$LambdaImplementor$1.vtable
  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
  (ref.func $m_hashCode__int@java.lang.Object)
  (ref.func $m_toString__java_lang_String@java.lang.Object)
  (ref.func $m_getClass__java_lang_Class@java.lang.Object)
  (ref.func $$getClassImpl__java_lang_Class@jsoptional.Main.$LambdaImplementor$1)
  (ref.func $m_f1__java_lang_String__arrayOf_java_lang_Object__java_lang_Object@jsoptional.Main.$LambdaImplementor$1)
 )
)

;;; Code for jsoptional.Main.$LambdaImplementor$1 [itable.init]
(global $jsoptional.Main.$LambdaImplementor$1.itable (ref $jsoptional.Main.$LambdaImplementor$1.itable) (struct.new $jsoptional.Main.$LambdaImplementor$1.itable
 (struct.new $jsoptional.Main.Function.vtable
  (ref.func $m_f1__java_lang_String__arrayOf_java_lang_Object__java_lang_Object@jsoptional.Main.$LambdaImplementor$1)
 )
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
 ))

;;; Code for jsoptional.Main.AFunction [vtable.init]
(global $jsoptional.Main.AFunction.vtable (ref $jsoptional.Main.AFunction.vtable)
 (struct.new $jsoptional.Main.AFunction.vtable
  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
  (ref.func $m_hashCode__int@java.lang.Object)
  (ref.func $m_toString__java_lang_String@java.lang.Object)
  (ref.func $m_getClass__java_lang_Class@java.lang.Object)
  (ref.func $$getClassImpl__java_lang_Class@jsoptional.Main.AFunction)
  (ref.func $m_f1__java_lang_String__arrayOf_java_lang_Object__java_lang_Object@jsoptional.Main.AFunction)
 )
)

;;; Code for jsoptional.Main.AFunction [itable.init]
(global $jsoptional.Main.AFunction.itable (ref $jsoptional.Main.AFunction.itable) (struct.new $jsoptional.Main.AFunction.itable
 (struct.new $jsoptional.Main.Function.vtable
  (ref.func $m_f1__java_lang_String__arrayOf_java_lang_Object__java_lang_Object@jsoptional.Main.AFunction)
 )
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
 ))

;;; Code for jsoptional.Main.TemplatedSubtype [vtable.init]
(global $jsoptional.Main.TemplatedSubtype.vtable (ref $jsoptional.Main.TemplatedSubtype.vtable)
 (struct.new $jsoptional.Main.TemplatedSubtype.vtable
  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
  (ref.func $m_hashCode__int@java.lang.Object)
  (ref.func $m_toString__java_lang_String@java.lang.Object)
  (ref.func $m_getClass__java_lang_Class@java.lang.Object)
  (ref.func $$getClassImpl__java_lang_Class@jsoptional.Main.TemplatedSubtype)
  (ref.func $m_m__java_lang_String__java_lang_Object__void@jsoptional.Main.TemplatedSubtype)
  (ref.func $m_m__java_lang_Object__java_lang_Object__void@jsoptional.Main.TemplatedSubtype)
 )
)

;;; Code for jsoptional.Main.TemplatedSubtype [itable.init]
(global $jsoptional.Main.TemplatedSubtype.itable (ref $jsoptional.Main.TemplatedSubtype.itable) (struct.new $jsoptional.Main.TemplatedSubtype.itable
 (struct.new $jsoptional.Main.I.vtable
  (ref.func $m_m__java_lang_Object__java_lang_Object__void@jsoptional.Main.TemplatedSubtype)
 )
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
 ))

;;; Code for jsoptional.Main.SpecializedSubtype [vtable.init]
(global $jsoptional.Main.SpecializedSubtype.vtable (ref $jsoptional.Main.SpecializedSubtype.vtable)
 (struct.new $jsoptional.Main.SpecializedSubtype.vtable
  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
  (ref.func $m_hashCode__int@java.lang.Object)
  (ref.func $m_toString__java_lang_String@java.lang.Object)
  (ref.func $m_getClass__java_lang_Class@java.lang.Object)
  (ref.func $$getClassImpl__java_lang_Class@jsoptional.Main.SpecializedSubtype)
  (ref.func $m_m__java_lang_String__java_lang_Object__void@jsoptional.Main.SpecializedSubtype)
  (ref.func $m_m__java_lang_Object__java_lang_Object__void@jsoptional.Main.SpecializedSubtype)
 )
)

;;; Code for jsoptional.Main.SpecializedSubtype [itable.init]
(global $jsoptional.Main.SpecializedSubtype.itable (ref $jsoptional.Main.SpecializedSubtype.itable) (struct.new $jsoptional.Main.SpecializedSubtype.itable
 (struct.new $jsoptional.Main.I.vtable
  (ref.func $m_m__java_lang_Object__java_lang_Object__void@jsoptional.Main.SpecializedSubtype)
 )
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
 ))

;;; Code for jsoptional.Main.NonJsTypeSubtype [vtable.init]
(global $jsoptional.Main.NonJsTypeSubtype.vtable (ref $jsoptional.Main.NonJsTypeSubtype.vtable)
 (struct.new $jsoptional.Main.NonJsTypeSubtype.vtable
  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
  (ref.func $m_hashCode__int@java.lang.Object)
  (ref.func $m_toString__java_lang_String@java.lang.Object)
  (ref.func $m_getClass__java_lang_Class@java.lang.Object)
  (ref.func $$getClassImpl__java_lang_Class@jsoptional.Main.NonJsTypeSubtype)
  (ref.func $m_m__java_lang_String__java_lang_Object__void@jsoptional.Main.NonJsTypeSubtype)
  (ref.func $m_m__java_lang_Object__java_lang_Object__void@jsoptional.Main.NonJsTypeSubtype)
 )
)

;;; Code for jsoptional.Main.NonJsTypeSubtype [itable.init]
(global $jsoptional.Main.NonJsTypeSubtype.itable (ref $jsoptional.Main.NonJsTypeSubtype.itable) (struct.new $jsoptional.Main.NonJsTypeSubtype.itable
 (struct.new $jsoptional.Main.I.vtable
  (ref.func $m_m__java_lang_Object__java_lang_Object__void@jsoptional.Main.NonJsTypeSubtype)
 )
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
 ))

;;; Code for jsoptional.Main [static fields]
(global $f_$initialized__jsoptional_Main (mut i32) (i32.const 0))
(global $f_$class__jsoptional_Main (mut (ref null $java.lang.Class)) (ref.null $java.lang.Class))
(global $f_$string_|jsoptional.Main|__jsoptional_Main (mut (ref null $java.lang.String)) (ref.null $java.lang.String))

;;; Code for jsoptional.Main.$LambdaImplementor$1 [static fields]
(global $f_$initialized__jsoptional_Main_$LambdaImplementor$1 (mut i32) (i32.const 0))
(global $f_$class__jsoptional_Main_$LambdaImplementor$1 (mut (ref null $java.lang.Class)) (ref.null $java.lang.Class))
(global $f_$string_|jsoptional.M...|__jsoptional_Main_$LambdaImplementor$1 (mut (ref null $java.lang.String)) (ref.null $java.lang.String))

;;; Code for jsoptional.Main.Function [static fields]
(global $f_$initialized__jsoptional_Main_Function (mut i32) (i32.const 0))
(global $f_$class__jsoptional_Main_Function (mut (ref null $java.lang.Class)) (ref.null $java.lang.Class))
(global $f_$string_|jsoptional.M...|__jsoptional_Main_Function (mut (ref null $java.lang.String)) (ref.null $java.lang.String))

;;; Code for jsoptional.Main.AFunction [static fields]
(global $f_$initialized__jsoptional_Main_AFunction (mut i32) (i32.const 0))
(global $f_$class__jsoptional_Main_AFunction (mut (ref null $java.lang.Class)) (ref.null $java.lang.Class))
(global $f_$string_|jsoptional.M...|__jsoptional_Main_AFunction (mut (ref null $java.lang.String)) (ref.null $java.lang.String))

;;; Code for jsoptional.Main.I [static fields]
(global $f_$initialized__jsoptional_Main_I (mut i32) (i32.const 0))
(global $f_$class__jsoptional_Main_I (mut (ref null $java.lang.Class)) (ref.null $java.lang.Class))
(global $f_$string_|jsoptional.M...|__jsoptional_Main_I (mut (ref null $java.lang.String)) (ref.null $java.lang.String))

;;; Code for jsoptional.Main.TemplatedSubtype [static fields]
(global $f_$initialized__jsoptional_Main_TemplatedSubtype (mut i32) (i32.const 0))
(global $f_$class__jsoptional_Main_TemplatedSubtype (mut (ref null $java.lang.Class)) (ref.null $java.lang.Class))
(global $f_$string_|jsoptional.M...|__jsoptional_Main_TemplatedSubtype (mut (ref null $java.lang.String)) (ref.null $java.lang.String))

;;; Code for jsoptional.Main.SpecializedSubtype [static fields]
(global $f_$initialized__jsoptional_Main_SpecializedSubtype (mut i32) (i32.const 0))
(global $f_$class__jsoptional_Main_SpecializedSubtype (mut (ref null $java.lang.Class)) (ref.null $java.lang.Class))
(global $f_$string_|jsoptional.M...|__jsoptional_Main_SpecializedSubtype (mut (ref null $java.lang.String)) (ref.null $java.lang.String))

;;; Code for jsoptional.Main.NonJsTypeSubtype [static fields]
(global $f_$initialized__jsoptional_Main_NonJsTypeSubtype (mut i32) (i32.const 0))
(global $f_$class__jsoptional_Main_NonJsTypeSubtype (mut (ref null $java.lang.Class)) (ref.null $java.lang.Class))
(global $f_$string_|jsoptional.M...|__jsoptional_Main_NonJsTypeSubtype (mut (ref null $java.lang.String)) (ref.null $java.lang.String))

;;; Code for jsoptional.Main.Function [methods]

;;; void Function.$clinit()
(func $$clinit__void@jsoptional.Main.Function
 ;;@ jsoptional/Main.java:32:12
 (block
  ;;@ jsoptional/Main.java:32:12
  (if (global.get $f_$initialized__jsoptional_Main_Function)
   (then
    ;;@ jsoptional/Main.java:32:12
    (return )
   )
  )
  ;;@ jsoptional/Main.java:32:12
  (global.set $f_$initialized__jsoptional_Main_Function (i32.const 1))
 )
)

;;; Class<T> Function.$getClassMetadata()
(func $$getClassMetadata__java_lang_Class@jsoptional.Main.Function
 (result (ref null $java.lang.Class))
 (block
  (if (ref.eq (global.get $f_$class__jsoptional_Main_Function) (ref.null $java.lang.Class))
   (then
    (global.set $f_$class__jsoptional_Main_Function (call $m_createForInterface__java_lang_String__java_lang_Class@java.lang.Class (call $function.no.side.effects.$getString_|jsoptional.M...|__java_lang_String (ref.func $$getString_|jsoptional.M...|__java_lang_String@jsoptional.Main.Function) )))
   )
  )
  (return (global.get $f_$class__jsoptional_Main_Function))
 )
)

;;; String Function.$getString_|jsoptional.M...|()
(func $$getString_|jsoptional.M...|__java_lang_String@jsoptional.Main.Function
 (result (ref null $java.lang.String))
 (block
  (if (ref.eq (global.get $f_$string_|jsoptional.M...|__jsoptional_Main_Function) (ref.null $java.lang.String))
   (then
    (global.set $f_$string_|jsoptional.M...|__jsoptional_Main_Function (call $m_fromJsString__java_lang_String_NativeString__java_lang_String@java.lang.String (string.const "jsoptional.Main$Function")))
   )
  )
  (return (global.get $f_$string_|jsoptional.M...|__jsoptional_Main_Function))
 )
)

;;; Code for jsoptional.Main.I [methods]

;;; void I.$clinit()
(func $$clinit__void@jsoptional.Main.I
 ;;@ jsoptional/Main.java:54:12
 (block
  ;;@ jsoptional/Main.java:54:12
  (if (global.get $f_$initialized__jsoptional_Main_I)
   (then
    ;;@ jsoptional/Main.java:54:12
    (return )
   )
  )
  ;;@ jsoptional/Main.java:54:12
  (global.set $f_$initialized__jsoptional_Main_I (i32.const 1))
 )
)

;;; Class<T> I.$getClassMetadata()
(func $$getClassMetadata__java_lang_Class@jsoptional.Main.I
 (result (ref null $java.lang.Class))
 (block
  (if (ref.eq (global.get $f_$class__jsoptional_Main_I) (ref.null $java.lang.Class))
   (then
    (global.set $f_$class__jsoptional_Main_I (call $m_createForInterface__java_lang_String__java_lang_Class@java.lang.Class (call $function.no.side.effects.$getString_|jsoptional.M...|__java_lang_String (ref.func $$getString_|jsoptional.M...|__java_lang_String@jsoptional.Main.I) )))
   )
  )
  (return (global.get $f_$class__jsoptional_Main_I))
 )
)

;;; String I.$getString_|jsoptional.M...|()
(func $$getString_|jsoptional.M...|__java_lang_String@jsoptional.Main.I
 (result (ref null $java.lang.String))
 (block
  (if (ref.eq (global.get $f_$string_|jsoptional.M...|__jsoptional_Main_I) (ref.null $java.lang.String))
   (then
    (global.set $f_$string_|jsoptional.M...|__jsoptional_Main_I (call $m_fromJsString__java_lang_String_NativeString__java_lang_String@java.lang.String (string.const "jsoptional.Main$I")))
   )
  )
  (return (global.get $f_$string_|jsoptional.M...|__jsoptional_Main_I))
 )
)

;;; Code for jsoptional.Main [methods]

;;; void Main.method1(int i1, Double d, Integer i)
(func $m_method1__int__java_lang_Double__java_lang_Integer__void@jsoptional.Main
 (type $function.m_method1__int__java_lang_Double__java_lang_Integer__void)
 (param $this.untyped (ref $java.lang.Object))
 (param $i1 i32)
 (param $d (ref null $java.lang.Double))
 (param $i (ref null $java.lang.Integer))
 ;;@ jsoptional/Main.java:26:14
 (local $this (ref null $jsoptional.Main))
 (local.set $this (ref.cast_static $jsoptional.Main (local.get $this.untyped)))
 (block
 )
)
(elem declare func $m_method1__int__java_lang_Double__java_lang_Integer__void@jsoptional.Main)

;;; void Main.method2(String s1, Double d, Boolean... i)
(func $m_method2__java_lang_String__java_lang_Double__arrayOf_java_lang_Boolean__void@jsoptional.Main
 (type $function.m_method2__java_lang_String__java_lang_Double__arrayOf_java_lang_Boolean__void)
 (param $this.untyped (ref $java.lang.Object))
 (param $s1 (ref null $java.lang.String))
 (param $d (ref null $java.lang.Double))
 (param $i (ref null $javaemul.internal.WasmArray.OfObject))
 ;;@ jsoptional/Main.java:29:14
 (local $this (ref null $jsoptional.Main))
 (local.set $this (ref.cast_static $jsoptional.Main (local.get $this.untyped)))
 (block
 )
)
(elem declare func $m_method2__java_lang_String__java_lang_Double__arrayOf_java_lang_Boolean__void@jsoptional.Main)

;;; Main Main.$create(String a)
(func $$create__java_lang_String@jsoptional.Main
 (param $a (ref null $java.lang.String))
 (result (ref null $jsoptional.Main))
 ;;@ jsoptional/Main.java:39:9
 (local $$instance (ref null $jsoptional.Main))
 (block
  ;;@ jsoptional/Main.java:39:9
  (local.set $$instance (struct.new $jsoptional.Main (ref.as_non_null (global.get $jsoptional.Main.vtable)) (ref.as_non_null (global.get $itable.empty)) (i32.const 0) (ref.null $java.lang.Object)))
  ;;@ jsoptional/Main.java:39:9
  (call $$ctor__java_lang_String__void_$p_jsoptional_Main@jsoptional.Main (ref.as_non_null (local.get $$instance))(local.get $a))
  ;;@ jsoptional/Main.java:39:9
  (return (local.get $$instance))
 )
)

;;; void Main.$ctor(String a)
(func $$ctor__java_lang_String__void_$p_jsoptional_Main@jsoptional.Main
 (param $this (ref null $jsoptional.Main))
 (param $a (ref null $java.lang.String))
 ;;@ jsoptional/Main.java:39:9
 (block
  ;;@ jsoptional/Main.java:39:36
  (call $$clinit__void@jsoptional.Main )
  ;;@ jsoptional/Main.java:39:36
  (call $$ctor__void_$p_java_lang_Object@java.lang.Object (ref.as_non_null (local.get $this)))
  ;;@ jsoptional/Main.java:39:36
  (call $$init__void_$p_jsoptional_Main@jsoptional.Main (ref.as_non_null (local.get $this)))
 )
)

;;; void Main.testFunction(Function f)
(func $m_testFunction__jsoptional_Main_Function__void@jsoptional.Main
 (type $function.m_testFunction__jsoptional_Main_Function__void)
 (param $this.untyped (ref $java.lang.Object))
 (param $f (ref null $java.lang.Object))
 ;;@ jsoptional/Main.java:48:14
 (local $this (ref null $jsoptional.Main))
 (local.set $this (ref.cast_static $jsoptional.Main (local.get $this.untyped)))
 (block
 )
)
(elem declare func $m_testFunction__jsoptional_Main_Function__void@jsoptional.Main)

;;; void Main.testOptionalFunction(Function f)
(func $m_testOptionalFunction__jsoptional_Main_Function__void@jsoptional.Main
 (type $function.m_testOptionalFunction__jsoptional_Main_Function__void)
 (param $this.untyped (ref $java.lang.Object))
 (param $f (ref null $java.lang.Object))
 ;;@ jsoptional/Main.java:51:14
 (local $this (ref null $jsoptional.Main))
 (local.set $this (ref.cast_static $jsoptional.Main (local.get $this.untyped)))
 (block
 )
)
(elem declare func $m_testOptionalFunction__jsoptional_Main_Function__void@jsoptional.Main)

;;; void Main.$init()
(func $$init__void_$p_jsoptional_Main@jsoptional.Main
 (param $this (ref null $jsoptional.Main))
 ;;@ jsoptional/Main.java:24:13
 (block
  ;;@ jsoptional/Main.java:36:2
  (struct.set $jsoptional.Main $f_f__jsoptional_Main (local.get $this) (call $$create__@jsoptional.Main.$LambdaImplementor$1 ))
 )
)

;;; void Main.$clinit()
(func $$clinit__void@jsoptional.Main
 ;;@ jsoptional/Main.java:24:13
 (block
  ;;@ jsoptional/Main.java:24:13
  (if (global.get $f_$initialized__jsoptional_Main)
   (then
    ;;@ jsoptional/Main.java:24:13
    (return )
   )
  )
  ;;@ jsoptional/Main.java:24:13
  (global.set $f_$initialized__jsoptional_Main (i32.const 1))
  ;;@ jsoptional/Main.java:24:13
  (call $$clinit__void@java.lang.Object )
 )
)

;;; Class<T> Main.$getClassMetadata()
(func $$getClassMetadata__java_lang_Class@jsoptional.Main
 (result (ref null $java.lang.Class))
 (block
  (if (ref.eq (global.get $f_$class__jsoptional_Main) (ref.null $java.lang.Class))
   (then
    (global.set $f_$class__jsoptional_Main (call $m_createForClass__java_lang_String__java_lang_Class__java_lang_Class@java.lang.Class (call $function.no.side.effects.$getString_|jsoptional.Main|__java_lang_String (ref.func $$getString_|jsoptional.Main|__java_lang_String@jsoptional.Main) )(call $function.no.side.effects.$getClassMetadata__java_lang_Class (ref.func $$getClassMetadata__java_lang_Class@java.lang.Object) )))
   )
  )
  (return (global.get $f_$class__jsoptional_Main))
 )
)

;;; Class<?> Main.$getClassImpl()
(func $$getClassImpl__java_lang_Class@jsoptional.Main
 (type $function.$getClassImpl__java_lang_Class)
 (param $this.untyped (ref $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $jsoptional.Main))
 (local.set $this (ref.cast_static $jsoptional.Main (local.get $this.untyped)))
 (block
  (return (call $function.no.side.effects.$getClassMetadata__java_lang_Class (ref.func $$getClassMetadata__java_lang_Class@jsoptional.Main) ))
 )
)
(elem declare func $$getClassImpl__java_lang_Class@jsoptional.Main)

;;; String Main.$getString_|jsoptional.Main|()
(func $$getString_|jsoptional.Main|__java_lang_String@jsoptional.Main
 (result (ref null $java.lang.String))
 (block
  (if (ref.eq (global.get $f_$string_|jsoptional.Main|__jsoptional_Main) (ref.null $java.lang.String))
   (then
    (global.set $f_$string_|jsoptional.Main|__jsoptional_Main (call $m_fromJsString__java_lang_String_NativeString__java_lang_String@java.lang.String (string.const "jsoptional.Main")))
   )
  )
  (return (global.get $f_$string_|jsoptional.Main|__jsoptional_Main))
 )
)

;;; Code for jsoptional.Main.$LambdaImplementor$1 [methods]

;;; <anonymous> implements Function <anonymous> implements Function.$create()
(func $$create__@jsoptional.Main.$LambdaImplementor$1
 (result (ref null $jsoptional.Main.$LambdaImplementor$1))
 ;;@ jsoptional/Main.java:36:15
 (local $$instance (ref null $jsoptional.Main.$LambdaImplementor$1))
 (block
  ;;@ jsoptional/Main.java:36:15
  (local.set $$instance (struct.new $jsoptional.Main.$LambdaImplementor$1 (ref.as_non_null (global.get $jsoptional.Main.$LambdaImplementor$1.vtable)) (ref.as_non_null (global.get $jsoptional.Main.$LambdaImplementor$1.itable)) (i32.const 0)))
  ;;@ jsoptional/Main.java:36:15
  (call $$ctor__void_$p_jsoptional_Main_$LambdaImplementor$1@jsoptional.Main.$LambdaImplementor$1 (ref.as_non_null (local.get $$instance)))
  ;;@ jsoptional/Main.java:36:15
  (return (local.get $$instance))
 )
)

;;; void <anonymous> implements Function.$ctor()
(func $$ctor__void_$p_jsoptional_Main_$LambdaImplementor$1@jsoptional.Main.$LambdaImplementor$1
 (param $this (ref null $jsoptional.Main.$LambdaImplementor$1))
 ;;@ jsoptional/Main.java:36:15
 (block
  ;;@ jsoptional/Main.java:36:15
  (call $$clinit__void@jsoptional.Main.$LambdaImplementor$1 )
  ;;@ jsoptional/Main.java:36:15
  (call $$ctor__void_$p_java_lang_Object@java.lang.Object (ref.as_non_null (local.get $this)))
 )
)

;;; Object <anonymous> implements Function.f1(String s, Object... varargs)
(func $m_f1__java_lang_String__arrayOf_java_lang_Object__java_lang_Object@jsoptional.Main.$LambdaImplementor$1
 (type $function.m_f1__java_lang_String__arrayOf_java_lang_Object__java_lang_Object)
 (param $this.untyped (ref $java.lang.Object))
 (param $s (ref null $java.lang.String))
 (param $varargs (ref null $javaemul.internal.WasmArray.OfObject))
 (result (ref null $java.lang.Object))
 ;;@ jsoptional/Main.java:36:15
 (local $this (ref null $jsoptional.Main.$LambdaImplementor$1))
 (local.set $this (ref.cast_static $jsoptional.Main.$LambdaImplementor$1 (local.get $this.untyped)))
 (block
  ;;@ jsoptional/Main.java:36:31
  (return (local.get $s))
 )
)
(elem declare func $m_f1__java_lang_String__arrayOf_java_lang_Object__java_lang_Object@jsoptional.Main.$LambdaImplementor$1)

;;; void <anonymous> implements Function.$clinit()
(func $$clinit__void@jsoptional.Main.$LambdaImplementor$1
 ;;@ jsoptional/Main.java:36:15
 (block
  ;;@ jsoptional/Main.java:36:15
  (if (global.get $f_$initialized__jsoptional_Main_$LambdaImplementor$1)
   (then
    ;;@ jsoptional/Main.java:36:15
    (return )
   )
  )
  ;;@ jsoptional/Main.java:36:15
  (global.set $f_$initialized__jsoptional_Main_$LambdaImplementor$1 (i32.const 1))
  ;;@ jsoptional/Main.java:36:15
  (call $$clinit__void@java.lang.Object )
 )
)

;;; Class<T> <anonymous> implements Function.$getClassMetadata()
(func $$getClassMetadata__java_lang_Class@jsoptional.Main.$LambdaImplementor$1
 (result (ref null $java.lang.Class))
 (block
  (if (ref.eq (global.get $f_$class__jsoptional_Main_$LambdaImplementor$1) (ref.null $java.lang.Class))
   (then
    (global.set $f_$class__jsoptional_Main_$LambdaImplementor$1 (call $m_createForClass__java_lang_String__java_lang_Class__java_lang_Class@java.lang.Class (call $function.no.side.effects.$getString_|jsoptional.M...|__java_lang_String (ref.func $$getString_|jsoptional.M...|__java_lang_String@jsoptional.Main.$LambdaImplementor$1) )(call $function.no.side.effects.$getClassMetadata__java_lang_Class (ref.func $$getClassMetadata__java_lang_Class@java.lang.Object) )))
   )
  )
  (return (global.get $f_$class__jsoptional_Main_$LambdaImplementor$1))
 )
)

;;; Class<?> <anonymous> implements Function.$getClassImpl()
(func $$getClassImpl__java_lang_Class@jsoptional.Main.$LambdaImplementor$1
 (type $function.$getClassImpl__java_lang_Class)
 (param $this.untyped (ref $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $jsoptional.Main.$LambdaImplementor$1))
 (local.set $this (ref.cast_static $jsoptional.Main.$LambdaImplementor$1 (local.get $this.untyped)))
 (block
  (return (call $function.no.side.effects.$getClassMetadata__java_lang_Class (ref.func $$getClassMetadata__java_lang_Class@jsoptional.Main.$LambdaImplementor$1) ))
 )
)
(elem declare func $$getClassImpl__java_lang_Class@jsoptional.Main.$LambdaImplementor$1)

;;; String <anonymous> implements Function.$getString_|jsoptional.M...|()
(func $$getString_|jsoptional.M...|__java_lang_String@jsoptional.Main.$LambdaImplementor$1
 (result (ref null $java.lang.String))
 (block
  (if (ref.eq (global.get $f_$string_|jsoptional.M...|__jsoptional_Main_$LambdaImplementor$1) (ref.null $java.lang.String))
   (then
    (global.set $f_$string_|jsoptional.M...|__jsoptional_Main_$LambdaImplementor$1 (call $m_fromJsString__java_lang_String_NativeString__java_lang_String@java.lang.String (string.const "jsoptional.Main$$LambdaImplementor$1")))
   )
  )
  (return (global.get $f_$string_|jsoptional.M...|__jsoptional_Main_$LambdaImplementor$1))
 )
)

;;; Code for jsoptional.Main.AFunction [methods]

;;; AFunction AFunction.$create()
(func $$create__@jsoptional.Main.AFunction
 (result (ref null $jsoptional.Main.AFunction))
 ;;@ jsoptional/Main.java:41:21
 (local $$instance (ref null $jsoptional.Main.AFunction))
 (block
  ;;@ jsoptional/Main.java:41:21
  (local.set $$instance (struct.new $jsoptional.Main.AFunction (ref.as_non_null (global.get $jsoptional.Main.AFunction.vtable)) (ref.as_non_null (global.get $jsoptional.Main.AFunction.itable)) (i32.const 0)))
  ;;@ jsoptional/Main.java:41:21
  (call $$ctor__void_$p_jsoptional_Main_AFunction@jsoptional.Main.AFunction (ref.as_non_null (local.get $$instance)))
  ;;@ jsoptional/Main.java:41:21
  (return (local.get $$instance))
 )
)

;;; void AFunction.$ctor()
(func $$ctor__void_$p_jsoptional_Main_AFunction@jsoptional.Main.AFunction
 (param $this (ref null $jsoptional.Main.AFunction))
 ;;@ jsoptional/Main.java:41:21
 (block
  ;;@ jsoptional/Main.java:41:21
  (call $$clinit__void@jsoptional.Main.AFunction )
  ;;@ jsoptional/Main.java:41:21
  (call $$ctor__void_$p_java_lang_Object@java.lang.Object (ref.as_non_null (local.get $this)))
 )
)

;;; Object AFunction.f1(String i, Object... args)
(func $m_f1__java_lang_String__arrayOf_java_lang_Object__java_lang_Object@jsoptional.Main.AFunction
 (type $function.m_f1__java_lang_String__arrayOf_java_lang_Object__java_lang_Object)
 (param $this.untyped (ref $java.lang.Object))
 (param $i (ref null $java.lang.String))
 (param $args (ref null $javaemul.internal.WasmArray.OfObject))
 (result (ref null $java.lang.Object))
 ;;@ jsoptional/Main.java:43:18
 (local $this (ref null $jsoptional.Main.AFunction))
 (local.set $this (ref.cast_static $jsoptional.Main.AFunction (local.get $this.untyped)))
 (block
  ;;@ jsoptional/Main.java:44:6
  (return (array.get $java.lang.Object.array (struct.get $javaemul.internal.WasmArray.OfObject $f_elements__javaemul_internal_WasmArray_OfObject (local.get $args)) (i32.const 0)))
 )
)
(elem declare func $m_f1__java_lang_String__arrayOf_java_lang_Object__java_lang_Object@jsoptional.Main.AFunction)

;;; void AFunction.$clinit()
(func $$clinit__void@jsoptional.Main.AFunction
 ;;@ jsoptional/Main.java:41:21
 (block
  ;;@ jsoptional/Main.java:41:21
  (if (global.get $f_$initialized__jsoptional_Main_AFunction)
   (then
    ;;@ jsoptional/Main.java:41:21
    (return )
   )
  )
  ;;@ jsoptional/Main.java:41:21
  (global.set $f_$initialized__jsoptional_Main_AFunction (i32.const 1))
  ;;@ jsoptional/Main.java:41:21
  (call $$clinit__void@java.lang.Object )
 )
)

;;; Class<T> AFunction.$getClassMetadata()
(func $$getClassMetadata__java_lang_Class@jsoptional.Main.AFunction
 (result (ref null $java.lang.Class))
 (block
  (if (ref.eq (global.get $f_$class__jsoptional_Main_AFunction) (ref.null $java.lang.Class))
   (then
    (global.set $f_$class__jsoptional_Main_AFunction (call $m_createForClass__java_lang_String__java_lang_Class__java_lang_Class@java.lang.Class (call $function.no.side.effects.$getString_|jsoptional.M...|__java_lang_String (ref.func $$getString_|jsoptional.M...|__java_lang_String@jsoptional.Main.AFunction) )(call $function.no.side.effects.$getClassMetadata__java_lang_Class (ref.func $$getClassMetadata__java_lang_Class@java.lang.Object) )))
   )
  )
  (return (global.get $f_$class__jsoptional_Main_AFunction))
 )
)

;;; Class<?> AFunction.$getClassImpl()
(func $$getClassImpl__java_lang_Class@jsoptional.Main.AFunction
 (type $function.$getClassImpl__java_lang_Class)
 (param $this.untyped (ref $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $jsoptional.Main.AFunction))
 (local.set $this (ref.cast_static $jsoptional.Main.AFunction (local.get $this.untyped)))
 (block
  (return (call $function.no.side.effects.$getClassMetadata__java_lang_Class (ref.func $$getClassMetadata__java_lang_Class@jsoptional.Main.AFunction) ))
 )
)
(elem declare func $$getClassImpl__java_lang_Class@jsoptional.Main.AFunction)

;;; String AFunction.$getString_|jsoptional.M...|()
(func $$getString_|jsoptional.M...|__java_lang_String@jsoptional.Main.AFunction
 (result (ref null $java.lang.String))
 (block
  (if (ref.eq (global.get $f_$string_|jsoptional.M...|__jsoptional_Main_AFunction) (ref.null $java.lang.String))
   (then
    (global.set $f_$string_|jsoptional.M...|__jsoptional_Main_AFunction (call $m_fromJsString__java_lang_String_NativeString__java_lang_String@java.lang.String (string.const "jsoptional.Main$AFunction")))
   )
  )
  (return (global.get $f_$string_|jsoptional.M...|__jsoptional_Main_AFunction))
 )
)

;;; Code for jsoptional.Main.TemplatedSubtype [methods]

;;; TemplatedSubtype<T> TemplatedSubtype.$create()
(func $$create__@jsoptional.Main.TemplatedSubtype
 (result (ref null $jsoptional.Main.TemplatedSubtype))
 ;;@ jsoptional/Main.java:59:15
 (local $$instance (ref null $jsoptional.Main.TemplatedSubtype))
 (block
  ;;@ jsoptional/Main.java:59:15
  (local.set $$instance (struct.new $jsoptional.Main.TemplatedSubtype (ref.as_non_null (global.get $jsoptional.Main.TemplatedSubtype.vtable)) (ref.as_non_null (global.get $jsoptional.Main.TemplatedSubtype.itable)) (i32.const 0)))
  ;;@ jsoptional/Main.java:59:15
  (call $$ctor__void_$p_jsoptional_Main_TemplatedSubtype@jsoptional.Main.TemplatedSubtype (ref.as_non_null (local.get $$instance)))
  ;;@ jsoptional/Main.java:59:15
  (return (local.get $$instance))
 )
)

;;; void TemplatedSubtype.$ctor()
(func $$ctor__void_$p_jsoptional_Main_TemplatedSubtype@jsoptional.Main.TemplatedSubtype
 (param $this (ref null $jsoptional.Main.TemplatedSubtype))
 ;;@ jsoptional/Main.java:59:15
 (block
  ;;@ jsoptional/Main.java:59:15
  (call $$clinit__void@jsoptional.Main.TemplatedSubtype )
  ;;@ jsoptional/Main.java:59:15
  (call $$ctor__void_$p_java_lang_Object@java.lang.Object (ref.as_non_null (local.get $this)))
 )
)

;;; void TemplatedSubtype.m(T t, Object o)
(func $m_m__java_lang_String__java_lang_Object__void@jsoptional.Main.TemplatedSubtype
 (type $function.m_m__java_lang_String__java_lang_Object__void)
 (param $this.untyped (ref $java.lang.Object))
 (param $t (ref null $java.lang.String))
 (param $o (ref null $java.lang.Object))
 ;;@ jsoptional/Main.java:61:16
 (local $this (ref null $jsoptional.Main.TemplatedSubtype))
 (local.set $this (ref.cast_static $jsoptional.Main.TemplatedSubtype (local.get $this.untyped)))
 (block
 )
)
(elem declare func $m_m__java_lang_String__java_lang_Object__void@jsoptional.Main.TemplatedSubtype)

;;; void TemplatedSubtype.m(T arg0, Object arg1)
(func $m_m__java_lang_Object__java_lang_Object__void@jsoptional.Main.TemplatedSubtype
 (type $function.m_m__java_lang_Object__java_lang_Object__void)
 (param $this.untyped (ref $java.lang.Object))
 (param $arg0 (ref null $java.lang.Object))
 (param $arg1 (ref null $java.lang.Object))
 ;;@ jsoptional/Main.java:59:15
 (local $this (ref null $jsoptional.Main.TemplatedSubtype))
 (local.set $this (ref.cast_static $jsoptional.Main.TemplatedSubtype (local.get $this.untyped)))
 (block
  ;;@ jsoptional/Main.java:59:15
  (call_ref $function.m_m__java_lang_String__java_lang_Object__void (ref.as_non_null (local.get $this))(ref.cast_static $java.lang.String (local.get $arg0))(local.get $arg1)(struct.get $jsoptional.Main.TemplatedSubtype.vtable $m_m__java_lang_String__java_lang_Object__void (struct.get $jsoptional.Main.TemplatedSubtype $vtable(local.get $this))))
 )
)
(elem declare func $m_m__java_lang_Object__java_lang_Object__void@jsoptional.Main.TemplatedSubtype)

;;; void TemplatedSubtype.$clinit()
(func $$clinit__void@jsoptional.Main.TemplatedSubtype
 ;;@ jsoptional/Main.java:59:15
 (block
  ;;@ jsoptional/Main.java:59:15
  (if (global.get $f_$initialized__jsoptional_Main_TemplatedSubtype)
   (then
    ;;@ jsoptional/Main.java:59:15
    (return )
   )
  )
  ;;@ jsoptional/Main.java:59:15
  (global.set $f_$initialized__jsoptional_Main_TemplatedSubtype (i32.const 1))
  ;;@ jsoptional/Main.java:59:15
  (call $$clinit__void@java.lang.Object )
 )
)

;;; Class<T> TemplatedSubtype.$getClassMetadata()
(func $$getClassMetadata__java_lang_Class@jsoptional.Main.TemplatedSubtype
 (result (ref null $java.lang.Class))
 (block
  (if (ref.eq (global.get $f_$class__jsoptional_Main_TemplatedSubtype) (ref.null $java.lang.Class))
   (then
    (global.set $f_$class__jsoptional_Main_TemplatedSubtype (call $m_createForClass__java_lang_String__java_lang_Class__java_lang_Class@java.lang.Class (call $function.no.side.effects.$getString_|jsoptional.M...|__java_lang_String (ref.func $$getString_|jsoptional.M...|__java_lang_String@jsoptional.Main.TemplatedSubtype) )(call $function.no.side.effects.$getClassMetadata__java_lang_Class (ref.func $$getClassMetadata__java_lang_Class@java.lang.Object) )))
   )
  )
  (return (global.get $f_$class__jsoptional_Main_TemplatedSubtype))
 )
)

;;; Class<?> TemplatedSubtype.$getClassImpl()
(func $$getClassImpl__java_lang_Class@jsoptional.Main.TemplatedSubtype
 (type $function.$getClassImpl__java_lang_Class)
 (param $this.untyped (ref $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $jsoptional.Main.TemplatedSubtype))
 (local.set $this (ref.cast_static $jsoptional.Main.TemplatedSubtype (local.get $this.untyped)))
 (block
  (return (call $function.no.side.effects.$getClassMetadata__java_lang_Class (ref.func $$getClassMetadata__java_lang_Class@jsoptional.Main.TemplatedSubtype) ))
 )
)
(elem declare func $$getClassImpl__java_lang_Class@jsoptional.Main.TemplatedSubtype)

;;; String TemplatedSubtype.$getString_|jsoptional.M...|()
(func $$getString_|jsoptional.M...|__java_lang_String@jsoptional.Main.TemplatedSubtype
 (result (ref null $java.lang.String))
 (block
  (if (ref.eq (global.get $f_$string_|jsoptional.M...|__jsoptional_Main_TemplatedSubtype) (ref.null $java.lang.String))
   (then
    (global.set $f_$string_|jsoptional.M...|__jsoptional_Main_TemplatedSubtype (call $m_fromJsString__java_lang_String_NativeString__java_lang_String@java.lang.String (string.const "jsoptional.Main$TemplatedSubtype")))
   )
  )
  (return (global.get $f_$string_|jsoptional.M...|__jsoptional_Main_TemplatedSubtype))
 )
)

;;; Code for jsoptional.Main.SpecializedSubtype [methods]

;;; SpecializedSubtype SpecializedSubtype.$create(Main $outer_this, Object a)
(func $$create__jsoptional_Main__java_lang_Object@jsoptional.Main.SpecializedSubtype
 (param $$outer_this (ref null $jsoptional.Main))
 (param $a (ref null $java.lang.Object))
 (result (ref null $jsoptional.Main.SpecializedSubtype))
 ;;@ jsoptional/Main.java:68:11
 (local $$instance (ref null $jsoptional.Main.SpecializedSubtype))
 (block
  ;;@ jsoptional/Main.java:68:11
  (local.set $$instance (struct.new $jsoptional.Main.SpecializedSubtype (ref.as_non_null (global.get $jsoptional.Main.SpecializedSubtype.vtable)) (ref.as_non_null (global.get $jsoptional.Main.SpecializedSubtype.itable)) (i32.const 0) (local.get $$outer_this)))
  ;;@ jsoptional/Main.java:68:11
  (call $$ctor__jsoptional_Main__java_lang_Object__void_$p_jsoptional_Main_SpecializedSubtype@jsoptional.Main.SpecializedSubtype (ref.as_non_null (local.get $$instance))(local.get $$outer_this)(local.get $a))
  ;;@ jsoptional/Main.java:68:11
  (return (local.get $$instance))
 )
)

;;; void SpecializedSubtype.$ctor(Main $outer_this, Object a)
(func $$ctor__jsoptional_Main__java_lang_Object__void_$p_jsoptional_Main_SpecializedSubtype@jsoptional.Main.SpecializedSubtype
 (param $this (ref null $jsoptional.Main.SpecializedSubtype))
 (param $$outer_this (ref null $jsoptional.Main))
 (param $a (ref null $java.lang.Object))
 ;;@ jsoptional/Main.java:68:11
 (block
  ;;@ jsoptional/Main.java:68:52
  (call $$clinit__void@jsoptional.Main.SpecializedSubtype )
  ;;@ jsoptional/Main.java:68:52
  (call $$ctor__void_$p_java_lang_Object@java.lang.Object (ref.as_non_null (local.get $this)))
 )
)

;;; void SpecializedSubtype.m(String t, Object o)
(func $m_m__java_lang_String__java_lang_Object__void@jsoptional.Main.SpecializedSubtype
 (type $function.m_m__java_lang_String__java_lang_Object__void)
 (param $this.untyped (ref $java.lang.Object))
 (param $t (ref null $java.lang.String))
 (param $o (ref null $java.lang.Object))
 ;;@ jsoptional/Main.java:71:16
 (local $this (ref null $jsoptional.Main.SpecializedSubtype))
 (local.set $this (ref.cast_static $jsoptional.Main.SpecializedSubtype (local.get $this.untyped)))
 (block
 )
)
(elem declare func $m_m__java_lang_String__java_lang_Object__void@jsoptional.Main.SpecializedSubtype)

;;; void SpecializedSubtype.m(T arg0, Object arg1)
(func $m_m__java_lang_Object__java_lang_Object__void@jsoptional.Main.SpecializedSubtype
 (type $function.m_m__java_lang_Object__java_lang_Object__void)
 (param $this.untyped (ref $java.lang.Object))
 (param $arg0 (ref null $java.lang.Object))
 (param $arg1 (ref null $java.lang.Object))
 ;;@ jsoptional/Main.java:66:8
 (local $this (ref null $jsoptional.Main.SpecializedSubtype))
 (local.set $this (ref.cast_static $jsoptional.Main.SpecializedSubtype (local.get $this.untyped)))
 (block
  ;;@ jsoptional/Main.java:66:8
  (call_ref $function.m_m__java_lang_String__java_lang_Object__void (ref.as_non_null (local.get $this))(ref.cast_static $java.lang.String (local.get $arg0))(local.get $arg1)(struct.get $jsoptional.Main.SpecializedSubtype.vtable $m_m__java_lang_String__java_lang_Object__void (struct.get $jsoptional.Main.SpecializedSubtype $vtable(local.get $this))))
 )
)
(elem declare func $m_m__java_lang_Object__java_lang_Object__void@jsoptional.Main.SpecializedSubtype)

;;; void SpecializedSubtype.$clinit()
(func $$clinit__void@jsoptional.Main.SpecializedSubtype
 ;;@ jsoptional/Main.java:66:8
 (block
  ;;@ jsoptional/Main.java:66:8
  (if (global.get $f_$initialized__jsoptional_Main_SpecializedSubtype)
   (then
    ;;@ jsoptional/Main.java:66:8
    (return )
   )
  )
  ;;@ jsoptional/Main.java:66:8
  (global.set $f_$initialized__jsoptional_Main_SpecializedSubtype (i32.const 1))
  ;;@ jsoptional/Main.java:66:8
  (call $$clinit__void@java.lang.Object )
 )
)

;;; Class<T> SpecializedSubtype.$getClassMetadata()
(func $$getClassMetadata__java_lang_Class@jsoptional.Main.SpecializedSubtype
 (result (ref null $java.lang.Class))
 (block
  (if (ref.eq (global.get $f_$class__jsoptional_Main_SpecializedSubtype) (ref.null $java.lang.Class))
   (then
    (global.set $f_$class__jsoptional_Main_SpecializedSubtype (call $m_createForClass__java_lang_String__java_lang_Class__java_lang_Class@java.lang.Class (call $function.no.side.effects.$getString_|jsoptional.M...|__java_lang_String (ref.func $$getString_|jsoptional.M...|__java_lang_String@jsoptional.Main.SpecializedSubtype) )(call $function.no.side.effects.$getClassMetadata__java_lang_Class (ref.func $$getClassMetadata__java_lang_Class@java.lang.Object) )))
   )
  )
  (return (global.get $f_$class__jsoptional_Main_SpecializedSubtype))
 )
)

;;; Class<?> SpecializedSubtype.$getClassImpl()
(func $$getClassImpl__java_lang_Class@jsoptional.Main.SpecializedSubtype
 (type $function.$getClassImpl__java_lang_Class)
 (param $this.untyped (ref $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $jsoptional.Main.SpecializedSubtype))
 (local.set $this (ref.cast_static $jsoptional.Main.SpecializedSubtype (local.get $this.untyped)))
 (block
  (return (call $function.no.side.effects.$getClassMetadata__java_lang_Class (ref.func $$getClassMetadata__java_lang_Class@jsoptional.Main.SpecializedSubtype) ))
 )
)
(elem declare func $$getClassImpl__java_lang_Class@jsoptional.Main.SpecializedSubtype)

;;; String SpecializedSubtype.$getString_|jsoptional.M...|()
(func $$getString_|jsoptional.M...|__java_lang_String@jsoptional.Main.SpecializedSubtype
 (result (ref null $java.lang.String))
 (block
  (if (ref.eq (global.get $f_$string_|jsoptional.M...|__jsoptional_Main_SpecializedSubtype) (ref.null $java.lang.String))
   (then
    (global.set $f_$string_|jsoptional.M...|__jsoptional_Main_SpecializedSubtype (call $m_fromJsString__java_lang_String_NativeString__java_lang_String@java.lang.String (string.const "jsoptional.Main$SpecializedSubtype")))
   )
  )
  (return (global.get $f_$string_|jsoptional.M...|__jsoptional_Main_SpecializedSubtype))
 )
)

;;; Code for jsoptional.Main.NonJsTypeSubtype [methods]

;;; NonJsTypeSubtype NonJsTypeSubtype.$create()
(func $$create__@jsoptional.Main.NonJsTypeSubtype
 (result (ref null $jsoptional.Main.NonJsTypeSubtype))
 ;;@ jsoptional/Main.java:74:15
 (local $$instance (ref null $jsoptional.Main.NonJsTypeSubtype))
 (block
  ;;@ jsoptional/Main.java:74:15
  (local.set $$instance (struct.new $jsoptional.Main.NonJsTypeSubtype (ref.as_non_null (global.get $jsoptional.Main.NonJsTypeSubtype.vtable)) (ref.as_non_null (global.get $jsoptional.Main.NonJsTypeSubtype.itable)) (i32.const 0)))
  ;;@ jsoptional/Main.java:74:15
  (call $$ctor__void_$p_jsoptional_Main_NonJsTypeSubtype@jsoptional.Main.NonJsTypeSubtype (ref.as_non_null (local.get $$instance)))
  ;;@ jsoptional/Main.java:74:15
  (return (local.get $$instance))
 )
)

;;; void NonJsTypeSubtype.$ctor()
(func $$ctor__void_$p_jsoptional_Main_NonJsTypeSubtype@jsoptional.Main.NonJsTypeSubtype
 (param $this (ref null $jsoptional.Main.NonJsTypeSubtype))
 ;;@ jsoptional/Main.java:74:15
 (block
  ;;@ jsoptional/Main.java:74:15
  (call $$clinit__void@jsoptional.Main.NonJsTypeSubtype )
  ;;@ jsoptional/Main.java:74:15
  (call $$ctor__void_$p_java_lang_Object@java.lang.Object (ref.as_non_null (local.get $this)))
 )
)

;;; void NonJsTypeSubtype.m(String t, Object o)
(func $m_m__java_lang_String__java_lang_Object__void@jsoptional.Main.NonJsTypeSubtype
 (type $function.m_m__java_lang_String__java_lang_Object__void)
 (param $this.untyped (ref $java.lang.Object))
 (param $t (ref null $java.lang.String))
 (param $o (ref null $java.lang.Object))
 ;;@ jsoptional/Main.java:76:16
 (local $this (ref null $jsoptional.Main.NonJsTypeSubtype))
 (local.set $this (ref.cast_static $jsoptional.Main.NonJsTypeSubtype (local.get $this.untyped)))
 (block
 )
)
(elem declare func $m_m__java_lang_String__java_lang_Object__void@jsoptional.Main.NonJsTypeSubtype)

;;; void NonJsTypeSubtype.m(T arg0, Object arg1)
(func $m_m__java_lang_Object__java_lang_Object__void@jsoptional.Main.NonJsTypeSubtype
 (type $function.m_m__java_lang_Object__java_lang_Object__void)
 (param $this.untyped (ref $java.lang.Object))
 (param $arg0 (ref null $java.lang.Object))
 (param $arg1 (ref null $java.lang.Object))
 ;;@ jsoptional/Main.java:74:15
 (local $this (ref null $jsoptional.Main.NonJsTypeSubtype))
 (local.set $this (ref.cast_static $jsoptional.Main.NonJsTypeSubtype (local.get $this.untyped)))
 (block
  ;;@ jsoptional/Main.java:74:15
  (call_ref $function.m_m__java_lang_String__java_lang_Object__void (ref.as_non_null (local.get $this))(ref.cast_static $java.lang.String (local.get $arg0))(local.get $arg1)(struct.get $jsoptional.Main.NonJsTypeSubtype.vtable $m_m__java_lang_String__java_lang_Object__void (struct.get $jsoptional.Main.NonJsTypeSubtype $vtable(local.get $this))))
 )
)
(elem declare func $m_m__java_lang_Object__java_lang_Object__void@jsoptional.Main.NonJsTypeSubtype)

;;; void NonJsTypeSubtype.$clinit()
(func $$clinit__void@jsoptional.Main.NonJsTypeSubtype
 ;;@ jsoptional/Main.java:74:15
 (block
  ;;@ jsoptional/Main.java:74:15
  (if (global.get $f_$initialized__jsoptional_Main_NonJsTypeSubtype)
   (then
    ;;@ jsoptional/Main.java:74:15
    (return )
   )
  )
  ;;@ jsoptional/Main.java:74:15
  (global.set $f_$initialized__jsoptional_Main_NonJsTypeSubtype (i32.const 1))
  ;;@ jsoptional/Main.java:74:15
  (call $$clinit__void@java.lang.Object )
 )
)

;;; Class<T> NonJsTypeSubtype.$getClassMetadata()
(func $$getClassMetadata__java_lang_Class@jsoptional.Main.NonJsTypeSubtype
 (result (ref null $java.lang.Class))
 (block
  (if (ref.eq (global.get $f_$class__jsoptional_Main_NonJsTypeSubtype) (ref.null $java.lang.Class))
   (then
    (global.set $f_$class__jsoptional_Main_NonJsTypeSubtype (call $m_createForClass__java_lang_String__java_lang_Class__java_lang_Class@java.lang.Class (call $function.no.side.effects.$getString_|jsoptional.M...|__java_lang_String (ref.func $$getString_|jsoptional.M...|__java_lang_String@jsoptional.Main.NonJsTypeSubtype) )(call $function.no.side.effects.$getClassMetadata__java_lang_Class (ref.func $$getClassMetadata__java_lang_Class@java.lang.Object) )))
   )
  )
  (return (global.get $f_$class__jsoptional_Main_NonJsTypeSubtype))
 )
)

;;; Class<?> NonJsTypeSubtype.$getClassImpl()
(func $$getClassImpl__java_lang_Class@jsoptional.Main.NonJsTypeSubtype
 (type $function.$getClassImpl__java_lang_Class)
 (param $this.untyped (ref $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $jsoptional.Main.NonJsTypeSubtype))
 (local.set $this (ref.cast_static $jsoptional.Main.NonJsTypeSubtype (local.get $this.untyped)))
 (block
  (return (call $function.no.side.effects.$getClassMetadata__java_lang_Class (ref.func $$getClassMetadata__java_lang_Class@jsoptional.Main.NonJsTypeSubtype) ))
 )
)
(elem declare func $$getClassImpl__java_lang_Class@jsoptional.Main.NonJsTypeSubtype)

;;; String NonJsTypeSubtype.$getString_|jsoptional.M...|()
(func $$getString_|jsoptional.M...|__java_lang_String@jsoptional.Main.NonJsTypeSubtype
 (result (ref null $java.lang.String))
 (block
  (if (ref.eq (global.get $f_$string_|jsoptional.M...|__jsoptional_Main_NonJsTypeSubtype) (ref.null $java.lang.String))
   (then
    (global.set $f_$string_|jsoptional.M...|__jsoptional_Main_NonJsTypeSubtype (call $m_fromJsString__java_lang_String_NativeString__java_lang_String@java.lang.String (string.const "jsoptional.Main$NonJsTypeSubtype")))
   )
  )
  (return (global.get $f_$string_|jsoptional.M...|__jsoptional_Main_NonJsTypeSubtype))
 )
)
