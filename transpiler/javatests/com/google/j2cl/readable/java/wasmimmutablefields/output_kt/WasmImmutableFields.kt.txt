// Generated from "wasmimmutablefields/WasmImmutableFields.java"
@file:OptIn(ExperimentalObjCName::class, ExperimentalObjCRefinement::class)
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "REPEATED_BOUND",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER")

package wasmimmutablefields

import javaemul.lang.*
import java.lang.Class
import kotlin.Any
import kotlin.Array
import kotlin.Int
import kotlin.IntArray
import kotlin.OptIn
import kotlin.Short
import kotlin.String
import kotlin.Suppress
import kotlin.arrayOf
import kotlin.arrayOfNulls
import kotlin.experimental.ExperimentalObjCName
import kotlin.experimental.ExperimentalObjCRefinement
import kotlin.intArrayOf
import kotlin.jvm.JvmField
import kotlin.jvm.javaObjectType
import kotlin.native.HiddenFromObjC
import kotlin.native.ObjCName

@ObjCName("J2ktWasmimmutablefieldsWasmImmutableFields", exact = true)
open class WasmImmutableFields {}

open class AssignmentsInDeclaration {
 @JvmField
 @HiddenFromObjC
 var compileTimeConstant_pp_wasmimmutablefields: Int = 12

 @JvmField
 @HiddenFromObjC
 var stringLiteral_pp_wasmimmutablefields: String? = "Hello World"

 @JvmField
 @HiddenFromObjC
 var newArray_pp_wasmimmutablefields: Array<Any?>? = arrayOfNulls<Any>(4)

 @JvmField
 @HiddenFromObjC
 var newArrayMultidimensional_pp_wasmimmutablefields: Array<Array<Array<Any?>?>?>? = Array<Array<Array<Any?>?>?>(3) {
  arrayOfNulls<Array<Any?>>(4)
 }

 @JvmField
 @HiddenFromObjC
 var arrayLiteral_pp_wasmimmutablefields: IntArray? = intArrayOf(1, 2, 3, 4)

 @JvmField
 @HiddenFromObjC
 var arrayLiteralMultidimensional_pp_wasmimmutablefields: Array<IntArray?>? = arrayOf<IntArray?>(intArrayOf(1, 2), intArrayOf(3, 4))

 @JvmField
 @HiddenFromObjC
 var classLiteral_pp_wasmimmutablefields: Class<*>? = WasmImmutableFields::class.javaObjectType

 @JvmField
 @HiddenFromObjC
 var withCast_pp_wasmimmutablefields: Array<String?>? = (arrayOfNulls<Any>(0) as Any) as Array<String?>
}

open class AssignmentsInInitializer {
 @JvmField
 @HiddenFromObjC
 var compileTimeConstant_pp_wasmimmutablefields: Int = 0

 @JvmField
 @HiddenFromObjC
 var stringLiteral_pp_wasmimmutablefields: String? = null

 @JvmField
 @HiddenFromObjC
 var newArray_pp_wasmimmutablefields: Array<Any?>? = null

 @JvmField
 @HiddenFromObjC
 var newArrayMultidimensional_pp_wasmimmutablefields: Array<Array<Array<Any?>?>?>? = null

 @JvmField
 @HiddenFromObjC
 var arrayLiteral_pp_wasmimmutablefields: IntArray? = null

 @JvmField
 @HiddenFromObjC
 var arrayLiteralMultidimensional_pp_wasmimmutablefields: Array<IntArray?>? = null

 @JvmField
 @HiddenFromObjC
 var classLiteral_pp_wasmimmutablefields: Class<*>? = null

 @JvmField
 @HiddenFromObjC
 var withCast_pp_wasmimmutablefields: Array<String?>? = null

 init {
  this.compileTimeConstant_pp_wasmimmutablefields = 12
  this.stringLiteral_pp_wasmimmutablefields = "Hello World"
  this.newArray_pp_wasmimmutablefields = arrayOfNulls<Any>(4)
  this.newArrayMultidimensional_pp_wasmimmutablefields = Array<Array<Array<Any?>?>?>(3) {
   arrayOfNulls<Array<Any?>>(4)
  }
  this.arrayLiteral_pp_wasmimmutablefields = intArrayOf(1, 2, 3, 4)
  this.arrayLiteralMultidimensional_pp_wasmimmutablefields = arrayOf<IntArray?>(intArrayOf(1, 2), intArrayOf(3, 4))
  this.classLiteral_pp_wasmimmutablefields = WasmImmutableFields::class.javaObjectType
  this.withCast_pp_wasmimmutablefields = (arrayOfNulls<Any>(0) as Any) as Array<String?>
 }
}

open class AssignmentsInConstructor {
 @JvmField
 @HiddenFromObjC
 var compileTimeConstant_pp_wasmimmutablefields: Int = 0

 @JvmField
 @HiddenFromObjC
 var stringLiteral_pp_wasmimmutablefields: String? = null

 @JvmField
 @HiddenFromObjC
 var newArray_pp_wasmimmutablefields: Array<Any?>? = null

 @JvmField
 @HiddenFromObjC
 var newArrayMultidimensional_pp_wasmimmutablefields: Array<Array<Array<Any?>?>?>? = null

 @JvmField
 @HiddenFromObjC
 var arrayLiteral_pp_wasmimmutablefields: IntArray? = null

 @JvmField
 @HiddenFromObjC
 var arrayLiteralMultidimensional_pp_wasmimmutablefields: Array<IntArray?>? = null

 @JvmField
 @HiddenFromObjC
 var classLiteral_pp_wasmimmutablefields: Class<*>? = null

 @JvmField
 @HiddenFromObjC
 var withCast_pp_wasmimmutablefields: Array<String?>? = null

 @JvmField
 @HiddenFromObjC
 var fromParameter_pp_wasmimmutablefields: Any? = null

 @JvmField
 @HiddenFromObjC
 var finalFieldReference_pp_wasmimmutablefields: String? = null

 constructor(parameter: Any?, intParameter: Int, par: AssignmentsInConstructor?) {
  this.compileTimeConstant_pp_wasmimmutablefields = 12
  this.stringLiteral_pp_wasmimmutablefields = "Hello World"
  this.newArray_pp_wasmimmutablefields = arrayOfNulls<Any>(intParameter)
  this.newArrayMultidimensional_pp_wasmimmutablefields = Array<Array<Array<Any?>?>?>(intParameter) {
   arrayOfNulls<Array<Any?>>(4)
  }
  this.arrayLiteral_pp_wasmimmutablefields = intArrayOf(1, 2, intParameter, 4)
  this.arrayLiteralMultidimensional_pp_wasmimmutablefields = arrayOf<IntArray?>(intArrayOf(1, intParameter), intArrayOf(3, 4))
  this.classLiteral_pp_wasmimmutablefields = WasmImmutableFields::class.javaObjectType
  this.withCast_pp_wasmimmutablefields = (arrayOfNulls<Any>(0) as Any) as Array<String?>
  this.fromParameter_pp_wasmimmutablefields = parameter
  this.finalFieldReference_pp_wasmimmutablefields = par!!.stringLiteral_pp_wasmimmutablefields
 }
}

open class OptimizesWithThisConstructorDelegation {
 @JvmField
 @HiddenFromObjC
 var optimizeableField_pp_wasmimmutablefields: Int = 0

 constructor() {
  this.optimizeableField_pp_wasmimmutablefields = 2
 }

 constructor(parameter: Int) {
  this.optimizeableField_pp_wasmimmutablefields = parameter
 }

 constructor(parameter: Short): this(parameter.toInt())
}

open class OptimizesWithSuperConstructorDelegation: OptimizesWithThisConstructorDelegation {
 constructor()

 constructor(parameter: Int): super(parameter)

 constructor(parameter: Short): this(parameter.toInt())
}

open class FinalizerTest {
 @JvmField
 @HiddenFromObjC
 var effectivelyFinalField_pp_wasmimmutablefields: Int = 1

 @JvmField
 @HiddenFromObjC
 var readInInit_pp_wasmimmutablefields: Int = this.effectivelyFinalField_pp_wasmimmutablefields

 @JvmField
 @HiddenFromObjC
 var writtenOutsideConstructor_pp_wasmimmutablefields: Int = 1

 @JvmField
 @HiddenFromObjC
 var readBeforeWrite_pp_wasmimmutablefields: Int = 0

 @JvmField
 @HiddenFromObjC
 var writtenInDelegatingConstructor_pp_wasmimmutablefields: Int = 1

 @JvmField
 @HiddenFromObjC
 var compoundAssignment_pp_wasmimmutablefields: Int = 0

 @JvmField
 @HiddenFromObjC
 var effectivelyFinalButNotOptimizedIfBranches_pp_wasmimmutablefields: Int = 0

 @JvmField
 @HiddenFromObjC
 var effectivelyFinalButNotOptimizedNestedBlock_pp_wasmimmutablefields: Int = 0

 @JvmField
 @HiddenFromObjC
 var writtenInInitAndConstructor_pp_wasmimmutablefields: Int = 1

 @JvmField
 @HiddenFromObjC
 var writtenInInitializerAndInDelegatingConstructor_pp_wasmimmutablefields: Int = 1

 @JvmField
 @HiddenFromObjC
 var writtenOnlyInDelegatingConstructor_pp_wasmimmutablefields: Int = 0

 constructor() {
  this.readBeforeWrite_pp_wasmimmutablefields = this.readBeforeWrite_pp_wasmimmutablefields + 1
  val i: Int = this.effectivelyFinalField_pp_wasmimmutablefields
  this.compoundAssignment_pp_wasmimmutablefields = this.compoundAssignment_pp_wasmimmutablefields + 1
  if (i == 3) {
   this.effectivelyFinalButNotOptimizedIfBranches_pp_wasmimmutablefields = 1
  } else {
   this.effectivelyFinalButNotOptimizedIfBranches_pp_wasmimmutablefields = 1
  }
  this.effectivelyFinalButNotOptimizedNestedBlock_pp_wasmimmutablefields = 1
  this.writtenInInitAndConstructor_pp_wasmimmutablefields = 1
 }

 constructor(x: Int): this() {
  val i: Int = this.effectivelyFinalField_pp_wasmimmutablefields
  this.writtenInDelegatingConstructor_pp_wasmimmutablefields = 1
  this.writtenOnlyInDelegatingConstructor_pp_wasmimmutablefields = 1
  this.writtenInInitializerAndInDelegatingConstructor_pp_wasmimmutablefields = 1
 }

 @HiddenFromObjC
 open fun foo_pp_wasmimmutablefields() {
  val o: FinalizerTest? = null
  o!!.writtenOutsideConstructor_pp_wasmimmutablefields = 1
  val i: Int = this.effectivelyFinalField_pp_wasmimmutablefields
 }
}
