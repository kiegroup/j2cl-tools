goog.module('exception.MyJsException$impl');

const Exception = goog.require('java.lang.Exception$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Throwable = goog.forwardDeclare('java.lang.Throwable$impl');

/**
 * @final
 */
class MyJsException extends Exception {
 //JsConstructor 'MyJsException()'.
 
 constructor() {
  MyJsException.$clinit();
  super();
  this.$ctor__exception_MyJsException__void();
  this.m_privateInitError__java_lang_Object__void_$pp_java_lang(new Error(this));
 }
 //Initialization from constructor 'MyJsException()'.
 /** @nodts */
 $ctor__exception_MyJsException__void() {
  this.$ctor__java_lang_Exception__void();
 }
 //Factory method corresponding to constructor 'MyJsException(Throwable)'.
 /** @nodts @return {!MyJsException} */
 static $create__java_lang_Throwable(/** Throwable */ cause) {
  MyJsException.$clinit();
  let $instance = new MyJsException();
  $instance.$ctor__exception_MyJsException__java_lang_Throwable__void(cause);
  $instance.m_privateInitError__java_lang_Object__void_$pp_java_lang(new Error($instance));
  return $instance;
 }
 //Initialization from constructor 'MyJsException(Throwable)'.
 /** @nodts */
 $ctor__exception_MyJsException__java_lang_Throwable__void(/** Throwable */ cause) {}
 /** @nodts */
 static $clinit() {
  MyJsException.$clinit = () =>{};
  MyJsException.$loadModules();
  Exception.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof MyJsException;
 }
 
 /** @nodts */
 static $loadModules() {}
}
$Util.$setClassMetadata(MyJsException, 'exception.MyJsException');

exports = MyJsException;

//# sourceMappingURL=MyJsException.js.map
