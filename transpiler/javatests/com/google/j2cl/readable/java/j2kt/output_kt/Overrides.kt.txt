// Generated from "j2kt/Overrides.java"
@file:OptIn(ExperimentalObjCName::class)
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "REPEATED_BOUND",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER")

package j2kt

import javaemul.lang.*
import kotlin.OptIn
import kotlin.String
import kotlin.Suppress
import kotlin.experimental.ExperimentalObjCName
import kotlin.native.ObjCName

@ObjCName("J2ktJ2ktOverrides", exact = true)
open class Overrides {
 @ObjCName("J2ktJ2ktOverrides_Parent", exact = true)
 interface Parent<T> {
  @ObjCName("foo")
  fun <E: T> foo(
   @ObjCName("withId") e: E
  )
 }

 @ObjCName("J2ktJ2ktOverrides_Child", exact = true)
 interface Child: Overrides.Parent<String?> {
  override fun <E: String?> foo(e: E)
 }
}
