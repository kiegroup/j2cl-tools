[Main] => [Main]
[Main] => [constructor]
[Main] => [super();] "nativejstypes.Main.<synthetic: ctor_js>"
[Main] => [$create__]
[Main] => [Main.$clinit();] "nativejstypes.Main.<synthetic: ctor_create>"
[Main] => [let $instance = new Main();] "nativejstypes.Main.<synthetic: ctor_create>"
[Main] => [$instance.$ctor__nativejstypes_Main__void();] "nativejstypes.Main.<synthetic: ctor_create>"
[Main] => [return $instance;] "nativejstypes.Main.<synthetic: ctor_create>"
[Main] => [$ctor__nativejstypes_Main__void]
[Main] => [this.$ctor__java_lang_Object__void();] "nativejstypes.Main.<init>"
[testNativeJsTypeWithNamespace] => [m_testNativeJsTypeWithNamespace__int]
[{
    Foo foo = new Foo();
    return foo.sum();
  }] => [Main.$clinit();] "nativejstypes.Main.testNativeJsTypeWithNamespace"
[Foo foo = new Foo();] => [let foo = new Foo();] "nativejstypes.Main.testNativeJsTypeWithNamespace"
[foo] => [foo] "foo"
[return foo.sum();] => [return foo.sum();] "nativejstypes.Main.testNativeJsTypeWithNamespace"
[testNativeJsTypeWithNamespaceJsProperties] => [m_testNativeJsTypeWithNamespaceJsProperties__void]
[{
    Foo foo = new Foo();
...    foo.y = 5;
  }] => [Main.$clinit();] "nativejstypes.Main.testNativeJsTypeWithNamespaceJsProperties"
[Foo foo = new Foo();] => [let foo = new Foo();] "nativejstypes.Main.testNativeJsTypeWithNamespaceJsProperties"
[foo] => [foo] "foo"
[foo.x = 50;] => [foo.x = 50;] "nativejstypes.Main.testNativeJsTypeWithNamespaceJsProperties"
[foo.y = 5;] => [foo.y = 5;] "nativejstypes.Main.testNativeJsTypeWithNamespaceJsProperties"
[testNativeJsTypeWithoutNamespace] => [m_testNativeJsTypeWithoutNamespace__int]
[{
    Bar bar = new Bar(6, 7);
...    return bar.product();
  }] => [Main.$clinit();] "nativejstypes.Main.testNativeJsTypeWithoutNamespace"
[Bar bar = new Bar(6, 7);] => [let bar = new Bar(6, 7);] "nativejstypes.Main.testNativeJsTypeWithoutNamespace"
[bar] => [bar] "bar"
[int unused = Bar.getStatic();] => [let unused = Bar.getStatic();] "nativejstypes.Main.testNativeJsTypeWithoutNamespace"
[unused] => [unused] "unused"
[return bar.product();] => [return bar.product();] "nativejstypes.Main.testNativeJsTypeWithoutNamespace"
[testNativeJsTypeWithoutNamespaceJsProperties] => [m_testNativeJsTypeWithoutNamespaceJsProperties__void]
[{
    Bar bar = new Bar(6, 7);
...    Bar.f = 10;
  }] => [Main.$clinit();] "nativejstypes.Main.testNativeJsTypeWithoutNamespaceJsProperties"
[Bar bar = new Bar(6, 7);] => [let bar = new Bar(6, 7);] "nativejstypes.Main.testNativeJsTypeWithoutNamespaceJsProperties"
[bar] => [bar] "bar"
[bar.x = 50;] => [bar.x = 50;] "nativejstypes.Main.testNativeJsTypeWithoutNamespaceJsProperties"
[bar.y = 5;] => [bar.y = 5;] "nativejstypes.Main.testNativeJsTypeWithoutNamespaceJsProperties"
[Bar.f = 10;] => [Bar.f = 10;] "nativejstypes.Main.testNativeJsTypeWithoutNamespaceJsProperties"
[testInnerNativeJsType] => [m_testInnerNativeJsType__void]
[{
    Bar.Inner barInner = new Bar.Inner(1);
...    BarInnerWithDotInName.getInnerStatic();
  }] => [Main.$clinit();] "nativejstypes.Main.testInnerNativeJsType"
[Bar.Inner barInner = new Bar.Inner(1);] => [let barInner = new Bar.Inner(1);] "nativejstypes.Main.testInnerNativeJsType"
[barInner] => [barInner] "barInner"
[BarInnerWithDotInName barInnerWithDotInName = new BarInnerWithDotInName(2);] => [let barInnerWithDotInName = new $synthetic_nativejstypes_Bar.Inner(2);] "nativejstypes.Main.testInnerNativeJsType"
[barInnerWithDotInName] => [barInnerWithDotInName] "barInnerWithDotInName"
[barInner.square();] => [barInner.square();] "nativejstypes.Main.testInnerNativeJsType"
[barInnerWithDotInName.square();] => [barInnerWithDotInName.square();] "nativejstypes.Main.testInnerNativeJsType"
[Bar.Inner.getInnerStatic();] => [Bar.Inner.getInnerStatic();] "nativejstypes.Main.testInnerNativeJsType"
[BarInnerWithDotInName.getInnerStatic();] => [$synthetic_nativejstypes_Bar.Inner.getInnerStatic();] "nativejstypes.Main.testInnerNativeJsType"
[testGlobalNativeJsType] => [m_testGlobalNativeJsType__void]
[{
    Headers header = new Headers();
    header.append("Content-Type", "text/xml");
  }] => [Main.$clinit();] "nativejstypes.Main.testGlobalNativeJsType"
[Headers header = new Headers();] => [let header = new Headers();] "nativejstypes.Main.testGlobalNativeJsType"
[header] => [header] "header"
[header.append("Content-Type", "text/xml");] => [header.append('Content-Type', 'text/xml');] "nativejstypes.Main.testGlobalNativeJsType"
[testNativeTypeClassLiteral] => [m_testNativeTypeClassLiteral__void]
[{
    Object o1 = Bar.class;
    o1 = Bar[][].class;
  }] => [Main.$clinit();] "nativejstypes.Main.testNativeTypeClassLiteral"
[Object o1 = Bar.class;] => [let o1 = Class.$get($JavaScriptObject);] "nativejstypes.Main.testNativeTypeClassLiteral"
[o1] => [o1] "o1"
[o1 = Bar[][].class;] => [o1 = Class.$get(j_l_Object, 1);] "nativejstypes.Main.testNativeTypeClassLiteral"
[testNativeTypeObjectMethods] => [m_testNativeTypeObjectMethods__void]
[{
    Bar bar = new Bar(6, 7);
...    boolean unusedEq = bar.equals(new Object());
  }] => [Main.$clinit();] "nativejstypes.Main.testNativeTypeObjectMethods"
[Bar bar = new Bar(6, 7);] => [let bar = new Bar(6, 7);] "nativejstypes.Main.testNativeTypeObjectMethods"
[bar] => [bar] "bar"
[String unusedStr = bar.toString();] => [let unusedStr = $Objects.m_toString__java_lang_Object__java_lang_String(bar);] "nativejstypes.Main.testNativeTypeObjectMethods"
[unusedStr] => [unusedStr] "unusedStr"
[int unusedHash = bar.hashCode();] => [let unusedHash = $Objects.m_hashCode__java_lang_Object__int(bar);] "nativejstypes.Main.testNativeTypeObjectMethods"
[unusedHash] => [unusedHash] "unusedHash"
[boolean unusedEq = bar.equals(new Object());] => [let unusedEq = $Objects.m_equals__java_lang_Object__java_lang_Object__boolean(bar, j_l_Object.$create__());] "nativejstypes.Main.testNativeTypeObjectMethods"
[unusedEq] => [unusedEq] "unusedEq"
[Main] => [$clinit]
[Main] => [Main.$clinit = () =>{};] "nativejstypes.Main.<clinit>"
[Main] => [Main.$loadModules();] "nativejstypes.Main.<clinit>"
[Main] => [j_l_Object.$clinit();] "nativejstypes.Main.<clinit>"
