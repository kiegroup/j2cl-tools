[Main] => [Main]
[Main] => [constructor]
[Main] => [super();] "circularimportuse.Main.<synthetic: ctor_js>"
[Main] => [$create__]
[Main] => [Main.$clinit();] "circularimportuse.Main.<synthetic: ctor_create>"
[Main] => [let $instance = new Main();] "circularimportuse.Main.<synthetic: ctor_create>"
[Main] => [$instance.$ctor__circularimportuse_Main__void();] "circularimportuse.Main.<synthetic: ctor_create>"
[Main] => [return $instance;] "circularimportuse.Main.<synthetic: ctor_create>"
[Main] => [$ctor__circularimportuse_Main__void]
[Main] => [this.$ctor__java_lang_Object__void();] "circularimportuse.Main.<init>"
[main] => [m_main__arrayOf_java_lang_String__void]
[args] => [args] "args"
[{
    Left left = new Left();
    Right right = new Right();
  }] => [Main.$clinit();] "circularimportuse.Main.main"
[Left left = new Left();] => [let left = Left.$create__();] "circularimportuse.Main.main"
[left] => [left] "left"
[Right right = new Right();] => [let right = Right.$create__();] "circularimportuse.Main.main"
[right] => [right] "right"
[Main] => [$clinit]
[Main] => [Main.$clinit = () =>{};] "circularimportuse.Main.<clinit>"
[Main] => [Main.$loadModules();] "circularimportuse.Main.<clinit>"
[Main] => [j_l_Object.$clinit();] "circularimportuse.Main.<clinit>"
