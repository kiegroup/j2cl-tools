[CastPrimitives] => [CastPrimitives]
[CastPrimitives] => [constructor]
[CastPrimitives] => [super();] "cast.CastPrimitives.<synthetic: ctor_js>"
[CastPrimitives] => [$create__]
[CastPrimitives] => [CastPrimitives.$clinit();] "cast.CastPrimitives.<synthetic: ctor_create>"
[CastPrimitives] => [let $instance = new CastPrimitives();] "cast.CastPrimitives.<synthetic: ctor_create>"
[CastPrimitives] => [$instance.$ctor__cast_CastPrimitives__void();] "cast.CastPrimitives.<synthetic: ctor_create>"
[CastPrimitives] => [return $instance;] "cast.CastPrimitives.<synthetic: ctor_create>"
[CastPrimitives] => [$ctor__cast_CastPrimitives__void]
[CastPrimitives] => [this.$ctor__java_lang_Object__void();] "cast.CastPrimitives.<init>"
[testPrimitiveCasts] => [m_testPrimitiveCasts__void]
[byte b = 1;] => [let b = 1;] "cast.CastPrimitives.testPrimitiveCasts"
[b] => [b] "b"
[char c = 1;] => [let c = 1 /* '\u0001' */;] "cast.CastPrimitives.testPrimitiveCasts"
[c] => [c] "c"
[short s = 1;] => [let s = 1;] "cast.CastPrimitives.testPrimitiveCasts"
[s] => [s] "s"
[int i = 1;] => [let i = 1;] "cast.CastPrimitives.testPrimitiveCasts"
[i] => [i] "i"
[long l = 1L;] => [let l = $Long.fromInt(1);] "cast.CastPrimitives.testPrimitiveCasts"
[l] => [l] "l"
[float f = 1.1f;] => [let f = 1.100000023841858;] "cast.CastPrimitives.testPrimitiveCasts"
[f] => [f] "f"
[double d = 1.1;] => [let d = 1.1;] "cast.CastPrimitives.testPrimitiveCasts"
[d] => [d] "d"
[b = (byte) b;] => [b = b;] "cast.CastPrimitives.testPrimitiveCasts"
[c = (char) b;] => [c = $Primitives.widenByteToChar(b);] "cast.CastPrimitives.testPrimitiveCasts"
[s = (short) b;] => [s = b;] "cast.CastPrimitives.testPrimitiveCasts"
[i = (int) b;] => [i = b;] "cast.CastPrimitives.testPrimitiveCasts"
[l = (long) b;] => [l = $Primitives.widenByteToLong(b);] "cast.CastPrimitives.testPrimitiveCasts"
[f = (float) b;] => [f = b;] "cast.CastPrimitives.testPrimitiveCasts"
[d = (double) b;] => [d = b;] "cast.CastPrimitives.testPrimitiveCasts"
[b = (byte) c;] => [b = $Primitives.narrowCharToByte(c);] "cast.CastPrimitives.testPrimitiveCasts"
[c = (char) c;] => [c = c;] "cast.CastPrimitives.testPrimitiveCasts"
[s = (short) c;] => [s = $Primitives.narrowCharToShort(c);] "cast.CastPrimitives.testPrimitiveCasts"
[i = (int) c;] => [i = c;] "cast.CastPrimitives.testPrimitiveCasts"
[l = (long) c;] => [l = $Primitives.widenCharToLong(c);] "cast.CastPrimitives.testPrimitiveCasts"
[f = (float) c;] => [f = c;] "cast.CastPrimitives.testPrimitiveCasts"
[d = (double) c;] => [d = c;] "cast.CastPrimitives.testPrimitiveCasts"
[b = (byte) s;] => [b = $Primitives.narrowShortToByte(s);] "cast.CastPrimitives.testPrimitiveCasts"
[c = (char) s;] => [c = $Primitives.narrowShortToChar(s);] "cast.CastPrimitives.testPrimitiveCasts"
[s = (short) s;] => [s = s;] "cast.CastPrimitives.testPrimitiveCasts"
[i = (int) s;] => [i = s;] "cast.CastPrimitives.testPrimitiveCasts"
[l = (long) s;] => [l = $Primitives.widenShortToLong(s);] "cast.CastPrimitives.testPrimitiveCasts"
[f = (float) s;] => [f = s;] "cast.CastPrimitives.testPrimitiveCasts"
[d = (double) s;] => [d = s;] "cast.CastPrimitives.testPrimitiveCasts"
[b = (byte) i;] => [b = $Primitives.narrowIntToByte(i);] "cast.CastPrimitives.testPrimitiveCasts"
[c = (char) i;] => [c = $Primitives.narrowIntToChar(i);] "cast.CastPrimitives.testPrimitiveCasts"
[s = (short) i;] => [s = $Primitives.narrowIntToShort(i);] "cast.CastPrimitives.testPrimitiveCasts"
[i = (int) i;] => [i = i;] "cast.CastPrimitives.testPrimitiveCasts"
[l = (long) i;] => [l = $Primitives.widenIntToLong(i);] "cast.CastPrimitives.testPrimitiveCasts"
[f = (float) i;] => [f = i;] "cast.CastPrimitives.testPrimitiveCasts"
[d = (double) i;] => [d = i;] "cast.CastPrimitives.testPrimitiveCasts"
[b = (byte) l;] => [b = $Primitives.narrowLongToByte(l);] "cast.CastPrimitives.testPrimitiveCasts"
[c = (char) l;] => [c = $Primitives.narrowLongToChar(l);] "cast.CastPrimitives.testPrimitiveCasts"
[s = (short) l;] => [s = $Primitives.narrowLongToShort(l);] "cast.CastPrimitives.testPrimitiveCasts"
[i = (int) l;] => [i = $Primitives.narrowLongToInt(l);] "cast.CastPrimitives.testPrimitiveCasts"
[l = (long) l;] => [l = l;] "cast.CastPrimitives.testPrimitiveCasts"
[f = (float) l;] => [f = $Primitives.widenLongToFloat(l);] "cast.CastPrimitives.testPrimitiveCasts"
[d = (double) l;] => [d = $Primitives.widenLongToDouble(l);] "cast.CastPrimitives.testPrimitiveCasts"
[b = (byte) f;] => [b = $Primitives.narrowFloatToByte(f);] "cast.CastPrimitives.testPrimitiveCasts"
[c = (char) f;] => [c = $Primitives.narrowFloatToChar(f);] "cast.CastPrimitives.testPrimitiveCasts"
[s = (short) f;] => [s = $Primitives.narrowFloatToShort(f);] "cast.CastPrimitives.testPrimitiveCasts"
[i = (int) f;] => [i = $Primitives.narrowFloatToInt(f);] "cast.CastPrimitives.testPrimitiveCasts"
[l = (long) f;] => [l = $Primitives.narrowFloatToLong(f);] "cast.CastPrimitives.testPrimitiveCasts"
[f = (float) f;] => [f = f;] "cast.CastPrimitives.testPrimitiveCasts"
[d = (double) f;] => [d = f;] "cast.CastPrimitives.testPrimitiveCasts"
[b = (byte) d;] => [b = $Primitives.narrowDoubleToByte(d);] "cast.CastPrimitives.testPrimitiveCasts"
[c = (char) d;] => [c = $Primitives.narrowDoubleToChar(d);] "cast.CastPrimitives.testPrimitiveCasts"
[s = (short) d;] => [s = $Primitives.narrowDoubleToShort(d);] "cast.CastPrimitives.testPrimitiveCasts"
[i = (int) d;] => [i = $Primitives.narrowDoubleToInt(d);] "cast.CastPrimitives.testPrimitiveCasts"
[l = (long) d;] => [l = $Primitives.narrowDoubleToLong(d);] "cast.CastPrimitives.testPrimitiveCasts"
[f = (float) d;] => [f = d;] "cast.CastPrimitives.testPrimitiveCasts"
[d = (double) d;] => [d = d;] "cast.CastPrimitives.testPrimitiveCasts"
[testReferenceToPrimitive] => [m_testReferenceToPrimitive__void]
[Object o = new Object();] => [let o = j_l_Object.$create__();] "cast.CastPrimitives.testReferenceToPrimitive"
[o] => [o] "o"
[boolean bool = (boolean) o;] => [let bool = Boolean.m_booleanValue__java_lang_Boolean__boolean(/**@type {boolean}*/ ($Casts.$to(o, Boolean)));] "cast.CastPrimitives.testReferenceToPrimitive"
[bool] => [bool] "bool"
[byte b = (byte) o;] => [let b = /**@type {!Byte}*/ ($Casts.$to(o, Byte)).m_byteValue__byte();] "cast.CastPrimitives.testReferenceToPrimitive"
[b] => [b] "b"
[char c = (char) o;] => [let c = /**@type {!Character}*/ ($Casts.$to(o, Character)).m_charValue__char();] "cast.CastPrimitives.testReferenceToPrimitive"
[c] => [c] "c"
[short s = (short) o;] => [let s = /**@type {!Short}*/ ($Casts.$to(o, Short)).m_shortValue__short();] "cast.CastPrimitives.testReferenceToPrimitive"
[s] => [s] "s"
[int i = (int) o;] => [let i = /**@type {!Integer}*/ ($Casts.$to(o, Integer)).m_intValue__int();] "cast.CastPrimitives.testReferenceToPrimitive"
[i] => [i] "i"
[long l = (long) o;] => [let l = /**@type {!Long}*/ ($Casts.$to(o, Long)).m_longValue__long();] "cast.CastPrimitives.testReferenceToPrimitive"
[l] => [l] "l"
[float f = (float) o;] => [let f = /**@type {!Float}*/ ($Casts.$to(o, Float)).m_floatValue__float();] "cast.CastPrimitives.testReferenceToPrimitive"
[f] => [f] "f"
[double d = (double) o;] => [let d = Double.m_doubleValue__java_lang_Double__double(/**@type {number}*/ ($Casts.$to(o, Double)));] "cast.CastPrimitives.testReferenceToPrimitive"
[d] => [d] "d"
[testLiteralToPrimitive] => [m_testLiteralToPrimitive__void]
[byte b;] => [let /** number */ b;] "cast.CastPrimitives.testLiteralToPrimitive"
[b] => [b] "b"
[char c;] => [let /** number */ c;] "cast.CastPrimitives.testLiteralToPrimitive"
[c] => [c] "c"
[short s;] => [let /** number */ s;] "cast.CastPrimitives.testLiteralToPrimitive"
[s] => [s] "s"
[int i;] => [let /** number */ i;] "cast.CastPrimitives.testLiteralToPrimitive"
[i] => [i] "i"
[long l;] => [let /** !$Long */ l;] "cast.CastPrimitives.testLiteralToPrimitive"
[l] => [l] "l"
[float f;] => [let /** number */ f;] "cast.CastPrimitives.testLiteralToPrimitive"
[f] => [f] "f"
[double d;] => [let /** number */ d;] "cast.CastPrimitives.testLiteralToPrimitive"
[d] => [d] "d"
[b = (byte) 1;] => [b = 1;] "cast.CastPrimitives.testLiteralToPrimitive"
[c = (char) 1;] => [c = 1 /* '\u0001' */;] "cast.CastPrimitives.testLiteralToPrimitive"
[s = (short) 1;] => [s = 1;] "cast.CastPrimitives.testLiteralToPrimitive"
[i = (int) 1;] => [i = 1;] "cast.CastPrimitives.testLiteralToPrimitive"
[l = (long) 1;] => [l = $Long.fromInt(1);] "cast.CastPrimitives.testLiteralToPrimitive"
[f = (float) 1;] => [f = 1;] "cast.CastPrimitives.testLiteralToPrimitive"
[d = (double) 1;] => [d = 1;] "cast.CastPrimitives.testLiteralToPrimitive"
[b = (byte) 1L;] => [b = 1;] "cast.CastPrimitives.testLiteralToPrimitive"
[c = (char) 1L;] => [c = 1 /* '\u0001' */;] "cast.CastPrimitives.testLiteralToPrimitive"
[s = (short) 1L;] => [s = 1;] "cast.CastPrimitives.testLiteralToPrimitive"
[i = (int) 1L;] => [i = 1;] "cast.CastPrimitives.testLiteralToPrimitive"
[l = (long) 1L;] => [l = $Long.fromInt(1);] "cast.CastPrimitives.testLiteralToPrimitive"
[f = (float) 1L;] => [f = 1;] "cast.CastPrimitives.testLiteralToPrimitive"
[d = (double) 1L;] => [d = 1;] "cast.CastPrimitives.testLiteralToPrimitive"
[b = (byte) 1.2f;] => [b = 1;] "cast.CastPrimitives.testLiteralToPrimitive"
[c = (char) 1.2f;] => [c = 1 /* '\u0001' */;] "cast.CastPrimitives.testLiteralToPrimitive"
[s = (short) 1.2f;] => [s = 1;] "cast.CastPrimitives.testLiteralToPrimitive"
[i = (int) 1.2f;] => [i = 1;] "cast.CastPrimitives.testLiteralToPrimitive"
[l = (long) 1.2f;] => [l = $Long.fromInt(1);] "cast.CastPrimitives.testLiteralToPrimitive"
[f = (float) 1.2f;] => [f = 1.2000000476837158;] "cast.CastPrimitives.testLiteralToPrimitive"
[d = (double) 1.2f;] => [d = 1.2000000476837158;] "cast.CastPrimitives.testLiteralToPrimitive"
[b = (byte) 1.2;] => [b = 1;] "cast.CastPrimitives.testLiteralToPrimitive"
[c = (char) 1.2;] => [c = 1 /* '\u0001' */;] "cast.CastPrimitives.testLiteralToPrimitive"
[s = (short) 1.2;] => [s = 1;] "cast.CastPrimitives.testLiteralToPrimitive"
[i = (int) 1.2;] => [i = 1;] "cast.CastPrimitives.testLiteralToPrimitive"
[l = (long) 1.2;] => [l = $Long.fromInt(1);] "cast.CastPrimitives.testLiteralToPrimitive"
[f = (float) 1.2;] => [f = 1.2;] "cast.CastPrimitives.testLiteralToPrimitive"
[d = (double) 1.2;] => [d = 1.2;] "cast.CastPrimitives.testLiteralToPrimitive"
[b = (byte) 'a';] => [b = 97;] "cast.CastPrimitives.testLiteralToPrimitive"
[c = (char) 'a';] => [c = 97 /* 'a' */;] "cast.CastPrimitives.testLiteralToPrimitive"
[s = (short) 'a';] => [s = 97;] "cast.CastPrimitives.testLiteralToPrimitive"
[i = (int) 'a';] => [i = 97 /* 'a' */;] "cast.CastPrimitives.testLiteralToPrimitive"
[l = (long) 'a';] => [l = $Long.fromInt(97);] "cast.CastPrimitives.testLiteralToPrimitive"
[f = (float) 'a';] => [f = 97 /* 'a' */;] "cast.CastPrimitives.testLiteralToPrimitive"
[d = (double) 'a';] => [d = 97 /* 'a' */;] "cast.CastPrimitives.testLiteralToPrimitive"
[testUnboxAndWiden] => [m_testUnboxAndWiden__void]
[Byte boxedByte = Byte.valueOf((byte) 0);] => [let boxedByte = Byte.m_valueOf__byte__java_lang_Byte(0);] "cast.CastPrimitives.testUnboxAndWiden"
[boxedByte] => [boxedByte] "boxedByte"
[short s = (short) boxedByte;] => [let s = boxedByte.m_byteValue__byte();] "cast.CastPrimitives.testUnboxAndWiden"
[s] => [s] "s"
[int i = (int) boxedByte;] => [let i = boxedByte.m_byteValue__byte();] "cast.CastPrimitives.testUnboxAndWiden"
[i] => [i] "i"
[long l = (long) boxedByte;] => [let l = $Primitives.widenByteToLong(boxedByte.m_byteValue__byte());] "cast.CastPrimitives.testUnboxAndWiden"
[l] => [l] "l"
[float f = (float) boxedByte;] => [let f = boxedByte.m_byteValue__byte();] "cast.CastPrimitives.testUnboxAndWiden"
[f] => [f] "f"
[double d = (double) boxedByte;] => [let d = boxedByte.m_byteValue__byte();] "cast.CastPrimitives.testUnboxAndWiden"
[d] => [d] "d"
[testImplicitArgumentCasts] => [m_testImplicitArgumentCasts__void]
[final byte b = 127;] => [let b = 127;] "cast.CastPrimitives.testImplicitArgumentCasts"
[b] => [b] "b"
[final char c = 65535;] => [let c = 65535 /* '\uFFFF' */;] "cast.CastPrimitives.testImplicitArgumentCasts"
[c] => [c] "c"
[final short s = 32767;] => [let s = 32767;] "cast.CastPrimitives.testImplicitArgumentCasts"
[s] => [s] "s"
[final int i = 2147483647;] => [let i = 2147483647;] "cast.CastPrimitives.testImplicitArgumentCasts"
[i] => [i] "i"
[final long l = 9223372036854775807L;] => [let l = $Long.fromBits(-1, 2147483647) /* 9223372036854775807 */;] "cast.CastPrimitives.testImplicitArgumentCasts"
[l] => [l] "l"
[final float f = 3.4028235E38f;] => [let f = 3.4028234663852886E38;] "cast.CastPrimitives.testImplicitArgumentCasts"
[f] => [f] "f"
[final double d = 1.7976931348623157E308d;] => [let d = 1.7976931348623157E308;] "cast.CastPrimitives.testImplicitArgumentCasts"
[d] => [d] "d"
[getShort(b);] => [CastPrimitives.m_getShort__short__short(b);] "cast.CastPrimitives.testImplicitArgumentCasts"
[getInt(b);] => [CastPrimitives.m_getInt__int__int(b);] "cast.CastPrimitives.testImplicitArgumentCasts"
[getLong(b);] => [CastPrimitives.m_getLong__long__long($Primitives.widenByteToLong(b));] "cast.CastPrimitives.testImplicitArgumentCasts"
[getFloat(b);] => [CastPrimitives.m_getFloat__float__float(b);] "cast.CastPrimitives.testImplicitArgumentCasts"
[getDouble(b);] => [CastPrimitives.m_getDouble__double__double(b);] "cast.CastPrimitives.testImplicitArgumentCasts"
[getFloat(l);] => [CastPrimitives.m_getFloat__float__float($Primitives.widenLongToFloat(l));] "cast.CastPrimitives.testImplicitArgumentCasts"
[getDouble(l);] => [CastPrimitives.m_getDouble__double__double($Primitives.widenLongToDouble(l));] "cast.CastPrimitives.testImplicitArgumentCasts"
[getDouble(f);] => [CastPrimitives.m_getDouble__double__double(f);] "cast.CastPrimitives.testImplicitArgumentCasts"
[new IntValueHolder(b);] => [IntValueHolder.$create__int(b);] "cast.CastPrimitives.testImplicitArgumentCasts"
[new IntValueHolder(c);] => [IntValueHolder.$create__int(c);] "cast.CastPrimitives.testImplicitArgumentCasts"
[new IntValueHolder(s);] => [IntValueHolder.$create__int(s);] "cast.CastPrimitives.testImplicitArgumentCasts"
[new LongValueHolder(b);] => [LongValueHolder.$create__long($Primitives.widenByteToLong(b));] "cast.CastPrimitives.testImplicitArgumentCasts"
[new LongValueHolder(c);] => [LongValueHolder.$create__long($Primitives.widenCharToLong(c));] "cast.CastPrimitives.testImplicitArgumentCasts"
[new LongValueHolder(i);] => [LongValueHolder.$create__long($Primitives.widenIntToLong(i));] "cast.CastPrimitives.testImplicitArgumentCasts"
[testImplicitArrayIndexCasts] => [m_testImplicitArrayIndexCasts__arrayOf_byte__void]
[array] => [array] "array"
[final byte b = 127;] => [let b = 127;] "cast.CastPrimitives.testImplicitArrayIndexCasts"
[b] => [b] "b"
[final char c = 65535;] => [let c = 65535 /* '\uFFFF' */;] "cast.CastPrimitives.testImplicitArrayIndexCasts"
[c] => [c] "c"
[final short s = 32767;] => [let s = 32767;] "cast.CastPrimitives.testImplicitArrayIndexCasts"
[s] => [s] "s"
[final int i = 2147483647;] => [let i = 2147483647;] "cast.CastPrimitives.testImplicitArrayIndexCasts"
[i] => [i] "i"
[byte result;] => [let /** number */ result;] "cast.CastPrimitives.testImplicitArrayIndexCasts"
[result] => [result] "result"
[result = array[b];] => [result = array[b];] "cast.CastPrimitives.testImplicitArrayIndexCasts"
[result = array[c];] => [result = array[c];] "cast.CastPrimitives.testImplicitArrayIndexCasts"
[result = array[s];] => [result = array[s];] "cast.CastPrimitives.testImplicitArrayIndexCasts"
[result = array[i];] => [result = array[i];] "cast.CastPrimitives.testImplicitArrayIndexCasts"
[result = array[1];] => [result = array[1];] "cast.CastPrimitives.testImplicitArrayIndexCasts"
[result = array['a'];] => [result = array[97 /* 'a' */];] "cast.CastPrimitives.testImplicitArrayIndexCasts"
[getShort] => [m_getShort__short__short]
[value] => [value] "value"
[return value;] => [return value;] "cast.CastPrimitives.getShort"
[getInt] => [m_getInt__int__int]
[value] => [value] "value"
[return value;] => [return value;] "cast.CastPrimitives.getInt"
[getLong] => [m_getLong__long__long]
[value] => [value] "value"
[return value;] => [return value;] "cast.CastPrimitives.getLong"
[getFloat] => [m_getFloat__float__float]
[value] => [value] "value"
[return value;] => [return value;] "cast.CastPrimitives.getFloat"
[getDouble] => [m_getDouble__double__double]
[value] => [value] "value"
[return value;] => [return value;] "cast.CastPrimitives.getDouble"
[testImplicitLongAssignmentCasts] => [m_testImplicitLongAssignmentCasts__void]
[byte fbyte = 11;] => [let fbyte = 11;] "cast.CastPrimitives.testImplicitLongAssignmentCasts"
[fbyte] => [fbyte] "fbyte"
[char fchar = 12;] => [let fchar = 12 /* '\u000C' */;] "cast.CastPrimitives.testImplicitLongAssignmentCasts"
[fchar] => [fchar] "fchar"
[short fshort = 13;] => [let fshort = 13;] "cast.CastPrimitives.testImplicitLongAssignmentCasts"
[fshort] => [fshort] "fshort"
[int fint = 14;] => [let fint = 14;] "cast.CastPrimitives.testImplicitLongAssignmentCasts"
[fint] => [fint] "fint"
[long flong = 15;] => [let flong = $Long.fromInt(15);] "cast.CastPrimitives.testImplicitLongAssignmentCasts"
[flong] => [flong] "flong"
[float ffloat = 16;] => [let ffloat = 16;] "cast.CastPrimitives.testImplicitLongAssignmentCasts"
[ffloat] => [ffloat] "ffloat"
[double fdouble = 17;] => [let fdouble = 17;] "cast.CastPrimitives.testImplicitLongAssignmentCasts"
[fdouble] => [fdouble] "fdouble"
[long tlong = 0;] => [let tlong = $Long.fromInt(0);] "cast.CastPrimitives.testImplicitLongAssignmentCasts"
[tlong] => [tlong] "tlong"
[tlong = fbyte;] => [tlong = $Primitives.widenByteToLong(fbyte);] "cast.CastPrimitives.testImplicitLongAssignmentCasts"
[tlong = flong;] => [tlong = flong;] "cast.CastPrimitives.testImplicitLongAssignmentCasts"
[tlong = fint;] => [tlong = $Primitives.widenIntToLong(fint);] "cast.CastPrimitives.testImplicitLongAssignmentCasts"
[tlong += fint;] => [tlong = $LongUtils.plus(tlong, $Primitives.widenIntToLong(fint));] "cast.CastPrimitives.testImplicitLongAssignmentCasts"
[tlong <<= fint;] => [tlong = $LongUtils.leftShift(tlong, fint);] "cast.CastPrimitives.testImplicitLongAssignmentCasts"
[tlong += fchar;] => [tlong = $LongUtils.plus(tlong, $Primitives.widenCharToLong(fchar));] "cast.CastPrimitives.testImplicitLongAssignmentCasts"
[tlong += flong;] => [tlong = $LongUtils.plus(tlong, flong);] "cast.CastPrimitives.testImplicitLongAssignmentCasts"
[tlong += ffloat;] => [tlong = $Primitives.narrowFloatToLong($Primitives.widenLongToFloat(tlong) + ffloat);] "cast.CastPrimitives.testImplicitLongAssignmentCasts"
[tlong = flong * fint;] => [tlong = $LongUtils.times(flong, $Primitives.widenIntToLong(fint));] "cast.CastPrimitives.testImplicitLongAssignmentCasts"
[tlong = flong >> fint;] => [tlong = $LongUtils.rightShiftSigned(flong, fint);] "cast.CastPrimitives.testImplicitLongAssignmentCasts"
[tlong = flong + fshort;] => [tlong = $LongUtils.plus(flong, $Primitives.widenShortToLong(fshort));] "cast.CastPrimitives.testImplicitLongAssignmentCasts"
[tlong = flong + flong;] => [tlong = $LongUtils.plus(flong, flong);] "cast.CastPrimitives.testImplicitLongAssignmentCasts"
[tlong = flong << tlong;] => [tlong = $LongUtils.leftShift(flong, $Primitives.narrowLongToInt(tlong));] "cast.CastPrimitives.testImplicitLongAssignmentCasts"
[tlong <<= flong;] => [tlong = $LongUtils.leftShift(tlong, $Primitives.narrowLongToInt(flong));] "cast.CastPrimitives.testImplicitLongAssignmentCasts"
[tlong = 0 + 1 + 2L;] => [tlong = $LongUtils.plus($Primitives.widenIntToLong(0 + 1 | 0), $Long.fromInt(2));] "cast.CastPrimitives.testImplicitLongAssignmentCasts"
[CastPrimitives] => [$clinit]
[CastPrimitives] => [CastPrimitives.$clinit = () =>{};] "cast.CastPrimitives.<clinit>"
[CastPrimitives] => [CastPrimitives.$loadModules();] "cast.CastPrimitives.<clinit>"
[CastPrimitives] => [j_l_Object.$clinit();] "cast.CastPrimitives.<clinit>"
