package ${packageName};

public abstract class AbstractRewriter extends ProcessorPrivate {
#foreach($clazz in $classes)

  public boolean shouldProcess${clazz.SimpleName}(${clazz.SimpleName} ${clazz.ParameterName}) {
#if(${clazz.isTop()})
    return true;
#else
    return shouldProcess${clazz.SuperclassName}(${clazz.ParameterName});
#end
  }
#end
#foreach($clazz in $classes)
  @Override
  final ${clazz.TopClassName} postProcess${clazz.SimpleName}(${clazz.SimpleName} ${clazz.ParameterName}) {
    return rewrite${clazz.SimpleName}(${clazz.ParameterName});
  }

#end
#foreach($clazz in $classes)

  public ${clazz.TopClassName}  rewrite${clazz.SimpleName}(${clazz.SimpleName} ${clazz.ParameterName}) {
#if(${clazz.isTop()})
    return ${clazz.ParameterName};
#else
    return rewrite${clazz.SuperclassName}(${clazz.ParameterName});
#end
  }
#end
}
