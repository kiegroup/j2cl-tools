[Arrays] => [Arrays]
[Arrays] => [constructor]
[Arrays] => [super();] "array.Arrays.<synthetic: ctor_js>"
[Arrays] => [$create__]
[Arrays] => [Arrays.$clinit();] "array.Arrays.<synthetic: ctor_create>"
[Arrays] => [let $instance = new Arrays();] "array.Arrays.<synthetic: ctor_create>"
[Arrays] => [$instance.$ctor__array_Arrays__void();] "array.Arrays.<synthetic: ctor_create>"
[Arrays] => [return $instance;] "array.Arrays.<synthetic: ctor_create>"
[Arrays] => [$ctor__array_Arrays__void]
[Arrays] => [this.$ctor__java_lang_Object__void();] "array.Arrays.<init>"
[testObjectArray] => [m_testObjectArray__void]
[Object[] objects = new Object[100];] => [let objects = new Array(100);] "array.Arrays.testObjectArray"
[objects] => [objects] "objects"
[objects = new Object[0];] => [objects = new Array(0);] "array.Arrays.testObjectArray"
[objects = new Object[] {null, null};] => [objects = [null, null];] "array.Arrays.testObjectArray"
[Object[][] objects2d = new Object[5][10];] => [let objects2d = /**@type {!Array<Array<*>>}*/ ($Arrays.$create([5, 10], j_l_Object));] "array.Arrays.testObjectArray"
[objects2d] => [objects2d] "objects2d"
[objects2d = new Object[][] {{null, null}, null};] => [objects2d = /**@type {!Array<Array<*>>}*/ ($Arrays.$init([[null, null], null], j_l_Object, 2));] "array.Arrays.testObjectArray"
[objects2d = new Object[20][];] => [objects2d = /**@type {!Array<Array<*>>}*/ ($Arrays.$create([20, null], j_l_Object));] "array.Arrays.testObjectArray"
[Object[][] arrayLiteral2d = {{null, null}, null};] => [let arrayLiteral2d = /**@type {!Array<Array<*>>}*/ ($Arrays.$init([[null, null], null], j_l_Object, 2));] "array.Arrays.testObjectArray"
[arrayLiteral2d] => [arrayLiteral2d] "arrayLiteral2d"
[Object object = objects[0];] => [let object = objects[0];] "array.Arrays.testObjectArray"
[object] => [object] "object"
[object = objects2d[0][1];] => [object = objects2d[0][1];] "array.Arrays.testObjectArray"
[objects[0] = null;] => [$Arrays.$set(objects, 0, null);] "array.Arrays.testObjectArray"
[objects2d[0][1] = null;] => [$Arrays.$set(objects2d[0], 1, null);] "array.Arrays.testObjectArray"
[testJavaTypeArray] => [m_testJavaTypeArray__void]
[SomeObject[] objects = new SomeObject[100];] => [let objects = /**@type {!Array<SomeObject>}*/ ($Arrays.$create([100], SomeObject));] "array.Arrays.testJavaTypeArray"
[objects] => [objects] "objects"
[objects = new SomeObject[0];] => [objects = /**@type {!Array<SomeObject>}*/ ($Arrays.$create([0], SomeObject));] "array.Arrays.testJavaTypeArray"
[objects = new SomeObject[] {null, null};] => [objects = /**@type {!Array<SomeObject>}*/ ($Arrays.$init([null, null], SomeObject));] "array.Arrays.testJavaTypeArray"
[SomeObject[][] objects2d = new SomeObject[5][10];] => [let objects2d = /**@type {!Array<Array<SomeObject>>}*/ ($Arrays.$create([5, 10], SomeObject));] "array.Arrays.testJavaTypeArray"
[objects2d] => [objects2d] "objects2d"
[objects2d = new SomeObject[][] {{null, null}, null};] => [objects2d = /**@type {!Array<Array<SomeObject>>}*/ ($Arrays.$init([/**@type {!Array<SomeObject>}*/ ($Arrays.$init([null, null], SomeObject)), null], SomeObject, 2));] "array.Arrays.testJavaTypeArray"
[objects2d = new SomeObject[20][];] => [objects2d = /**@type {!Array<Array<SomeObject>>}*/ ($Arrays.$create([20, null], SomeObject));] "array.Arrays.testJavaTypeArray"
[SomeObject someObject = objects[0];] => [let someObject = objects[0];] "array.Arrays.testJavaTypeArray"
[someObject] => [someObject] "someObject"
[someObject = objects2d[0][1];] => [someObject = objects2d[0][1];] "array.Arrays.testJavaTypeArray"
[objects[0] = null;] => [$Arrays.$set(objects, 0, null);] "array.Arrays.testJavaTypeArray"
[objects2d[0][1] = null;] => [$Arrays.$set(objects2d[0], 1, null);] "array.Arrays.testJavaTypeArray"
[testIntArrays] => [m_testIntArrays__void_$pp_array]
[int[] ints = new int[100];] => [let ints = /**@type {!Array<number>}*/ ($Arrays.$create([100], $$int));] "array.Arrays.testIntArrays"
[ints] => [ints] "ints"
[ints = new int[0];] => [ints = /**@type {!Array<number>}*/ ($Arrays.$create([0], $$int));] "array.Arrays.testIntArrays"
[ints = new int[] {0, 1};] => [ints = /**@type {!Array<number>}*/ ($Arrays.$init([0, 1], $$int));] "array.Arrays.testIntArrays"
[int[][] ints2d = new int[5][10];] => [let ints2d = /**@type {!Array<Array<number>>}*/ ($Arrays.$create([5, 10], $$int));] "array.Arrays.testIntArrays"
[ints2d] => [ints2d] "ints2d"
[ints2d = new int[][] {{1, 2}, null};] => [ints2d = /**@type {!Array<Array<number>>}*/ ($Arrays.$init([/**@type {!Array<number>}*/ ($Arrays.$init([1, 2], $$int)), null], $$int, 2));] "array.Arrays.testIntArrays"
[ints2d = new int[20][];] => [ints2d = /**@type {!Array<Array<number>>}*/ ($Arrays.$create([20, null], $$int));] "array.Arrays.testIntArrays"
[int n = ints[0];] => [let n = ints[0];] "array.Arrays.testIntArrays"
[n] => [n] "n"
[n = ints2d[0][1];] => [n = ints2d[0][1];] "array.Arrays.testIntArrays"
[ints[0] = 1;] => [$Arrays.$set(ints, 0, 1);] "array.Arrays.testIntArrays"
[ints2d[0][1] = 1;] => [$Arrays.$set(ints2d[0], 1, 1);] "array.Arrays.testIntArrays"
[byte b = 1;] => [let b = 1;] "array.Arrays.testIntArrays"
[b] => [b] "b"
[char c = 'a';] => [let c = 97 /* 'a' */;] "array.Arrays.testIntArrays"
[c] => [c] "c"
[ints = new int[b];] => [ints = /**@type {!Array<number>}*/ ($Arrays.$create([b], $$int));] "array.Arrays.testIntArrays"
[ints[b] = b;] => [$Arrays.$set(ints, b, b);] "array.Arrays.testIntArrays"
[ints = new int[c];] => [ints = /**@type {!Array<number>}*/ ($Arrays.$create([c], $$int));] "array.Arrays.testIntArrays"
[ints[c] = c;] => [$Arrays.$set(ints, c, c);] "array.Arrays.testIntArrays"
[ints = new int[] {b, c};] => [ints = /**@type {!Array<number>}*/ ($Arrays.$init([b, c], $$int));] "array.Arrays.testIntArrays"
[testLongArrays] => [m_testLongArrays__void_$pp_array]
[long[] longs = new long[100];] => [let longs = /**@type {!Array<!$Long>}*/ ($Arrays.$create([100], $$long));] "array.Arrays.testLongArrays"
[longs] => [longs] "longs"
[longs = new long[0];] => [longs = /**@type {!Array<!$Long>}*/ ($Arrays.$create([0], $$long));] "array.Arrays.testLongArrays"
[longs = new long[] {0, 1};] => [longs = /**@type {!Array<!$Long>}*/ ($Arrays.$init([$Long.fromInt(0), $Long.fromInt(1)], $$long));] "array.Arrays.testLongArrays"
[long[][] longs2d = new long[5][10];] => [let longs2d = /**@type {!Array<Array<!$Long>>}*/ ($Arrays.$create([5, 10], $$long));] "array.Arrays.testLongArrays"
[longs2d] => [longs2d] "longs2d"
[longs2d = new long[][] {{1, 2}, null};] => [longs2d = /**@type {!Array<Array<!$Long>>}*/ ($Arrays.$init([/**@type {!Array<!$Long>}*/ ($Arrays.$init([$Long.fromInt(1), $Long.fromInt(2)], $$long)), null], $$long, 2));] "array.Arrays.testLongArrays"
[longs2d = new long[20][];] => [longs2d = /**@type {!Array<Array<!$Long>>}*/ ($Arrays.$create([20, null], $$long));] "array.Arrays.testLongArrays"
[long n = longs[0];] => [let n = longs[0];] "array.Arrays.testLongArrays"
[n] => [n] "n"
[n = longs2d[0][1];] => [n = longs2d[0][1];] "array.Arrays.testLongArrays"
[longs[0] = 1;] => [$Arrays.$set(longs, 0, $Long.fromInt(1));] "array.Arrays.testLongArrays"
[longs2d[0][1] = 1;] => [$Arrays.$set(longs2d[0], 1, $Long.fromInt(1));] "array.Arrays.testLongArrays"
[byte b = 1;] => [let b = 1;] "array.Arrays.testLongArrays"
[b] => [b] "b"
[char c = 'a';] => [let c = 97 /* 'a' */;] "array.Arrays.testLongArrays"
[c] => [c] "c"
[longs = new long[b];] => [longs = /**@type {!Array<!$Long>}*/ ($Arrays.$create([b], $$long));] "array.Arrays.testLongArrays"
[longs[b] = b;] => [$Arrays.$set(longs, b, $Primitives.widenByteToLong(b));] "array.Arrays.testLongArrays"
[longs = new long[c];] => [longs = /**@type {!Array<!$Long>}*/ ($Arrays.$create([c], $$long));] "array.Arrays.testLongArrays"
[longs[c] = c;] => [$Arrays.$set(longs, c, $Primitives.widenCharToLong(c));] "array.Arrays.testLongArrays"
[longs = new long[] {b, c};] => [longs = /**@type {!Array<!$Long>}*/ ($Arrays.$init([$Primitives.widenByteToLong(b), $Primitives.widenCharToLong(c)], $$long));] "array.Arrays.testLongArrays"
[testDevirtualizedTypeArrays] => [m_testDevirtualizedTypeArrays__void_$pp_array]
[Boolean[] booleans = new Boolean[100];] => [let booleans = /**@type {!Array<?boolean>}*/ ($Arrays.$create([100], Boolean));] "array.Arrays.testDevirtualizedTypeArrays"
[booleans] => [booleans] "booleans"
[booleans = new Boolean[0];] => [booleans = /**@type {!Array<?boolean>}*/ ($Arrays.$create([0], Boolean));] "array.Arrays.testDevirtualizedTypeArrays"
[booleans = new Boolean[] {true, false};] => [booleans = /**@type {!Array<?boolean>}*/ ($Arrays.$init([true, false], Boolean));] "array.Arrays.testDevirtualizedTypeArrays"
[Boolean[][] booleans2d = new Boolean[5][10];] => [let booleans2d = /**@type {!Array<Array<?boolean>>}*/ ($Arrays.$create([5, 10], Boolean));] "array.Arrays.testDevirtualizedTypeArrays"
[booleans2d] => [booleans2d] "booleans2d"
[booleans2d = new Boolean[][] {{true, false}, null};] => [booleans2d = /**@type {!Array<Array<?boolean>>}*/ ($Arrays.$init([/**@type {!Array<?boolean>}*/ ($Arrays.$init([true, false], Boolean)), null], Boolean, 2));] "array.Arrays.testDevirtualizedTypeArrays"
[booleans2d = new Boolean[20][];] => [booleans2d = /**@type {!Array<Array<?boolean>>}*/ ($Arrays.$create([20, null], Boolean));] "array.Arrays.testDevirtualizedTypeArrays"
[boolean b = booleans[0];] => [let b = Boolean.m_booleanValue__java_lang_Boolean__boolean(booleans[0]);] "array.Arrays.testDevirtualizedTypeArrays"
[b] => [b] "b"
[b = booleans2d[0][1];] => [b = Boolean.m_booleanValue__java_lang_Boolean__boolean(booleans2d[0][1]);] "array.Arrays.testDevirtualizedTypeArrays"
[booleans[0] = true;] => [$Arrays.$set(booleans, 0, true);] "array.Arrays.testDevirtualizedTypeArrays"
[booleans2d[0][1] = false;] => [$Arrays.$set(booleans2d[0], 1, false);] "array.Arrays.testDevirtualizedTypeArrays"
[testStringArrays] => [m_testStringArrays__void_$pp_array]
[String[] strings = new String[100];] => [let strings = /**@type {!Array<?string>}*/ ($Arrays.$create([100], j_l_String));] "array.Arrays.testStringArrays"
[strings] => [strings] "strings"
[strings = new String[0];] => [strings = /**@type {!Array<?string>}*/ ($Arrays.$create([0], j_l_String));] "array.Arrays.testStringArrays"
[strings = new String[] {null, null};] => [strings = /**@type {!Array<?string>}*/ ($Arrays.$init([null, null], j_l_String));] "array.Arrays.testStringArrays"
[String[][] strings2d = new String[5][10];] => [let strings2d = /**@type {!Array<Array<?string>>}*/ ($Arrays.$create([5, 10], j_l_String));] "array.Arrays.testStringArrays"
[strings2d] => [strings2d] "strings2d"
[strings2d = new String[][] {{null, null}, null};] => [strings2d = /**@type {!Array<Array<?string>>}*/ ($Arrays.$init([/**@type {!Array<?string>}*/ ($Arrays.$init([null, null], j_l_String)), null], j_l_String, 2));] "array.Arrays.testStringArrays"
[strings2d = new String[20][];] => [strings2d = /**@type {!Array<Array<?string>>}*/ ($Arrays.$create([20, null], j_l_String));] "array.Arrays.testStringArrays"
[String b = strings[0];] => [let b = strings[0];] "array.Arrays.testStringArrays"
[b] => [b] "b"
[b = strings2d[0][1];] => [b = strings2d[0][1];] "array.Arrays.testStringArrays"
[strings[0] = null;] => [$Arrays.$set(strings, 0, null);] "array.Arrays.testStringArrays"
[strings2d[0][1] = null;] => [$Arrays.$set(strings2d[0], 1, null);] "array.Arrays.testStringArrays"
[testNativeArray] => [m_testNativeArray__void_$p_array_Arrays]
[NativeType[] nativeObjects = new NativeType[100];] => [let nativeObjects = new Array(100);] "array.Arrays.testNativeArray"
[nativeObjects] => [nativeObjects] "nativeObjects"
[nativeObjects = new NativeType[0];] => [nativeObjects = new Array(0);] "array.Arrays.testNativeArray"
[nativeObjects = new NativeType[] {null, null};] => [nativeObjects = [null, null];] "array.Arrays.testNativeArray"
[NativeType[][] nativeObjects2d = new NativeType[5][10];] => [let nativeObjects2d = /**@type {!Array<Array<String>>}*/ ($Arrays.$createNative([5, 10]));] "array.Arrays.testNativeArray"
[nativeObjects2d] => [nativeObjects2d] "nativeObjects2d"
[nativeObjects2d = new NativeType[][] {{null, null}, null};] => [nativeObjects2d = [[null, null], null];] "array.Arrays.testNativeArray"
[nativeObjects2d = new NativeType[20][];] => [nativeObjects2d = /**@type {!Array<Array<String>>}*/ ($Arrays.$createNative([20, null]));] "array.Arrays.testNativeArray"
[NativeType nativeObject = nativeObjects[0];] => [let nativeObject = nativeObjects[0];] "array.Arrays.testNativeArray"
[nativeObject] => [nativeObject] "nativeObject"
[nativeObject = nativeObjects2d[0][1];] => [nativeObject = nativeObjects2d[0][1];] "array.Arrays.testNativeArray"
[nativeObjects[0] = null;] => [$Arrays.$set(nativeObjects, 0, null);] "array.Arrays.testNativeArray"
[nativeObjects2d[0][1] = null;] => [$Arrays.$set(nativeObjects2d[0], 1, null);] "array.Arrays.testNativeArray"
[testErasureCastsOnArrayAccess] => [m_testErasureCastsOnArrayAccess__void]
[ArrayContainer<String> container = null;] => [let container = null;] "array.Arrays.testErasureCastsOnArrayAccess"
[container] => [container] "container"
[String s = container.data[0];] => [let s = /**@type {!Array<?string>}*/ ($Arrays.$castTo(container.f_data__array_Arrays_ArrayContainer, j_l_String, 1))[0];] "array.Arrays.testErasureCastsOnArrayAccess"
[s] => [s] "s"
[testCovariance] => [m_testCovariance__void]
[Object[] objectArray = null;] => [let objectArray = null;] "array.Arrays.testCovariance"
[objectArray] => [objectArray] "objectArray"
[String[] stringArray = null;] => [let stringArray = null;] "array.Arrays.testCovariance"
[stringArray] => [stringArray] "stringArray"
[objectArray = stringArray;] => [objectArray = stringArray;] "array.Arrays.testCovariance"
[testArraysSupertypeClosureTypes] => [m_testArraysSupertypeClosureTypes__void]
[consumesCloneable(new Object[10]);] => [this.m_consumesCloneable__java_lang_Cloneable__void(new Array(10));] "array.Arrays.testArraysSupertypeClosureTypes"
[consumesSerializable(new Object[10]);] => [this.m_consumesSerializable__java_io_Serializable__void(new Array(10));] "array.Arrays.testArraysSupertypeClosureTypes"
[consumesCloneable] => [m_consumesCloneable__java_lang_Cloneable__void]
[cloneable] => [cloneable] "cloneable"
[consumesSerializable] => [m_consumesSerializable__java_io_Serializable__void]
[serializable] => [serializable] "serializable"
[Arrays] => [$clinit]
[Arrays] => [Arrays.$clinit = () =>{};] "array.Arrays.<clinit>"
[Arrays] => [Arrays.$loadModules();] "array.Arrays.<clinit>"
[Arrays] => [j_l_Object.$clinit();] "array.Arrays.<clinit>"
