goog.module('jsfunction.Main.ApiWithMethodReturningParametricJsFunction$impl');

const $Util = goog.require('nativebootstrap.Util$impl');

let $LambdaAdaptor = goog.forwardDeclare('jsfunction.Main.ApiWithMethodReturningParametricJsFunction.$LambdaAdaptor$impl');

/**
 * @interface
 */
class ApiWithMethodReturningParametricJsFunction {
 /** @abstract @nodts @template T @return {?function(T):void} */
 m_anApi__jsfunction_Main_ParametricJsFunction() {}
 /** @nodts @return {ApiWithMethodReturningParametricJsFunction} */
 static $adapt(/** ?function():?function(?):void */ fn) {
  ApiWithMethodReturningParametricJsFunction.$clinit();
  return new $LambdaAdaptor(fn);
 }
 /** @nodts */
 static $clinit() {
  ApiWithMethodReturningParametricJsFunction.$clinit = () =>{};
  ApiWithMethodReturningParametricJsFunction.$loadModules();
 }
 
 static $markImplementor(/** Function */ ctor) {
  ctor.prototype.$implements__jsfunction_Main_ApiWithMethodReturningParametricJsFunction = true;
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance != null && !!instance.$implements__jsfunction_Main_ApiWithMethodReturningParametricJsFunction;
 }
 
 /** @nodts */
 static $loadModules() {
  $LambdaAdaptor = goog.module.get('jsfunction.Main.ApiWithMethodReturningParametricJsFunction.$LambdaAdaptor$impl');
 }
}
ApiWithMethodReturningParametricJsFunction.$markImplementor(/**@type {Function}*/ (ApiWithMethodReturningParametricJsFunction));
$Util.$setClassMetadataForInterface(ApiWithMethodReturningParametricJsFunction, 'jsfunction.Main$ApiWithMethodReturningParametricJsFunction');

exports = ApiWithMethodReturningParametricJsFunction;

//# sourceMappingURL=Main$ApiWithMethodReturningParametricJsFunction.js.map
