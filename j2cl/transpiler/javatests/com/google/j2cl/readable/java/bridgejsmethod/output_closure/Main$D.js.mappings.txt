[D] => [D]
[D] => [constructor]
[D] => [super();] "bridgejsmethod.Main$D.<synthetic: ctor_js>"
[D] => [$create__]
[D] => [D.$clinit();] "bridgejsmethod.Main$D.<synthetic: ctor_create>"
[D] => [let $instance = new D();] "bridgejsmethod.Main$D.<synthetic: ctor_create>"
[D] => [$instance.$ctor__bridgejsmethod_Main_D__void();] "bridgejsmethod.Main$D.<synthetic: ctor_create>"
[D] => [return $instance;] "bridgejsmethod.Main$D.<synthetic: ctor_create>"
[D] => [$ctor__bridgejsmethod_Main_D__void]
[D] => [this.$ctor__bridgejsmethod_Main_A__void();] "bridgejsmethod.Main$D.<init>"
[fun] => [m_fun__java_lang_Integer__java_lang_Integer]
[i] => [i] "i"
[return i;] => [return i;] "bridgejsmethod.Main$D.fun"
[D] => [mNumber]
[D] => [return this.m_fun__java_lang_Integer__java_lang_Integer(/**@type {Integer}*/ ($Casts.$to(arg0, Integer)));] "bridgejsmethod.Main$D.fun"
[D] => [fun]
[D] => [return this.m_fun__java_lang_Integer__java_lang_Integer(/**@type {Integer}*/ ($Casts.$to(arg0, Integer)));] "bridgejsmethod.Main$D.fun"
[D] => [$clinit]
[D] => [D.$clinit = () =>{};] "bridgejsmethod.Main$D.<clinit>"
[D] => [D.$loadModules();] "bridgejsmethod.Main$D.<clinit>"
[D] => [A.$clinit();] "bridgejsmethod.Main$D.<clinit>"
