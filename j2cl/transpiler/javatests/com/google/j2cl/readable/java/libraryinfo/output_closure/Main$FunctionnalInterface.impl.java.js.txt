goog.module('libraryinfo.Main.FunctionnalInterface$impl');

const $Util = goog.require('nativebootstrap.Util$impl');

let $LambdaAdaptor = goog.forwardDeclare('libraryinfo.Main.FunctionnalInterface.$LambdaAdaptor$impl');

/**
 * @interface
 */
class FunctionnalInterface {
 /** @abstract @nodts */
 m_foo__void() {}
 /** @nodts @return {FunctionnalInterface} */
 static $adapt(/** ?function():void */ fn) {
  FunctionnalInterface.$clinit();
  return new $LambdaAdaptor(fn);
 }
 /** @nodts */
 static $clinit() {
  FunctionnalInterface.$clinit = () =>{};
  FunctionnalInterface.$loadModules();
 }
 
 static $markImplementor(/** Function */ ctor) {
  ctor.prototype.$implements__libraryinfo_Main_FunctionnalInterface = true;
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance != null && !!instance.$implements__libraryinfo_Main_FunctionnalInterface;
 }
 
 /** @nodts */
 static $loadModules() {
  $LambdaAdaptor = goog.module.get('libraryinfo.Main.FunctionnalInterface.$LambdaAdaptor$impl');
 }
}
FunctionnalInterface.$markImplementor(/**@type {Function}*/ (FunctionnalInterface));
$Util.$setClassMetadataForInterface(FunctionnalInterface, 'libraryinfo.Main$FunctionnalInterface');

exports = FunctionnalInterface;

//# sourceMappingURL=Main$FunctionnalInterface.js.map
