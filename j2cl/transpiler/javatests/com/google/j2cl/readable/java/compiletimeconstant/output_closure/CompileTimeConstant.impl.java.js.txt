goog.module('compiletimeconstant.CompileTimeConstant$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Long = goog.require('nativebootstrap.Long$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Class = goog.forwardDeclare('java.lang.Class$impl');
let j_l_String = goog.forwardDeclare('java.lang.String$impl');

/**
 * @template T
 */
class CompileTimeConstant extends j_l_Object {
 /** @protected @nodts */
 constructor() {
  super();
  /**@const {number} @nodts*/
  this.f_A2__compiletimeconstant_CompileTimeConstant = 10;
  /**@const {number} @nodts*/
  this.f_B2__compiletimeconstant_CompileTimeConstant = 20;
  /**@const {number} @nodts*/
  this.f_C2__compiletimeconstant_CompileTimeConstant = 200;
  /**@const {string} @nodts*/
  this.f_D2__compiletimeconstant_CompileTimeConstant = 'Tur\"tle';
  /**@const {string} @nodts*/
  this.f_E2__compiletimeconstant_CompileTimeConstant = 'Do\"ve';
  /**@const {string} @nodts*/
  this.f_F2__compiletimeconstant_CompileTimeConstant = 'Tur\"tleDo\"ve';
  /**@const {!$Long} @nodts*/
  this.f_G2__compiletimeconstant_CompileTimeConstant = $Long.fromInt(10000);
  /**@const {number} @nodts*/
  this.f_H2__compiletimeconstant_CompileTimeConstant = 65 /* 'A' */;
  /**@const {boolean} @nodts*/
  this.f_I2__compiletimeconstant_CompileTimeConstant = true;
 }
 /** @nodts @template T @return {!CompileTimeConstant<T>} */
 static $create__() {
  CompileTimeConstant.$clinit();
  let $instance = new CompileTimeConstant();
  $instance.$ctor__compiletimeconstant_CompileTimeConstant__void();
  return $instance;
 }
 /** @nodts */
 $ctor__compiletimeconstant_CompileTimeConstant__void() {
  this.$ctor__java_lang_Object__void();
  this.$init__void_$p_compiletimeconstant_CompileTimeConstant();
 }
 /** @private @nodts */
 $init__void_$p_compiletimeconstant_CompileTimeConstant() {
  let b = this.f_I2__compiletimeconstant_CompileTimeConstant;
  let s = CompileTimeConstant.f_G__compiletimeconstant_CompileTimeConstant + j_l_String.m_valueOf__java_lang_Object__java_lang_String(CompileTimeConstant.f_F__compiletimeconstant_CompileTimeConstant);
  let l = CompileTimeConstant.f_L__compiletimeconstant_CompileTimeConstant;
  let m = CompileTimeConstant.f_M__compiletimeconstant_CompileTimeConstant;
  let n = CompileTimeConstant.f_N__compiletimeconstant_CompileTimeConstant;
  let c = CompileTimeConstant.$static_classLiteral__compiletimeconstant_CompileTimeConstant;
 }
 /** @nodts @return {*} */
 static get f_OBJ__compiletimeconstant_CompileTimeConstant() {
  return (CompileTimeConstant.$clinit(), CompileTimeConstant.$static_OBJ__compiletimeconstant_CompileTimeConstant);
 }
 /** @nodts @return {?string} */
 static get f_K__compiletimeconstant_CompileTimeConstant() {
  return (CompileTimeConstant.$clinit(), CompileTimeConstant.$static_K__compiletimeconstant_CompileTimeConstant);
 }
 /** @nodts @return {Class<?>} */
 static get f_classLiteral__compiletimeconstant_CompileTimeConstant() {
  return (CompileTimeConstant.$clinit(), CompileTimeConstant.$static_classLiteral__compiletimeconstant_CompileTimeConstant);
 }
 /** @nodts */
 static $clinit() {
  CompileTimeConstant.$clinit = () =>{};
  CompileTimeConstant.$loadModules();
  j_l_Object.$clinit();
  CompileTimeConstant.$static_OBJ__compiletimeconstant_CompileTimeConstant = null;
  CompileTimeConstant.$static_K__compiletimeconstant_CompileTimeConstant = null;
  CompileTimeConstant.$static_classLiteral__compiletimeconstant_CompileTimeConstant = Class.$get(CompileTimeConstant);
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof CompileTimeConstant;
 }
 
 /** @nodts */
 static $loadModules() {
  Class = goog.module.get('java.lang.Class$impl');
  j_l_String = goog.module.get('java.lang.String$impl');
 }
}
/**@private {*} @nodts*/
CompileTimeConstant.$static_OBJ__compiletimeconstant_CompileTimeConstant;
/**@const {number} @nodts*/
CompileTimeConstant.f_A__compiletimeconstant_CompileTimeConstant = 10;
/**@const {number} @nodts*/
CompileTimeConstant.f_B__compiletimeconstant_CompileTimeConstant = 20;
/**@const {number} @nodts*/
CompileTimeConstant.f_C__compiletimeconstant_CompileTimeConstant = 200;
/**@const {string} @nodts*/
CompileTimeConstant.f_D__compiletimeconstant_CompileTimeConstant = 'Tur\"tle';
/**@const {string} @nodts*/
CompileTimeConstant.f_E__compiletimeconstant_CompileTimeConstant = 'Do\'ve';
/**@const {string} @nodts*/
CompileTimeConstant.f_F__compiletimeconstant_CompileTimeConstant = 'Tur\"tleDo\'ve';
/**@const {string} @nodts*/
CompileTimeConstant.f_J__compiletimeconstant_CompileTimeConstant = 'Tur\"tleDo\'veTur\"tleDo\'ve';
/**@private {?string} @nodts*/
CompileTimeConstant.$static_K__compiletimeconstant_CompileTimeConstant;
/**@const {string} @nodts*/
CompileTimeConstant.f_L__compiletimeconstant_CompileTimeConstant = 'ThisIsALongString';
/**@const {string} @nodts*/
CompileTimeConstant.f_M__compiletimeconstant_CompileTimeConstant = 'ThisIsALongStringAlso';
/**@const {string} @nodts*/
CompileTimeConstant.f_N__compiletimeconstant_CompileTimeConstant = 'ThisIsALongStringAlsoButLonger';
/**@const {!$Long} @nodts*/
CompileTimeConstant.f_G__compiletimeconstant_CompileTimeConstant = $Long.fromInt(10000);
/**@const {number} @nodts*/
CompileTimeConstant.f_H__compiletimeconstant_CompileTimeConstant = 65 /* 'A' */;
/**@const {boolean} @nodts*/
CompileTimeConstant.f_I__compiletimeconstant_CompileTimeConstant = true;
/**@const {number} @nodts*/
CompileTimeConstant.f_MIN_BYTE__compiletimeconstant_CompileTimeConstant = -128;
/**@const {number} @nodts*/
CompileTimeConstant.f_MIN_SHORT__compiletimeconstant_CompileTimeConstant = -32768;
/**@const {number} @nodts*/
CompileTimeConstant.f_MIN_BYTE_WITH_CAST__compiletimeconstant_CompileTimeConstant = -128;
/**@const {number} @nodts*/
CompileTimeConstant.f_MIN_SHORT_WITH_CAST__compiletimeconstant_CompileTimeConstant = -32768;
/**@private {Class<?>} @nodts*/
CompileTimeConstant.$static_classLiteral__compiletimeconstant_CompileTimeConstant;
$Util.$setClassMetadata(CompileTimeConstant, 'compiletimeconstant.CompileTimeConstant');

exports = CompileTimeConstant;

//# sourceMappingURL=CompileTimeConstant.js.map
