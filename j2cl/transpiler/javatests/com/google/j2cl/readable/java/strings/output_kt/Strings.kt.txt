// Generated from "strings/Strings.java"
@file:OptIn(ExperimentalObjCName::class, ExperimentalObjCRefinement::class)
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "REPEATED_BOUND",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER")

package strings

import javaemul.lang.*
import kotlin.Char
import kotlin.OptIn
import kotlin.String
import kotlin.Suppress
import kotlin.experimental.ExperimentalObjCName
import kotlin.experimental.ExperimentalObjCRefinement
import kotlin.jvm.JvmField
import kotlin.native.HiddenFromObjC
import kotlin.native.ObjCName

@ObjCName("J2ktStringsStrings", exact = true)
open class Strings {
 @JvmField
 @HiddenFromObjC
 var someString_private_2: String? = "This is a string literal"

 @JvmField
 @HiddenFromObjC
 var nonBmpChar_private_2: String? = "\uD800\uDF46"

 @JvmField
 @HiddenFromObjC
 var wideColon_private_2: String? = "\uFF1A"

 @ObjCName("test")
 open fun test() {
  var s1: String? = null
  var s2: String? = null
  var s3: String? = "" + s1 + s2
  s2 = "" + s2 + s2
  s1 = "" + s1 + "a"
  s3 = "" + s1 + s1 + s2 + null + "a"
  s3 = "a" + s1 + s1 + s2 + null
  var s4: String? = null
  val c1: Char = 'F'
  val c2: Char = 'o'
  s4 = "" + (c1.code + c2.code) + "o"
  s4 = "" + s4 + ("" + 1L + "")
  s4 = "" + s4 + 1L
  s4 = "" + s4 + 'C'
  s4 = "" + s4 + 1
  s4 = "" + s4 + 1.0
  s4 = "" + s4 + 1.0f
  s4 = "" + s4 + 1.toShort()
  val ___qualifier: Strings.StringHolder = Strings.StringHolder()
  val ___qualifier_1: Strings.StringHolder = ___qualifier
  val ___value: String? = "" + ___qualifier!!.s_pp_strings + s4
  ___qualifier_1!!.s_pp_strings = ___value
  val ___qualifier_2: Strings.StringHolder = Strings.StringHolder()
  val ___qualifier_3: Strings.StringHolder = ___qualifier_2
  val ___value_1: String? = "" + ___qualifier_2!!.s_pp_strings + c1
  ___qualifier_3!!.s_pp_strings = ___value_1
  val ___qualifier_4: Strings.StringHolder = Strings.StringHolder()
  val ___qualifier_5: Strings.StringHolder = ___qualifier_4
  val ___value_2: String? = "" + ___qualifier_4!!.s_pp_strings + "o"
  ___qualifier_5!!.s_pp_strings = ___value_2
  s1 = "" + (1 + 2) + "s"
  s1 = "s" + 1 + 2
 }

 @ObjCName("J2ktStringsStringsCompanion", exact = true)
 companion object {
  @HiddenFromObjC
  const val ESCAPE_CODES_private_2: String = "\b\u000C\n\r\t\"\'\\\u0000\u007F\uD800\uDF46\uFF1A"

  @HiddenFromObjC
  const val ESCAPE_CODES_COPY_private_2: String = "\b\u000C\n\r\t\"\'\\\u0000\u007F\uD800\uDF46\uFF1A"
 }

 open class StringHolder {
  @JvmField
  @HiddenFromObjC
  var s_pp_strings: String? = "A"
 }
}
