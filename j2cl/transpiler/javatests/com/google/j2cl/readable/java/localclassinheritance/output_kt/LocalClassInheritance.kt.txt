// Generated from "localclassinheritance/LocalClassInheritance.java"
@file:OptIn(ExperimentalObjCName::class)
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "REPEATED_BOUND",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER")

package localclassinheritance

import javaemul.lang.*
import kotlin.Int
import kotlin.OptIn
import kotlin.Suppress
import kotlin.experimental.ExperimentalObjCName
import kotlin.native.ObjCName

@ObjCName("J2ktLocalclassinheritanceLocalClassInheritance", exact = true)
open class LocalClassInheritance {
 @ObjCName("test")
 open fun test() {
  val f: Int = 1
  open class ___1Parent {
   open fun n() {
    val i: Int = f
   }
  }
  open class ___1Child: ___1Parent() {
   open override fun n() {
    val i: Int = f
   }
  }
 }
}
