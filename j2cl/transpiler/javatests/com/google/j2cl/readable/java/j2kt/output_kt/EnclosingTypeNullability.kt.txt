// Generated from "j2kt/EnclosingTypeNullability.java"
@file:OptIn(ExperimentalObjCName::class)
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_ANONYMOUS_PARAMETER",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER",
 "REDUNDANT_ELSE_IN_WHEN")

package j2kt

import javaemul.lang.*
import java.lang.RuntimeException
import kotlin.OptIn
import kotlin.String
import kotlin.Suppress
import kotlin.experimental.ExperimentalObjCName
import kotlin.native.ObjCName

@ObjCName("J2ktJ2ktEnclosingTypeNullability", exact = true)
open class EnclosingTypeNullability internal constructor() {
 internal open fun test_pp_j2kt(foo: EnclosingTypeNullability.Outer<String>) {
  val value: EnclosingTypeNullability.Outer<String>.Inner? = foo.getInner_pp_j2kt()
 }

 @ObjCName("J2ktJ2ktEnclosingTypeNullability_Outer", exact = true)
 class Outer<V> internal constructor() {
  internal fun getInner_pp_j2kt(): EnclosingTypeNullability.Outer<V>.Inner {
   throw RuntimeException()
  }

  @ObjCName("J2ktJ2ktEnclosingTypeNullability_Outer_Inner", exact = true)
  inner class Inner internal constructor() {}
 }
}
