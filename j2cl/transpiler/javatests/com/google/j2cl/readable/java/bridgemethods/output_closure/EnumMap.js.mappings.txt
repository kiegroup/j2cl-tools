[EnumMap] => [EnumMap]
[EnumMap] => [constructor]
[EnumMap] => [super();] "bridgemethods.EnumMap.<synthetic: ctor_js>"
[EnumMap] => [$create__]
[EnumMap] => [EnumMap.$clinit();] "bridgemethods.EnumMap.<synthetic: ctor_create>"
[EnumMap] => [let $instance = new EnumMap();] "bridgemethods.EnumMap.<synthetic: ctor_create>"
[EnumMap] => [$instance.$ctor__bridgemethods_EnumMap__void();] "bridgemethods.EnumMap.<synthetic: ctor_create>"
[EnumMap] => [return $instance;] "bridgemethods.EnumMap.<synthetic: ctor_create>"
[EnumMap] => [$ctor__bridgemethods_EnumMap__void]
[EnumMap] => [this.$ctor__bridgemethods_AbstractMap__void();] "bridgemethods.EnumMap.<init>"
[put] => [m_put__java_lang_Enum__java_lang_Object__java_lang_Object]
[key] => [key] "key"
[value] => [value] "value"
[return value;] => [return value;] "bridgemethods.EnumMap.put"
[EnumMap] => [m_put__java_lang_Object__java_lang_Object__java_lang_Object]
[EnumMap] => [return this.m_put__java_lang_Enum__java_lang_Object__java_lang_Object(/**@type {K}*/ ($Casts.$to(arg0, Enum)), arg1);] "bridgemethods.EnumMap.put"
[EnumMap] => [$clinit]
[EnumMap] => [EnumMap.$clinit = () =>{};] "bridgemethods.EnumMap.<clinit>"
[EnumMap] => [EnumMap.$loadModules();] "bridgemethods.EnumMap.<clinit>"
[EnumMap] => [AbstractMap.$clinit();] "bridgemethods.EnumMap.<clinit>"
