goog.module('interfacejsbridge.MyJsInterface$impl');

const $Util = goog.require('nativebootstrap.Util$impl');

let $LambdaAdaptor = goog.forwardDeclare('interfacejsbridge.MyJsInterface.$LambdaAdaptor$impl');

/**
 * @interface
 */
class MyJsInterface {
 /** @abstract @return {number} */
 foo(/** number */ a) {}
 /** @nodts @return {MyJsInterface} */
 static $adapt(/** ?function(number):number */ fn) {
  MyJsInterface.$clinit();
  return new $LambdaAdaptor(fn);
 }
 /** @nodts */
 static $clinit() {
  MyJsInterface.$clinit = () =>{};
  MyJsInterface.$loadModules();
 }
 
 static $markImplementor(/** Function */ ctor) {
  ctor.prototype.$implements__interfacejsbridge_MyJsInterface = true;
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance != null && !!instance.$implements__interfacejsbridge_MyJsInterface;
 }
 
 /** @nodts */
 static $loadModules() {
  $LambdaAdaptor = goog.module.get('interfacejsbridge.MyJsInterface.$LambdaAdaptor$impl');
 }
}
MyJsInterface.$markImplementor(/**@type {Function}*/ (MyJsInterface));
$Util.$setClassMetadataForInterface(MyJsInterface, 'interfacejsbridge.MyJsInterface');

exports = MyJsInterface;

//# sourceMappingURL=MyJsInterface.js.map
