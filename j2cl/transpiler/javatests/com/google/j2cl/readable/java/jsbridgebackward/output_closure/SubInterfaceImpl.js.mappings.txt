[SubInterfaceImpl] => [SubInterfaceImpl]
[SubInterfaceImpl] => [constructor]
[SubInterfaceImpl] => [super();] "jsbridgebackward.SubInterfaceImpl.<synthetic: ctor_js>"
[SubInterfaceImpl] => [$create__]
[SubInterfaceImpl] => [SubInterfaceImpl.$clinit();] "jsbridgebackward.SubInterfaceImpl.<synthetic: ctor_create>"
[SubInterfaceImpl] => [let $instance = new SubInterfaceImpl();] "jsbridgebackward.SubInterfaceImpl.<synthetic: ctor_create>"
[SubInterfaceImpl] => [$instance.$ctor__jsbridgebackward_SubInterfaceImpl__void();] "jsbridgebackward.SubInterfaceImpl.<synthetic: ctor_create>"
[SubInterfaceImpl] => [return $instance;] "jsbridgebackward.SubInterfaceImpl.<synthetic: ctor_create>"
[SubInterfaceImpl] => [$ctor__jsbridgebackward_SubInterfaceImpl__void]
[SubInterfaceImpl] => [this.$ctor__jsbridgebackward_InterfaceImpl__void();] "jsbridgebackward.SubInterfaceImpl.<init>"
[foo] => [foo]
[a] => [a] "a"
[return 0;] => [return 0;] "jsbridgebackward.SubInterfaceImpl.foo"
[SubInterfaceImpl] => [m_foo__int__int]
[SubInterfaceImpl] => [return this.foo(arg0);] "jsbridgebackward.SubInterfaceImpl.foo"
[SubInterfaceImpl] => [$clinit]
[SubInterfaceImpl] => [SubInterfaceImpl.$clinit = () =>{};] "jsbridgebackward.SubInterfaceImpl.<clinit>"
[SubInterfaceImpl] => [SubInterfaceImpl.$loadModules();] "jsbridgebackward.SubInterfaceImpl.<clinit>"
[SubInterfaceImpl] => [InterfaceImpl.$clinit();] "jsbridgebackward.SubInterfaceImpl.<clinit>"
