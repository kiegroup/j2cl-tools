goog.module('cast.CastGenerics.A$impl');

const $Util = goog.require('nativebootstrap.Util$impl');

let $LambdaAdaptor = goog.forwardDeclare('cast.CastGenerics.A.$LambdaAdaptor$impl');

/**
 * @interface
 */
class A {
 /** @abstract @nodts */
 m_mA__void() {}
 /** @nodts @return {A} */
 static $adapt(/** ?function():void */ fn) {
  A.$clinit();
  return new $LambdaAdaptor(fn);
 }
 /** @nodts */
 static $clinit() {
  A.$clinit = () =>{};
  A.$loadModules();
 }
 
 static $markImplementor(/** Function */ ctor) {
  ctor.prototype.$implements__cast_CastGenerics_A = true;
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance != null && !!instance.$implements__cast_CastGenerics_A;
 }
 
 /** @nodts */
 static $loadModules() {
  $LambdaAdaptor = goog.module.get('cast.CastGenerics.A.$LambdaAdaptor$impl');
 }
}
A.$markImplementor(/**@type {Function}*/ (A));
$Util.$setClassMetadataForInterface(A, 'cast.CastGenerics$A');

exports = A;

//# sourceMappingURL=CastGenerics$A.js.map
