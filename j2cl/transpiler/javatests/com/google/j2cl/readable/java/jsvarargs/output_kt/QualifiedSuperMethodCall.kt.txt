// Generated from "jsvarargs/QualifiedSuperMethodCall.java"
@file:OptIn(ExperimentalObjCName::class)
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_ANONYMOUS_PARAMETER",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER",
 "REDUNDANT_ELSE_IN_WHEN")

package jsvarargs

import javaemul.lang.*
import jsvarargs.Main
import kotlin.IntArray
import kotlin.OptIn
import kotlin.Suppress
import kotlin.experimental.ExperimentalObjCName
import kotlin.intArrayOf
import kotlin.native.ObjCName

@ObjCName("J2ktJsvarargsQualifiedSuperMethodCall", exact = true)
open class QualifiedSuperMethodCall: Main {
 constructor(): super(0)

 @ObjCName("J2ktJsvarargsQualifiedSuperMethodCall_InnerClass", exact = true)
 open inner class InnerClass {
  @ObjCName("test")
  open fun test() {
   super<Main>@QualifiedSuperMethodCall.f3(1, 1, 2)
   super<Main>@QualifiedSuperMethodCall.f3(1)
   super<Main>@QualifiedSuperMethodCall.f3(1, *intArrayOf(1, 2)!!)
   super<Main>@QualifiedSuperMethodCall.f3(1, *intArrayOf()!!)
   val ints: IntArray? = intArrayOf(1, 2)
   super<Main>@QualifiedSuperMethodCall.f3(1, *ints!!)
  }
 }
}
