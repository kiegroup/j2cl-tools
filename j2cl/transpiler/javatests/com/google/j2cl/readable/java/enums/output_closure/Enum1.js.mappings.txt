[Enum1] => [Enum1]
[Enum1] => [constructor]
[Enum1] => [super();] "enums.Enum1.<synthetic: ctor_js>"
[Enum1] => [$create__java_lang_String__int]
[Enum1] => [let $instance = new Enum1();] "enums.Enum1.<synthetic: ctor_create>"
[Enum1] => [$instance.$ctor__enums_Enum1__java_lang_String__int__void($name, $ordinal);] "enums.Enum1.<synthetic: ctor_create>"
[Enum1] => [return $instance;] "enums.Enum1.<synthetic: ctor_create>"
[Enum1] => [$ctor__enums_Enum1__java_lang_String__int__void]
[Enum1] => [this.f_name__java_lang_Enum_ = $name;] "enums.Enum1.<init>"
[Enum1] => [this.f_ordinal__java_lang_Enum_ = $ordinal;] "enums.Enum1.<init>"
[Enum1] => [this.$ctor__java_lang_Enum__java_lang_String__int__void($name, $ordinal);] "enums.Enum1.<init>"
[Enum1] => [m_valueOf__java_lang_String__enums_Enum1]
[Enum1] => [Enum1.$clinit();] "enums.Enum1.valueOf"
[Enum1] => [if ($Equality.$same(Enum1.f_namesToValuesMap__enums_Enum1_, null)) {
   Enum1.f_namesToValuesMap__enums_Enum1_ = /**@type {Map<?string, !Enum1>}*/ ($Enums.createMapFromValues(Enum1.m_values__arrayOf_enums_Enum1()));
  }] "enums.Enum1.valueOf"
[Enum1] => [Enum1.f_namesToValuesMap__enums_Enum1_ = /**@type {Map<?string, !Enum1>}*/ ($Enums.createMapFromValues(Enum1.m_values__arrayOf_enums_Enum1()));] "enums.Enum1.valueOf"
[Enum1] => [return /**@type {Enum1}*/ ($Enums.getValueFromNameAndMap(name, Enum1.f_namesToValuesMap__enums_Enum1_));] "enums.Enum1.valueOf"
[Enum1] => [m_values__arrayOf_enums_Enum1]
[Enum1] => [Enum1.$clinit();] "enums.Enum1.values"
[Enum1] => [return /**@type {!Array<Enum1>}*/ ($Arrays.$init([Enum1.f_V1__enums_Enum1, Enum1.f_V2__enums_Enum1], Enum1));] "enums.Enum1.values"
[Enum1] => [$clinit]
[Enum1] => [Enum1.$clinit = () =>{};] "enums.Enum1.<clinit>"
[Enum1] => [Enum1.$loadModules();] "enums.Enum1.<clinit>"
[Enum1] => [Enum.$clinit();] "enums.Enum1.<clinit>"
[V1] => [/**@const {number} @nodts*/
Enum1.$ordinal_V1__enums_Enum1 = 0;]
[V2] => [/**@const {number} @nodts*/
Enum1.$ordinal_V2__enums_Enum1 = 1;]
[V1] => [/**@const {!Enum1} @nodts*/
Enum1.f_V1__enums_Enum1 = /**@pureOrBreakMyCode*/ Enum1.$create__java_lang_String__int($Util.$makeEnumName('V1'), Enum1.$ordinal_V1__enums_Enum1);]
[V1] => [f_V1__enums_Enum1]
[V2] => [/**@const {!Enum1} @nodts*/
Enum1.f_V2__enums_Enum1 = /**@pureOrBreakMyCode*/ Enum1.$create__java_lang_String__int($Util.$makeEnumName('V2'), Enum1.$ordinal_V2__enums_Enum1);]
[V2] => [f_V2__enums_Enum1]
[Enum1] => [/**@type {Map<?string, !Enum1>} @nodts*/
Enum1.f_namesToValuesMap__enums_Enum1_;]
