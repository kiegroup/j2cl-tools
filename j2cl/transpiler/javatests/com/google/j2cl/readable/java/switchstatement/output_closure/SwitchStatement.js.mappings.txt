[SwitchStatement] => [SwitchStatement]
[SwitchStatement] => [constructor]
[SwitchStatement] => [super();] "switchstatement.SwitchStatement.<synthetic: ctor_js>"
[SwitchStatement] => [$create__]
[SwitchStatement] => [SwitchStatement.$clinit();] "switchstatement.SwitchStatement.<synthetic: ctor_create>"
[SwitchStatement] => [let $instance = new SwitchStatement();] "switchstatement.SwitchStatement.<synthetic: ctor_create>"
[SwitchStatement] => [$instance.$ctor__switchstatement_SwitchStatement__void();] "switchstatement.SwitchStatement.<synthetic: ctor_create>"
[SwitchStatement] => [return $instance;] "switchstatement.SwitchStatement.<synthetic: ctor_create>"
[SwitchStatement] => [$ctor__switchstatement_SwitchStatement__void]
[SwitchStatement] => [this.$ctor__java_lang_Object__void();] "switchstatement.SwitchStatement.<init>"
[main] => [m_main__void]
[switch ("one") {
      case "one":
...        return;
    }] => [switch (InternalPreconditions.m_checkNotNull__java_lang_Object__java_lang_Object('one')) {
   case 'one':
...    return;
  }] "switchstatement.SwitchStatement.main"
[break;] => [break;] "switchstatement.SwitchStatement.main"
[return;] => [return;] "switchstatement.SwitchStatement.main"
[switch ('1') {
      case '1':
...        return;
    }] => [switch (49 /* '1' */) {
   case 49 /* '1' */:
...    return;
  }] "switchstatement.SwitchStatement.main"
[break;] => [break;] "switchstatement.SwitchStatement.main"
[return;] => [return;] "switchstatement.SwitchStatement.main"
[switch (1) {
      case -2:
...        return;
    }] => [switch (1) {
   case -2:
...    return;
  }] "switchstatement.SwitchStatement.main"
[break;] => [break;] "switchstatement.SwitchStatement.main"
[return;] => [return;] "switchstatement.SwitchStatement.main"
[switch (Numbers.ONE) {
      case ONE:
...        return;
    }] => [switch (Numbers.f_ONE__switchstatement_Numbers.ordinal()) {
   case Numbers.$ordinal_ONE__switchstatement_Numbers:
...    return;
  }] "switchstatement.SwitchStatement.main"
[break;] => [break;] "switchstatement.SwitchStatement.main"
[break;] => [break;] "switchstatement.SwitchStatement.main"
[return;] => [return;] "switchstatement.SwitchStatement.main"
[testSwitchVariableDeclarations] => [m_testSwitchVariableDeclarations__void]
[{
    switch (3) {
...    assert false;
  }] => [let /** number */ unassigned, /** number */ unassigned2, /** number */ i, /** number */ j, /** number */ b, /** number */ i_1;] "switchstatement.SwitchStatement.testSwitchVariableDeclarations"
[unassigned] => [unassigned] "unassigned"
[unassigned2] => [unassigned2] "unassigned2"
[i] => [i] "i"
[j] => [j] "j"
[b] => [b] "b"
[i] => [i_1] "i"
[switch (3) {
      case 1:
...        return;
    }] => [switch (3) {
   case 1:
...    return;
  }] "switchstatement.SwitchStatement.testSwitchVariableDeclarations"
[int i = 0;] => [i = 0;] "switchstatement.SwitchStatement.testSwitchVariableDeclarations"
[int j = 2, b = j + 1;] => [(j = 2, b = j + 1 | 0);] "switchstatement.SwitchStatement.testSwitchVariableDeclarations"
[break;] => [break;] "switchstatement.SwitchStatement.testSwitchVariableDeclarations"
[i = 3;] => [i = 3;] "switchstatement.SwitchStatement.testSwitchVariableDeclarations"
[assert i == 3;] => [$Asserts.$assert(i == 3);] "switchstatement.SwitchStatement.testSwitchVariableDeclarations"
[return;] => [return;] "switchstatement.SwitchStatement.testSwitchVariableDeclarations"
[switch (5) {
      case 5:
...        break;
    }] => [switch (5) {
   case 5:
...    break;
  }] "switchstatement.SwitchStatement.testSwitchVariableDeclarations"
[int i = 1;] => [i_1 = 1;] "switchstatement.SwitchStatement.testSwitchVariableDeclarations"
[break;] => [break;] "switchstatement.SwitchStatement.testSwitchVariableDeclarations"
[assert false;] => [$Asserts.$assert(false);] "switchstatement.SwitchStatement.testSwitchVariableDeclarations"
[testCaseExpressionTypes] => [m_testCaseExpressionTypes__char__int__byte__short__void_$p_switchstatement_SwitchStatement]
[ch] => [ch] "ch"
[i] => [i] "i"
[b] => [b] "b"
[s] => [s] "s"
[switch (ch) {
      case 'a':
...        break;
    }] => [switch (ch) {
   case 97 /* 'a' */:
...    break;
  }] "switchstatement.SwitchStatement.testCaseExpressionTypes"
[break;] => [break;] "switchstatement.SwitchStatement.testCaseExpressionTypes"
[break;] => [break;] "switchstatement.SwitchStatement.testCaseExpressionTypes"
[break;] => [break;] "switchstatement.SwitchStatement.testCaseExpressionTypes"
[break;] => [break;] "switchstatement.SwitchStatement.testCaseExpressionTypes"
[switch (i) {
      case 'a':
...        break;
    }] => [switch (i) {
   case 97 /* 'a' */:
...    break;
  }] "switchstatement.SwitchStatement.testCaseExpressionTypes"
[break;] => [break;] "switchstatement.SwitchStatement.testCaseExpressionTypes"
[break;] => [break;] "switchstatement.SwitchStatement.testCaseExpressionTypes"
[break;] => [break;] "switchstatement.SwitchStatement.testCaseExpressionTypes"
[break;] => [break;] "switchstatement.SwitchStatement.testCaseExpressionTypes"
[switch (b) {
      case 'a':
...        break;
    }] => [switch (b) {
   case 97 /* 'a' */:
...    break;
  }] "switchstatement.SwitchStatement.testCaseExpressionTypes"
[break;] => [break;] "switchstatement.SwitchStatement.testCaseExpressionTypes"
[break;] => [break;] "switchstatement.SwitchStatement.testCaseExpressionTypes"
[break;] => [break;] "switchstatement.SwitchStatement.testCaseExpressionTypes"
[break;] => [break;] "switchstatement.SwitchStatement.testCaseExpressionTypes"
[switch (s) {
      case 'a':
...        break;
    }] => [switch (s) {
   case 97 /* 'a' */:
...    break;
  }] "switchstatement.SwitchStatement.testCaseExpressionTypes"
[break;] => [break;] "switchstatement.SwitchStatement.testCaseExpressionTypes"
[break;] => [break;] "switchstatement.SwitchStatement.testCaseExpressionTypes"
[break;] => [break;] "switchstatement.SwitchStatement.testCaseExpressionTypes"
[break;] => [break;] "switchstatement.SwitchStatement.testCaseExpressionTypes"
[testBlocksInSwitchCase] => [m_testBlocksInSwitchCase__int__void_$p_switchstatement_SwitchStatement]
[i] => [i] "i"
[switch (i) {
      case 1:
...        break;
    }] => [switch (i) {
   case 1:
...    break;
  }] "switchstatement.SwitchStatement.testBlocksInSwitchCase"
[foo(1);] => [this.m_foo__int__void_$p_switchstatement_SwitchStatement(1);] "switchstatement.SwitchStatement.testBlocksInSwitchCase"
[foo(2);] => [this.m_foo__int__void_$p_switchstatement_SwitchStatement(2);] "switchstatement.SwitchStatement.testBlocksInSwitchCase"
[foo(3);] => [this.m_foo__int__void_$p_switchstatement_SwitchStatement(3);] "switchstatement.SwitchStatement.testBlocksInSwitchCase"
[foo(4);] => [this.m_foo__int__void_$p_switchstatement_SwitchStatement(4);] "switchstatement.SwitchStatement.testBlocksInSwitchCase"
[foo(5);] => [this.m_foo__int__void_$p_switchstatement_SwitchStatement(5);] "switchstatement.SwitchStatement.testBlocksInSwitchCase"
[break;] => [break;] "switchstatement.SwitchStatement.testBlocksInSwitchCase"
[testLabelInSwitchCase] => [m_testLabelInSwitchCase__int__void_$p_switchstatement_SwitchStatement]
[i] => [i] "i"
[switch (i) {
      case 1:
...        } while (true);
    }] => [switch (i) {
   case 1:
...    } while (true);
  }] "switchstatement.SwitchStatement.testLabelInSwitchCase"
[LABEL:
        do {
          break LABEL;
        } while (true);] => [LABEL: do {
     break LABEL;
    } while (true);] "switchstatement.SwitchStatement.testLabelInSwitchCase"
[do {
          break LABEL;
        } while (true);] => [do {
     break LABEL;
    } while (true);] "switchstatement.SwitchStatement.testLabelInSwitchCase"
[break LABEL;] => [break LABEL;] "switchstatement.SwitchStatement.testLabelInSwitchCase"
[testNonFallThroughBreakCase] => [m_testNonFallThroughBreakCase__int__void_$p_switchstatement_SwitchStatement]
[i] => [i] "i"
[switch (i) {
      case 1:
...        break;
    }] => [switch (i) {
   case 1:
...    break;
  }] "switchstatement.SwitchStatement.testNonFallThroughBreakCase"
[foo(1);] => [this.m_foo__int__void_$p_switchstatement_SwitchStatement(1);] "switchstatement.SwitchStatement.testNonFallThroughBreakCase"
[break;] => [break;] "switchstatement.SwitchStatement.testNonFallThroughBreakCase"
[foo(2);] => [this.m_foo__int__void_$p_switchstatement_SwitchStatement(2);] "switchstatement.SwitchStatement.testNonFallThroughBreakCase"
[break;] => [break;] "switchstatement.SwitchStatement.testNonFallThroughBreakCase"
[testNonFallThroughBreakOuterCase] => [m_testNonFallThroughBreakOuterCase__int__void_$p_switchstatement_SwitchStatement]
[i] => [i] "i"
[OUTER_LABEL:
    do {
...      }
    } while (false);] => [OUTER_LABEL: do {
   switch (i) {
...   }
  } while (false);] "switchstatement.SwitchStatement.testNonFallThroughBreakOuterCase"
[do {
      switch (i) {
...      }
    } while (false);] => [do {
   switch (i) {
...   }
  } while (false);] "switchstatement.SwitchStatement.testNonFallThroughBreakOuterCase"
[switch (i) {
        case 1:
...          break;
      }] => [switch (i) {
    case 1:
...     break;
   }] "switchstatement.SwitchStatement.testNonFallThroughBreakOuterCase"
[foo(1);] => [this.m_foo__int__void_$p_switchstatement_SwitchStatement(1);] "switchstatement.SwitchStatement.testNonFallThroughBreakOuterCase"
[break OUTER_LABEL;] => [break OUTER_LABEL;] "switchstatement.SwitchStatement.testNonFallThroughBreakOuterCase"
[foo(2);] => [this.m_foo__int__void_$p_switchstatement_SwitchStatement(2);] "switchstatement.SwitchStatement.testNonFallThroughBreakOuterCase"
[break;] => [break;] "switchstatement.SwitchStatement.testNonFallThroughBreakOuterCase"
[testNonFallThroughContinueCase] => [m_testNonFallThroughContinueCase__int__void_$p_switchstatement_SwitchStatement]
[i] => [i] "i"
[do {
      switch (i) {
...      }
    } while (false);] => [do {
   switch (i) {
...   }
  } while (false);] "switchstatement.SwitchStatement.testNonFallThroughContinueCase"
[switch (i) {
        case 3:
...          break;
      }] => [switch (i) {
    case 3:
...     break;
   }] "switchstatement.SwitchStatement.testNonFallThroughContinueCase"
[foo(1);] => [this.m_foo__int__void_$p_switchstatement_SwitchStatement(1);] "switchstatement.SwitchStatement.testNonFallThroughContinueCase"
[continue;] => [continue;] "switchstatement.SwitchStatement.testNonFallThroughContinueCase"
[foo(2);] => [this.m_foo__int__void_$p_switchstatement_SwitchStatement(2);] "switchstatement.SwitchStatement.testNonFallThroughContinueCase"
[break;] => [break;] "switchstatement.SwitchStatement.testNonFallThroughContinueCase"
[testNonFallThroughReturnCase] => [m_testNonFallThroughReturnCase__int__void_$p_switchstatement_SwitchStatement]
[i] => [i] "i"
[switch (i) {
      case 4:
...        break;
    }] => [switch (i) {
   case 4:
...    break;
  }] "switchstatement.SwitchStatement.testNonFallThroughReturnCase"
[foo(1);] => [this.m_foo__int__void_$p_switchstatement_SwitchStatement(1);] "switchstatement.SwitchStatement.testNonFallThroughReturnCase"
[return;] => [return;] "switchstatement.SwitchStatement.testNonFallThroughReturnCase"
[foo(2);] => [this.m_foo__int__void_$p_switchstatement_SwitchStatement(2);] "switchstatement.SwitchStatement.testNonFallThroughReturnCase"
[break;] => [break;] "switchstatement.SwitchStatement.testNonFallThroughReturnCase"
[testNonFallThroughThrowCase] => [m_testNonFallThroughThrowCase__int__void_$p_switchstatement_SwitchStatement]
[i] => [i] "i"
[switch (i) {
      case 5:
...        break;
    }] => [switch (i) {
   case 5:
...    break;
  }] "switchstatement.SwitchStatement.testNonFallThroughThrowCase"
[foo(1);] => [this.m_foo__int__void_$p_switchstatement_SwitchStatement(1);] "switchstatement.SwitchStatement.testNonFallThroughThrowCase"
[throw new RuntimeException();] => [throw $Exceptions.toJs(RuntimeException.$create__());] "switchstatement.SwitchStatement.testNonFallThroughThrowCase"
[foo(2);] => [this.m_foo__int__void_$p_switchstatement_SwitchStatement(2);] "switchstatement.SwitchStatement.testNonFallThroughThrowCase"
[break;] => [break;] "switchstatement.SwitchStatement.testNonFallThroughThrowCase"
[testNonFallThroughIfCase] => [m_testNonFallThroughIfCase__int__void_$p_switchstatement_SwitchStatement]
[i] => [i] "i"
[switch (i) {
      case 1:
...        break;
    }] => [switch (i) {
   case 1:
...    break;
  }] "switchstatement.SwitchStatement.testNonFallThroughIfCase"
[foo(1);] => [this.m_foo__int__void_$p_switchstatement_SwitchStatement(1);] "switchstatement.SwitchStatement.testNonFallThroughIfCase"
[if (false) {
          break;
...          break;
        }] => [if (false) {
     break;
...     break;
    }] "switchstatement.SwitchStatement.testNonFallThroughIfCase"
[break;] => [break;] "switchstatement.SwitchStatement.testNonFallThroughIfCase"
[break;] => [break;] "switchstatement.SwitchStatement.testNonFallThroughIfCase"
[foo(2);] => [this.m_foo__int__void_$p_switchstatement_SwitchStatement(2);] "switchstatement.SwitchStatement.testNonFallThroughIfCase"
[break;] => [break;] "switchstatement.SwitchStatement.testNonFallThroughIfCase"
[testNonFallThroughBlockCase] => [m_testNonFallThroughBlockCase__int__void_$p_switchstatement_SwitchStatement]
[i] => [i] "i"
[switch (i) {
      case 1:
...        break;
    }] => [switch (i) {
   case 1:
...    break;
  }] "switchstatement.SwitchStatement.testNonFallThroughBlockCase"
[foo(1);] => [this.m_foo__int__void_$p_switchstatement_SwitchStatement(1);] "switchstatement.SwitchStatement.testNonFallThroughBlockCase"
[break;] => [break;] "switchstatement.SwitchStatement.testNonFallThroughBlockCase"
[foo(2);] => [this.m_foo__int__void_$p_switchstatement_SwitchStatement(2);] "switchstatement.SwitchStatement.testNonFallThroughBlockCase"
[break;] => [break;] "switchstatement.SwitchStatement.testNonFallThroughBlockCase"
[testNonFallThrough_defaultIsNotLast] => [m_testNonFallThrough_defaultIsNotLast__int__void_$p_switchstatement_SwitchStatement]
[i] => [i] "i"
[switch (i) {
      case 1:
...        break;
    }] => [switch (i) {
   case 1:
...    break;
  }] "switchstatement.SwitchStatement.testNonFallThrough_defaultIsNotLast"
[foo(1);] => [this.m_foo__int__void_$p_switchstatement_SwitchStatement(1);] "switchstatement.SwitchStatement.testNonFallThrough_defaultIsNotLast"
[break;] => [break;] "switchstatement.SwitchStatement.testNonFallThrough_defaultIsNotLast"
[foo(2);] => [this.m_foo__int__void_$p_switchstatement_SwitchStatement(2);] "switchstatement.SwitchStatement.testNonFallThrough_defaultIsNotLast"
[break;] => [break;] "switchstatement.SwitchStatement.testNonFallThrough_defaultIsNotLast"
[foo(3);] => [this.m_foo__int__void_$p_switchstatement_SwitchStatement(3);] "switchstatement.SwitchStatement.testNonFallThrough_defaultIsNotLast"
[break;] => [break;] "switchstatement.SwitchStatement.testNonFallThrough_defaultIsNotLast"
[foo(4);] => [this.m_foo__int__void_$p_switchstatement_SwitchStatement(4);] "switchstatement.SwitchStatement.testNonFallThrough_defaultIsNotLast"
[break;] => [break;] "switchstatement.SwitchStatement.testNonFallThrough_defaultIsNotLast"
[testFallThroughCase] => [m_testFallThroughCase__int__void_$p_switchstatement_SwitchStatement]
[i] => [i] "i"
[switch (i) {
      case 1:
...        break;
    }] => [switch (i) {
   case 1:
...    break;
  }] "switchstatement.SwitchStatement.testFallThroughCase"
[foo(1);] => [this.m_foo__int__void_$p_switchstatement_SwitchStatement(1);] "switchstatement.SwitchStatement.testFallThroughCase"
[foo(2);] => [this.m_foo__int__void_$p_switchstatement_SwitchStatement(2);] "switchstatement.SwitchStatement.testFallThroughCase"
[break;] => [break;] "switchstatement.SwitchStatement.testFallThroughCase"
[testFallThroughBreakInnerCase] => [m_testFallThroughBreakInnerCase__int__void_$p_switchstatement_SwitchStatement]
[i] => [i] "i"
[switch (i) {
      case 1:
...        break;
    }] => [switch (i) {
   case 1:
...    break;
  }] "switchstatement.SwitchStatement.testFallThroughBreakInnerCase"
[foo(1);] => [this.m_foo__int__void_$p_switchstatement_SwitchStatement(1);] "switchstatement.SwitchStatement.testFallThroughBreakInnerCase"
[INNER_LABEL:
        do {
          break INNER_LABEL;
        } while (false);] => [INNER_LABEL: do {
     break INNER_LABEL;
    } while (false);] "switchstatement.SwitchStatement.testFallThroughBreakInnerCase"
[do {
          break INNER_LABEL;
        } while (false);] => [do {
     break INNER_LABEL;
    } while (false);] "switchstatement.SwitchStatement.testFallThroughBreakInnerCase"
[break INNER_LABEL;] => [break INNER_LABEL;] "switchstatement.SwitchStatement.testFallThroughBreakInnerCase"
[foo(2);] => [this.m_foo__int__void_$p_switchstatement_SwitchStatement(2);] "switchstatement.SwitchStatement.testFallThroughBreakInnerCase"
[break;] => [break;] "switchstatement.SwitchStatement.testFallThroughBreakInnerCase"
[testFallThroughContinueInnerCase] => [m_testFallThroughContinueInnerCase__int__void_$p_switchstatement_SwitchStatement]
[i] => [i] "i"
[switch (i) {
      case 1:
...        break;
    }] => [switch (i) {
   case 1:
...    break;
  }] "switchstatement.SwitchStatement.testFallThroughContinueInnerCase"
[foo(1);] => [this.m_foo__int__void_$p_switchstatement_SwitchStatement(1);] "switchstatement.SwitchStatement.testFallThroughContinueInnerCase"
[INNER_LABEL:
        do {
          continue INNER_LABEL;
        } while (false);] => [INNER_LABEL: do {
     continue INNER_LABEL;
    } while (false);] "switchstatement.SwitchStatement.testFallThroughContinueInnerCase"
[do {
          continue INNER_LABEL;
        } while (false);] => [do {
     continue INNER_LABEL;
    } while (false);] "switchstatement.SwitchStatement.testFallThroughContinueInnerCase"
[continue INNER_LABEL;] => [continue INNER_LABEL;] "switchstatement.SwitchStatement.testFallThroughContinueInnerCase"
[foo(2);] => [this.m_foo__int__void_$p_switchstatement_SwitchStatement(2);] "switchstatement.SwitchStatement.testFallThroughContinueInnerCase"
[break;] => [break;] "switchstatement.SwitchStatement.testFallThroughContinueInnerCase"
[testFallThroughLabeledStatement] => [m_testFallThroughLabeledStatement__int__void_$p_switchstatement_SwitchStatement]
[i] => [i] "i"
[switch (i) {
      case 1:
...        break;
    }] => [switch (i) {
   case 1:
...    break;
  }] "switchstatement.SwitchStatement.testFallThroughLabeledStatement"
[INNER_LABEL:
        {
...          return;
        }] => [INNER_LABEL: {
     if (false) {
...     return;
    }] "switchstatement.SwitchStatement.testFallThroughLabeledStatement"
[if (false) {
            break INNER_LABEL;
          }] => [if (false) {
      break INNER_LABEL;
     }] "switchstatement.SwitchStatement.testFallThroughLabeledStatement"
[break INNER_LABEL;] => [break INNER_LABEL;] "switchstatement.SwitchStatement.testFallThroughLabeledStatement"
[return;] => [return;] "switchstatement.SwitchStatement.testFallThroughLabeledStatement"
[foo(2);] => [this.m_foo__int__void_$p_switchstatement_SwitchStatement(2);] "switchstatement.SwitchStatement.testFallThroughLabeledStatement"
[break;] => [break;] "switchstatement.SwitchStatement.testFallThroughLabeledStatement"
[testFallThroughIfCase] => [m_testFallThroughIfCase__int__void_$p_switchstatement_SwitchStatement]
[i] => [i] "i"
[switch (i) {
      case 1:
...        break;
    }] => [switch (i) {
   case 1:
...    break;
  }] "switchstatement.SwitchStatement.testFallThroughIfCase"
[foo(1);] => [this.m_foo__int__void_$p_switchstatement_SwitchStatement(1);] "switchstatement.SwitchStatement.testFallThroughIfCase"
[if (false) {
          break;
        }] => [if (false) {
     break;
    }] "switchstatement.SwitchStatement.testFallThroughIfCase"
[break;] => [break;] "switchstatement.SwitchStatement.testFallThroughIfCase"
[foo(2);] => [this.m_foo__int__void_$p_switchstatement_SwitchStatement(2);] "switchstatement.SwitchStatement.testFallThroughIfCase"
[break;] => [break;] "switchstatement.SwitchStatement.testFallThroughIfCase"
[testFallThroughIfElseCase] => [m_testFallThroughIfElseCase__int__void_$p_switchstatement_SwitchStatement]
[i] => [i] "i"
[switch (i) {
      case 1:
...        break;
    }] => [switch (i) {
   case 1:
...    break;
  }] "switchstatement.SwitchStatement.testFallThroughIfElseCase"
[if (true) {
          foo(1);
...          foo(2);
        }] => [if (true) {
     this.m_foo__int__void_$p_switchstatement_SwitchStatement(1);
...     this.m_foo__int__void_$p_switchstatement_SwitchStatement(2);
    }] "switchstatement.SwitchStatement.testFallThroughIfElseCase"
[foo(1);] => [this.m_foo__int__void_$p_switchstatement_SwitchStatement(1);] "switchstatement.SwitchStatement.testFallThroughIfElseCase"
[break;] => [break;] "switchstatement.SwitchStatement.testFallThroughIfElseCase"
[foo(2);] => [this.m_foo__int__void_$p_switchstatement_SwitchStatement(2);] "switchstatement.SwitchStatement.testFallThroughIfElseCase"
[foo(2);] => [this.m_foo__int__void_$p_switchstatement_SwitchStatement(2);] "switchstatement.SwitchStatement.testFallThroughIfElseCase"
[break;] => [break;] "switchstatement.SwitchStatement.testFallThroughIfElseCase"
[testFallThoughLastCase] => [m_testFallThoughLastCase__int__void_$p_switchstatement_SwitchStatement]
[i] => [i] "i"
[switch (i) {
      case 1:
...        // fall through
    }] => [switch (i) {
   case 1:
...    this.m_foo__int__void_$p_switchstatement_SwitchStatement(2);
  }] "switchstatement.SwitchStatement.testFallThoughLastCase"
[foo(1);] => [this.m_foo__int__void_$p_switchstatement_SwitchStatement(1);] "switchstatement.SwitchStatement.testFallThoughLastCase"
[break;] => [break;] "switchstatement.SwitchStatement.testFallThoughLastCase"
[foo(2);] => [this.m_foo__int__void_$p_switchstatement_SwitchStatement(2);] "switchstatement.SwitchStatement.testFallThoughLastCase"
[testDefaultIsNotLast_fallThrough] => [m_testDefaultIsNotLast_fallThrough__int__void_$p_switchstatement_SwitchStatement]
[i] => [i] "i"
[switch (i) {
      case 1:
...        // fall through
    }] => [switch (i) {
   case 1:
...    this.m_foo__int__void_$p_switchstatement_SwitchStatement(4);
  }] "switchstatement.SwitchStatement.testDefaultIsNotLast_fallThrough"
[foo(1);] => [this.m_foo__int__void_$p_switchstatement_SwitchStatement(1);] "switchstatement.SwitchStatement.testDefaultIsNotLast_fallThrough"
[foo(2);] => [this.m_foo__int__void_$p_switchstatement_SwitchStatement(2);] "switchstatement.SwitchStatement.testDefaultIsNotLast_fallThrough"
[foo(3);] => [this.m_foo__int__void_$p_switchstatement_SwitchStatement(3);] "switchstatement.SwitchStatement.testDefaultIsNotLast_fallThrough"
[foo(4);] => [this.m_foo__int__void_$p_switchstatement_SwitchStatement(4);] "switchstatement.SwitchStatement.testDefaultIsNotLast_fallThrough"
[testDefaultNotLast_fallThroughCase] => [m_testDefaultNotLast_fallThroughCase__int__int_$p_switchstatement_SwitchStatement]
[i] => [i] "i"
[int result = 0;] => [let result = 0;] "switchstatement.SwitchStatement.testDefaultNotLast_fallThroughCase"
[result] => [result] "result"
[switch (i) {
      case 1:
...        break;
    }] => [switch (i) {
   case 1:
...    break;
  }] "switchstatement.SwitchStatement.testDefaultNotLast_fallThroughCase"
[result += 10;] => [result = result + 10 | 0;] "switchstatement.SwitchStatement.testDefaultNotLast_fallThroughCase"
[break;] => [break;] "switchstatement.SwitchStatement.testDefaultNotLast_fallThroughCase"
[result += 100;] => [result = result + 100 | 0;] "switchstatement.SwitchStatement.testDefaultNotLast_fallThroughCase"
[break;] => [break;] "switchstatement.SwitchStatement.testDefaultNotLast_fallThroughCase"
[return result;] => [return result;] "switchstatement.SwitchStatement.testDefaultNotLast_fallThroughCase"
[testDefaultNotLast_fallThroughDefault] => [m_testDefaultNotLast_fallThroughDefault__int__int_$p_switchstatement_SwitchStatement]
[i] => [i] "i"
[int result = 0;] => [let result = 0;] "switchstatement.SwitchStatement.testDefaultNotLast_fallThroughDefault"
[result] => [result] "result"
[switch (i) {
      case 1:
...        break;
    }] => [switch (i) {
   case 1:
...    break;
  }] "switchstatement.SwitchStatement.testDefaultNotLast_fallThroughDefault"
[result += 10;] => [result = result + 10 | 0;] "switchstatement.SwitchStatement.testDefaultNotLast_fallThroughDefault"
[break;] => [break;] "switchstatement.SwitchStatement.testDefaultNotLast_fallThroughDefault"
[result += 100;] => [result = result + 100 | 0;] "switchstatement.SwitchStatement.testDefaultNotLast_fallThroughDefault"
[break;] => [break;] "switchstatement.SwitchStatement.testDefaultNotLast_fallThroughDefault"
[return result;] => [return result;] "switchstatement.SwitchStatement.testDefaultNotLast_fallThroughDefault"
[testNonExhaustive] => [m_testNonExhaustive__switchstatement_Numbers__int_$p_switchstatement_SwitchStatement]
[numbers] => [numbers] "numbers"
[switch (numbers) {
      case ONE:
...        return 2;
    }] => [switch (numbers.ordinal()) {
   case Numbers.$ordinal_ONE__switchstatement_Numbers:
...    return 2;
  }] "switchstatement.SwitchStatement.testNonExhaustive"
[return 1;] => [return 1;] "switchstatement.SwitchStatement.testNonExhaustive"
[return 2;] => [return 2;] "switchstatement.SwitchStatement.testNonExhaustive"
[return 3;] => [return 3;] "switchstatement.SwitchStatement.testNonExhaustive"
[testNonExhaustive_fallThrough] => [m_testNonExhaustive_fallThrough__switchstatement_Numbers__void_$p_switchstatement_SwitchStatement]
[numbers] => [numbers] "numbers"
[switch (numbers) {
      case ONE:
...        break;
    }] => [switch (numbers.ordinal()) {
   case Numbers.$ordinal_ONE__switchstatement_Numbers:
...    break;
  }] "switchstatement.SwitchStatement.testNonExhaustive_fallThrough"
[foo(1);] => [this.m_foo__int__void_$p_switchstatement_SwitchStatement(1);] "switchstatement.SwitchStatement.testNonExhaustive_fallThrough"
[foo(2);] => [this.m_foo__int__void_$p_switchstatement_SwitchStatement(2);] "switchstatement.SwitchStatement.testNonExhaustive_fallThrough"
[break;] => [break;] "switchstatement.SwitchStatement.testNonExhaustive_fallThrough"
[foo] => [m_foo__int__void_$p_switchstatement_SwitchStatement]
[i] => [i] "i"
[SwitchStatement] => [$clinit]
[SwitchStatement] => [SwitchStatement.$clinit = () =>{};] "switchstatement.SwitchStatement.<clinit>"
[SwitchStatement] => [SwitchStatement.$loadModules();] "switchstatement.SwitchStatement.<clinit>"
[SwitchStatement] => [j_l_Object.$clinit();] "switchstatement.SwitchStatement.<clinit>"
