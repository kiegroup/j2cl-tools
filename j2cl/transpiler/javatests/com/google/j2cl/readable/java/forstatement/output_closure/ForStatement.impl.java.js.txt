goog.module('forstatement.ForStatement$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let $Long = goog.forwardDeclare('nativebootstrap.Long$impl');
let $LongUtils = goog.forwardDeclare('vmbootstrap.LongUtils$impl');

class ForStatement extends j_l_Object {
 /** @protected @nodts */
 constructor() {
  super();
 }
 /** @nodts @return {!ForStatement} */
 static $create__() {
  ForStatement.$clinit();
  let $instance = new ForStatement();
  $instance.$ctor__forstatement_ForStatement__void();
  return $instance;
 }
 /** @nodts */
 $ctor__forstatement_ForStatement__void() {
  this.$ctor__java_lang_Object__void();
 }
 /** @nodts */
 m_test__void() {
  for (let i = 0, count = 0; i < 100; i = i + 1 | 0) {
   count = count + 1 | 0;
  }
  for (let l = $Long.fromInt(0), count_1 = $Long.fromInt(0); $LongUtils.less(l, $Long.fromInt(100)); l = $LongUtils.plus(l, $Long.fromInt(1)), l = $LongUtils.plus(l, $Long.fromInt(1))) {
   count_1 = $LongUtils.plus(count_1, $Long.fromInt(1));
  }
  let a = false;
  for (; a = !!(+ a | + true); ) {}
  let b = false;
  for (; b = a; ) {}
  for (ForStatement.m_returnsValue__int(); true; ForStatement.m_returnsValue__int()) {}
 }
 /** @nodts */
 m_testContinue__void() {
  LABEL: for (let i = 0, j = 0; i < 10; i = i + 1 | 0, j = j + 1 | 0) {
   if (i == 5) {
    continue;
   }
   for (let k = 0, l = 0; k < 10; k = k + 1 | 0, l = l + 1 | 0) {
    if (j == 5) {
     continue LABEL;
    }
   }
  }
 }
 /** @nodts */
 m_testInitializeInForCondition__void() {
  for (let i = 0, /** number */ x; i < 1 && (x = 3) != 0; i = i + 1 | 0) {
   let /** number */ y;
   y = i + x | 0;
  }
 }
 /** @nodts */
 m_testForStatementInsideDeadCode__void() {
  if (false) {
   for (let i = 0; i < 100; i = i + 1 | 0) {}
  }
 }
 /** @nodts @return {number} */
 static m_returnsValue__int() {
  return 1;
 }
 /** @nodts */
 static $clinit() {
  ForStatement.$clinit = () =>{};
  ForStatement.$loadModules();
  j_l_Object.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof ForStatement;
 }
 
 /** @nodts */
 static $loadModules() {
  $Long = goog.module.get('nativebootstrap.Long$impl');
  $LongUtils = goog.module.get('vmbootstrap.LongUtils$impl');
 }
}
$Util.$setClassMetadata(ForStatement, 'forstatement.ForStatement');

exports = ForStatement;

//# sourceMappingURL=ForStatement.js.map
