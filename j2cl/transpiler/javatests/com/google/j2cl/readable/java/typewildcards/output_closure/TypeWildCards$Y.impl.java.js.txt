goog.module('typewildcards.TypeWildCards.Y$impl');

const $Util = goog.require('nativebootstrap.Util$impl');

let $LambdaAdaptor = goog.forwardDeclare('typewildcards.TypeWildCards.Y.$LambdaAdaptor$impl');

/**
 * @interface
 */
class Y {
 /** @abstract @nodts */
 m_n__void() {}
 /** @nodts @return {Y} */
 static $adapt(/** ?function():void */ fn) {
  Y.$clinit();
  return new $LambdaAdaptor(fn);
 }
 /** @nodts */
 static $clinit() {
  Y.$clinit = () =>{};
  Y.$loadModules();
 }
 
 static $markImplementor(/** Function */ ctor) {
  ctor.prototype.$implements__typewildcards_TypeWildCards_Y = true;
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance != null && !!instance.$implements__typewildcards_TypeWildCards_Y;
 }
 
 /** @nodts */
 static $loadModules() {
  $LambdaAdaptor = goog.module.get('typewildcards.TypeWildCards.Y.$LambdaAdaptor$impl');
 }
}
Y.$markImplementor(/**@type {Function}*/ (Y));
$Util.$setClassMetadataForInterface(Y, 'typewildcards.TypeWildCards$Y');

exports = Y;

//# sourceMappingURL=TypeWildCards$Y.js.map
