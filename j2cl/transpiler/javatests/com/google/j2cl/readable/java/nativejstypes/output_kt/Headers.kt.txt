// Generated from "nativejstypes/Headers.java"
@file:OptIn(ExperimentalObjCName::class)
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "REPEATED_BOUND",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_ANONYMOUS_PARAMETER",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER")

package nativejstypes

import javaemul.lang.*
import jsinterop.annotations.JsPackage
import jsinterop.annotations.JsType
import kotlin.OptIn
import kotlin.String
import kotlin.Suppress
import kotlin.experimental.ExperimentalObjCName
import kotlin.native.ObjCName

@ObjCName("J2ktNativejstypesHeaders", exact = true)
@JsType(namespace = JsPackage.GLOBAL, isNative = true)
open class Headers {
 @ObjCName("append")
 external open fun append(
  @ObjCName("withNSString") name: String?,
  @ObjCName("withNSString") value: String?
 )

 @ObjCName("get")
 external open fun get(
  @ObjCName("withNSString") name: String?
 ): String?
}
