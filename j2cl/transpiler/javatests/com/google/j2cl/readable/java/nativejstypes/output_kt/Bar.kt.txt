// Generated from "nativejstypes/Bar.java"
@file:OptIn(ExperimentalObjCName::class)
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_ANONYMOUS_PARAMETER",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER",
 "REDUNDANT_ELSE_IN_WHEN")

package nativejstypes

import javaemul.lang.*
import jsinterop.annotations.JsType
import kotlin.Int
import kotlin.OptIn
import kotlin.Suppress
import kotlin.experimental.ExperimentalObjCName
import kotlin.jvm.JvmField
import kotlin.jvm.JvmStatic
import kotlin.native.ObjCName

@ObjCName("J2ktNativejstypesBar", exact = true)
@JsType(isNative = true)
open class Bar {
 @JvmField
 @ObjCName("x_")
 var x: Int = 0

 @JvmField
 @ObjCName("y_")
 var y: Int = 0

 constructor(
  @ObjCName("Int") x: Int,
  @ObjCName("withInt") y: Int
 )

 @ObjCName("product")
 external open fun product(): Int

 @ObjCName("J2ktNativejstypesBarCompanion", exact = true)
 companion object {
  @JvmField
  @ObjCName("f_")
  var f: Int = 0

  @JvmStatic
  @ObjCName("getStatic")
  external fun getStatic(): Int
 }

 @ObjCName("J2ktNativejstypesBar_Inner", exact = true)
 @JsType(isNative = true)
 open class Inner {
  constructor(
   @ObjCName("Int") n: Int
  )

  @ObjCName("square")
  external open fun square(): Int

  @ObjCName("J2ktNativejstypesBar_InnerCompanion", exact = true)
  companion object {
   @JvmStatic
   @ObjCName("getInnerStatic")
   external fun getInnerStatic(): Int
  }
 }
}

@ObjCName("J2ktNativejstypesBarInnerWithDotInName", exact = true)
@JsType(name = "Bar.Inner", isNative = true)
open class BarInnerWithDotInName {
 constructor(
  @ObjCName("Int") n: Int
 )

 @ObjCName("square")
 external open fun square(): Int

 @ObjCName("J2ktNativejstypesBarInnerWithDotInNameCompanion", exact = true)
 companion object {
  @JvmStatic
  @ObjCName("getInnerStatic")
  external fun getInnerStatic(): Int
 }
}

@ObjCName("J2ktNativejstypesBarInnerWithDotInNameAndHasNamespace", exact = true)
@JsType(name = "Bar.Inner", namespace = "nativejstypes", isNative = true)
open class BarInnerWithDotInNameAndHasNamespace {
 constructor(
  @ObjCName("Int") n: Int
 )

 @ObjCName("square")
 external open fun square(): Int

 @ObjCName("J2ktNativejstypesBarInnerWithDotInNameAndHasNamespaceCompanion", exact = true)
 companion object {
  @JvmStatic
  @ObjCName("getInnerStatic")
  external fun getInnerStatic(): Int
 }
}
