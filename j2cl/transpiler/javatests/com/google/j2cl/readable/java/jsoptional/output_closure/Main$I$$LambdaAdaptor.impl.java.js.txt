goog.module('jsoptional.Main.I.$LambdaAdaptor$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const I = goog.require('jsoptional.Main.I$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

/**
 * @template T
 * @implements {I<T>}
 */
class $LambdaAdaptor extends j_l_Object {
 /** @nodts */
 constructor(/** ?function(T, *=):void */ fn) {
  $LambdaAdaptor.$clinit();
  super();
  /**@type {?function(T, *=):void} @nodts*/
  this.f_fn__jsoptional_Main_I_$LambdaAdaptor;
  this.$ctor__jsoptional_Main_I_$LambdaAdaptor__jsoptional_Main_I_$JsFunction__void(fn);
 }
 /** @nodts */
 $ctor__jsoptional_Main_I_$LambdaAdaptor__jsoptional_Main_I_$JsFunction__void(/** ?function(T, *=):void */ fn) {
  this.$ctor__java_lang_Object__void();
  this.f_fn__jsoptional_Main_I_$LambdaAdaptor = fn;
 }
 /** @override */
 m(/** T */ arg0, /** *= */ arg1) {
  {
   let $function = this.f_fn__jsoptional_Main_I_$LambdaAdaptor;
   $function(arg0, arg1);
  }
 }
 /** @nodts */
 static $clinit() {
  $LambdaAdaptor.$clinit = () =>{};
  $LambdaAdaptor.$loadModules();
  j_l_Object.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof $LambdaAdaptor;
 }
 
 /** @nodts */
 static $loadModules() {}
}
I.$markImplementor($LambdaAdaptor);
$Util.$setClassMetadata($LambdaAdaptor, 'jsoptional.Main$I$$LambdaAdaptor');

exports = $LambdaAdaptor;

//# sourceMappingURL=Main$I$$LambdaAdaptor.js.map
