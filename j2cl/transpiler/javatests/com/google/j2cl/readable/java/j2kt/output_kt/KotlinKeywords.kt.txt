// Generated from "j2kt/KotlinKeywords.java"
@file:OptIn(ExperimentalObjCName::class)
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "REPEATED_BOUND",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER")

package j2kt

import javaemul.lang.*
import kotlin.Int
import kotlin.OptIn
import kotlin.Suppress
import kotlin.experimental.ExperimentalObjCName
import kotlin.jvm.JvmField
import kotlin.native.ObjCName

@ObjCName("J2ktJ2ktKotlinKeywords", exact = true)
open class KotlinKeywords {
 @JvmField
 @ObjCName("as_")
 var `as`: Int = 0

 @JvmField
 @ObjCName("delete___")
 var delete: Int = 0

 @JvmField
 @ObjCName("fun_")
 var `fun`: Int = 0

 @JvmField
 @ObjCName("in_")
 var `in`: Int = 0

 @JvmField
 @ObjCName("initialize___")
 var initialize: Int = 0

 @JvmField
 @ObjCName("is_")
 var `is`: Int = 0

 @JvmField
 @ObjCName("object_")
 var `object`: Int = 0

 @JvmField
 @ObjCName("scale___")
 var scale: Int = 0

 @JvmField
 @ObjCName("typealias_")
 var `typealias`: Int = 0

 @JvmField
 @ObjCName("typeof___")
 var `typeof`: Int = 0

 @JvmField
 @ObjCName("val_")
 var `val`: Int = 0

 @JvmField
 @ObjCName("var_")
 var `var`: Int = 0

 @JvmField
 @ObjCName("when_")
 var `when`: Int = 0

 @ObjCName("test")
 open fun test(
  @ObjCName("withInt") `in`: Int
 ): Int {
  val `as`: Int = this.`as` + `in`
  val delete: Int = this.delete + `in`
  val `fun`: Int = this.`fun` + `in`
  val initialize: Int = this.initialize + `in`
  val `is`: Int = this.`is` + `in`
  val `object`: Int = this.`object` + `in`
  val scale: Int = this.scale + `in`
  val `typealias`: Int = this.`typealias` + `in`
  val `typeof`: Int = this.`typeof` + `in`
  val `val`: Int = this.`val` + `in`
  val `var`: Int = this.`var` + `in`
  val `when`: Int = this.`when` + `in`
  val temp: Int = KotlinKeywords.OVERFLOW + KotlinKeywords.DOMAIN + `in`
  return KotlinKeywords.BIG_ENDIAN + KotlinKeywords.LITTLE_ENDIAN + KotlinKeywords.NULL + `in`
 }

 @ObjCName("J2ktJ2ktKotlinKeywordsCompanion", exact = true)
 companion object {
  @JvmField
  @ObjCName("BIG_ENDIAN___")
  var BIG_ENDIAN: Int = 7

  @JvmField
  @ObjCName("LITTLE_ENDIAN___")
  var LITTLE_ENDIAN: Int = - 7

  @JvmField
  @ObjCName("NULL___")
  var NULL: Int = 745

  @JvmField
  @ObjCName("OVERFLOW___")
  var OVERFLOW: Int = - 24

  @JvmField
  @ObjCName("DOMAIN___")
  var DOMAIN: Int = - 32
 }
}
