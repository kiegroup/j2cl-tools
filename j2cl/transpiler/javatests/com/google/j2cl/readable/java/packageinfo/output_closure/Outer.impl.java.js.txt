goog.module('readable.packageinfo.Outer$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let j_l_String = goog.forwardDeclare('java.lang.String$impl');
let Bar = goog.forwardDeclare('readable.thirdpartylib.Bar$impl');
let $Arrays = goog.forwardDeclare('vmbootstrap.Arrays$impl');

class Outer extends j_l_Object {
 
 constructor() {
  Outer.$clinit();
  super();
  this.$ctor__packageinfo_Outer__void();
 }
 /** @nodts */
 $ctor__packageinfo_Outer__void() {
  this.$ctor__java_lang_Object__void();
 }
 
 static main(.../** ...?string */ args) {
  Outer.$clinit();
  $Arrays.$stampType(args, j_l_String);
  Bar.bar();
 }
 /** @nodts */
 static $clinit() {
  Outer.$clinit = () =>{};
  Outer.$loadModules();
  j_l_Object.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof Outer;
 }
 
 /** @nodts */
 static $loadModules() {
  j_l_String = goog.module.get('java.lang.String$impl');
  Bar = goog.module.get('readable.thirdpartylib.Bar$impl');
  $Arrays = goog.module.get('vmbootstrap.Arrays$impl');
 }
}
$Util.$setClassMetadata(Outer, 'packageinfo.Outer');

exports = Outer;

//# sourceMappingURL=Outer.js.map
