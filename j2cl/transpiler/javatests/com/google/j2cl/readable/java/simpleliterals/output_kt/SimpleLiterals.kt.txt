// Generated from "simpleliterals/SimpleLiterals.java"
@file:OptIn(ExperimentalObjCName::class)
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "REPEATED_BOUND",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER")

package simpleliterals

import javaemul.lang.*
import java.lang.Class
import kotlin.Any
import kotlin.Boolean
import kotlin.Byte
import kotlin.Char
import kotlin.Double
import kotlin.Float
import kotlin.Int
import kotlin.Long
import kotlin.OptIn
import kotlin.Short
import kotlin.String
import kotlin.Suppress
import kotlin.experimental.ExperimentalObjCName
import kotlin.jvm.javaObjectType
import kotlin.native.ObjCName

@ObjCName("J2ktSimpleliteralsSimpleLiterals", exact = true)
open class SimpleLiterals {
 @ObjCName("main")
 open fun main() {
  val bool: Boolean = false
  val ch: Char = 'a'
  val b: Byte = 127.toByte()
  val nb: Byte = - 128
  val s: Short = 32767.toShort()
  val ns: Short = - 32768
  val i: Int = 101
  val ni: Int = - 101
  val l: Long = 101L
  val nl: Long = - 101L
  val f: Float = 101.0f
  val nf: Float = - 101.0f
  val zf: Float = 0.0f
  val nzf: Float = - 0.0f
  val d: Double = 101.0
  val nd: Double = - 101.0
  val zd: Double = 0.0
  val nzd: Double = - 0.0
  val o: Any? = null
  val str: String? = "foo"
  val c: Class<*>? = SimpleLiterals::class.javaObjectType
  val zeroF: Float = - 0.0f
  val minusZeroF: Float = - 0.0f
  val zeroD: Double = 0.0
  val minusZeroD: Double = - 0.0
  val minusMinusZeroD: Double = - - 0.0
 }
}
