goog.module('jsbridgeaccidentaloverride.OtherInterface$impl');

const $Util = goog.require('nativebootstrap.Util$impl');

let $LambdaAdaptor = goog.forwardDeclare('jsbridgeaccidentaloverride.OtherInterface.$LambdaAdaptor$impl');

/**
 * @interface
 */
class OtherInterface {
 /** @abstract @nodts @return {number} */
 m_fun__int__int(/** number */ a) {}
 /** @nodts @return {OtherInterface} */
 static $adapt(/** ?function(number):number */ fn) {
  OtherInterface.$clinit();
  return new $LambdaAdaptor(fn);
 }
 /** @nodts */
 static $clinit() {
  OtherInterface.$clinit = () =>{};
  OtherInterface.$loadModules();
 }
 
 static $markImplementor(/** Function */ ctor) {
  ctor.prototype.$implements__jsbridgeaccidentaloverride_OtherInterface = true;
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance != null && !!instance.$implements__jsbridgeaccidentaloverride_OtherInterface;
 }
 
 /** @nodts */
 static $loadModules() {
  $LambdaAdaptor = goog.module.get('jsbridgeaccidentaloverride.OtherInterface.$LambdaAdaptor$impl');
 }
}
OtherInterface.$markImplementor(/**@type {Function}*/ (OtherInterface));
$Util.$setClassMetadataForInterface(OtherInterface, 'jsbridgeaccidentaloverride.OtherInterface');

exports = OtherInterface;

//# sourceMappingURL=OtherInterface.js.map
