goog.module('jsinnerclass.Main$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Outer = goog.forwardDeclare('jsinnerclass.Main.Outer$impl');
let $Asserts = goog.forwardDeclare('vmbootstrap.Asserts$impl');

class Main extends j_l_Object {
 /** @protected @nodts */
 constructor() {
  super();
 }
 /** @nodts @return {!Main} */
 static $create__() {
  Main.$clinit();
  let $instance = new Main();
  $instance.$ctor__jsinnerclass_Main__void();
  return $instance;
 }
 /** @nodts */
 $ctor__jsinnerclass_Main__void() {
  this.$ctor__java_lang_Object__void();
 }
 /** @nodts */
 static m_main__arrayOf_java_lang_String__void(/** Array<?string> */ args) {
  Main.$clinit();
  $Asserts.$assert(Outer.$create__().m_method__int() == 5);
 }
 /** @nodts */
 static $clinit() {
  Main.$clinit = () =>{};
  Main.$loadModules();
  j_l_Object.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof Main;
 }
 
 /** @nodts */
 static $loadModules() {
  Outer = goog.module.get('jsinnerclass.Main.Outer$impl');
  $Asserts = goog.module.get('vmbootstrap.Asserts$impl');
 }
}
$Util.$setClassMetadata(Main, 'jsinnerclass.Main');

exports = Main;

//# sourceMappingURL=Main.js.map
