[LabeledStatement] => [LabeledStatement]
[LabeledStatement] => [constructor]
[LabeledStatement] => [super();] "labelstatement.LabeledStatement.<synthetic: ctor_js>"
[LabeledStatement] => [$create__]
[LabeledStatement] => [LabeledStatement.$clinit();] "labelstatement.LabeledStatement.<synthetic: ctor_create>"
[LabeledStatement] => [let $instance = new LabeledStatement();] "labelstatement.LabeledStatement.<synthetic: ctor_create>"
[LabeledStatement] => [$instance.$ctor__labelstatement_LabeledStatement__void();] "labelstatement.LabeledStatement.<synthetic: ctor_create>"
[LabeledStatement] => [return $instance;] "labelstatement.LabeledStatement.<synthetic: ctor_create>"
[LabeledStatement] => [$ctor__labelstatement_LabeledStatement__void]
[LabeledStatement] => [this.$ctor__java_lang_Object__void();] "labelstatement.LabeledStatement.<init>"
[loopStatements] => [m_loopStatements__void]
[LABEL:
    for (; ; ) {
      break LABEL;
    }] => [LABEL: for (; true; ) {
   break LABEL;
  }] "labelstatement.LabeledStatement.loopStatements"
[for (; ; ) {
      break LABEL;
    }] => [for (; true; ) {
   break LABEL;
  }] "labelstatement.LabeledStatement.loopStatements"
[break LABEL;] => [break LABEL;] "labelstatement.LabeledStatement.loopStatements"
[simpleStatement] => [m_simpleStatement__void]
[LABEL:
    foo();] => [LABEL: this.m_foo__void_$p_labelstatement_LabeledStatement();] "labelstatement.LabeledStatement.simpleStatement"
[foo();] => [this.m_foo__void_$p_labelstatement_LabeledStatement();] "labelstatement.LabeledStatement.simpleStatement"
[do {
      LABEL:
      continue;
    } while (false);] => [do {
   LABEL: continue;
  } while (false);] "labelstatement.LabeledStatement.simpleStatement"
[LABEL:
      continue;] => [LABEL: continue;] "labelstatement.LabeledStatement.simpleStatement"
[continue;] => [continue;] "labelstatement.LabeledStatement.simpleStatement"
[LABEL:
    return;] => [LABEL: return;] "labelstatement.LabeledStatement.simpleStatement"
[return;] => [return;] "labelstatement.LabeledStatement.simpleStatement"
[block] => [m_block__void]
[LABEL:
    {
      break LABEL;
    }] => [LABEL: {
   break LABEL;
  }] "labelstatement.LabeledStatement.block"
[break LABEL;] => [break LABEL;] "labelstatement.LabeledStatement.block"
[ifStatement] => [m_ifStatement__void]
[LABEL:
    if (true) {
      break LABEL;
    }] => [LABEL: if (true) {
   break LABEL;
  }] "labelstatement.LabeledStatement.ifStatement"
[if (true) {
      break LABEL;
    }] => [if (true) {
   break LABEL;
  }] "labelstatement.LabeledStatement.ifStatement"
[break LABEL;] => [break LABEL;] "labelstatement.LabeledStatement.ifStatement"
[switchStatement] => [m_switchStatement__void]
[LABEL:
    switch (0) {
...        }
    }] => [LABEL: switch (0) {
   case 0:
...    }
  }] "labelstatement.LabeledStatement.switchStatement"
[switch (0) {
      case 0:
...        }
    }] => [switch (0) {
   case 0:
...    }
  }] "labelstatement.LabeledStatement.switchStatement"
[if (true) {
          break;
        }] => [if (true) {
     break;
    }] "labelstatement.LabeledStatement.switchStatement"
[break;] => [break;] "labelstatement.LabeledStatement.switchStatement"
[foo] => [m_foo__void_$p_labelstatement_LabeledStatement]
[LabeledStatement] => [$clinit]
[LabeledStatement] => [LabeledStatement.$clinit = () =>{};] "labelstatement.LabeledStatement.<clinit>"
[LabeledStatement] => [LabeledStatement.$loadModules();] "labelstatement.LabeledStatement.<clinit>"
[LabeledStatement] => [j_l_Object.$clinit();] "labelstatement.LabeledStatement.<clinit>"
