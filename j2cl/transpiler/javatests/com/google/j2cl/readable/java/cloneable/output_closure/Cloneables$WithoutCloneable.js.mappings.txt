[WithoutCloneable] => [WithoutCloneable]
[WithoutCloneable] => [constructor]
[WithoutCloneable] => [super();] "cloneable.Cloneables$WithoutCloneable.<synthetic: ctor_js>"
[WithoutCloneable] => [$create__]
[WithoutCloneable] => [WithoutCloneable.$clinit();] "cloneable.Cloneables$WithoutCloneable.<synthetic: ctor_create>"
[WithoutCloneable] => [let $instance = new WithoutCloneable();] "cloneable.Cloneables$WithoutCloneable.<synthetic: ctor_create>"
[WithoutCloneable] => [$instance.$ctor__cloneable_Cloneables_WithoutCloneable__void();] "cloneable.Cloneables$WithoutCloneable.<synthetic: ctor_create>"
[WithoutCloneable] => [return $instance;] "cloneable.Cloneables$WithoutCloneable.<synthetic: ctor_create>"
[WithoutCloneable] => [$ctor__cloneable_Cloneables_WithoutCloneable__void]
[WithoutCloneable] => [this.$ctor__java_lang_Object__void();] "cloneable.Cloneables$WithoutCloneable.<init>"
[clone] => [m_clone__java_lang_Object]
[return new WithoutCloneable();] => [return WithoutCloneable.$create__();] "cloneable.Cloneables$WithoutCloneable.clone"
[WithoutCloneable] => [$clinit]
[WithoutCloneable] => [WithoutCloneable.$clinit = () =>{};] "cloneable.Cloneables$WithoutCloneable.<clinit>"
[WithoutCloneable] => [WithoutCloneable.$loadModules();] "cloneable.Cloneables$WithoutCloneable.<clinit>"
[WithoutCloneable] => [j_l_Object.$clinit();] "cloneable.Cloneables$WithoutCloneable.<clinit>"
