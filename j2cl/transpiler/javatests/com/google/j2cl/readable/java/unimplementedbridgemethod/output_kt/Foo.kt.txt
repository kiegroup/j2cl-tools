// Generated from "unimplementedbridgemethod/Foo.java"
@file:OptIn(ExperimentalObjCName::class)
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_ANONYMOUS_PARAMETER",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER",
 "REDUNDANT_ELSE_IN_WHEN")

package unimplementedbridgemethod

import javaemul.lang.*
import kotlin.Int
import kotlin.OptIn
import kotlin.String
import kotlin.Suppress
import kotlin.experimental.ExperimentalObjCName
import kotlin.jvm.JvmStatic
import kotlin.native.ObjCName

@ObjCName("J2ktUnimplementedbridgemethodI", exact = true)
fun interface I<T> {
 @ObjCName("foo")
 fun foo(
  @ObjCName("withId") t: T
 ): Int

 @ObjCName("J2ktUnimplementedbridgemethodICompanion", exact = true)
 companion object {
  @JvmStatic
  @ObjCName("staticFoo")
  fun staticFoo(): Int {
   return 0
  }
 }
}

@ObjCName("J2ktUnimplementedbridgemethodJ", exact = true)
fun interface J: I<String?> {}

@ObjCName("J2ktUnimplementedbridgemethodBar", exact = true)
abstract class Bar internal constructor(): J {}

@ObjCName("J2ktUnimplementedbridgemethodFoo", exact = true)
abstract class Foo: I<String?> {}
