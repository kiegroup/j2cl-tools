[ImplicitParenthesis] => [ImplicitParenthesis]
[ImplicitParenthesis] => [constructor]
[ImplicitParenthesis] => [super();] "implicitparenthesis.ImplicitParenthesis.<synthetic: ctor_js>"
[ImplicitParenthesis] => [$create__]
[ImplicitParenthesis] => [ImplicitParenthesis.$clinit();] "implicitparenthesis.ImplicitParenthesis.<synthetic: ctor_create>"
[ImplicitParenthesis] => [let $instance = new ImplicitParenthesis();] "implicitparenthesis.ImplicitParenthesis.<synthetic: ctor_create>"
[ImplicitParenthesis] => [$instance.$ctor__implicitparenthesis_ImplicitParenthesis__void();] "implicitparenthesis.ImplicitParenthesis.<synthetic: ctor_create>"
[ImplicitParenthesis] => [return $instance;] "implicitparenthesis.ImplicitParenthesis.<synthetic: ctor_create>"
[ImplicitParenthesis] => [$ctor__implicitparenthesis_ImplicitParenthesis__void]
[ImplicitParenthesis] => [this.$ctor__java_lang_Object__void();] "implicitparenthesis.ImplicitParenthesis.<init>"
[test] => [m_test__void]
[examples();] => [ImplicitParenthesis.m_examples__void();] "implicitparenthesis.ImplicitParenthesis.test"
[nonExamples();] => [ImplicitParenthesis.m_nonExamples__void();] "implicitparenthesis.ImplicitParenthesis.test"
[examples] => [m_examples__void]
[int primitiveInt;] => [let /** number */ primitiveInt;] "implicitparenthesis.ImplicitParenthesis.examples"
[primitiveInt] => [primitiveInt] "primitiveInt"
[Integer boxedInt;] => [let /** Integer */ boxedInt;] "implicitparenthesis.ImplicitParenthesis.examples"
[boxedInt] => [boxedInt] "boxedInt"
[primitiveInt = 5;] => [primitiveInt = 5;] "implicitparenthesis.ImplicitParenthesis.examples"
[boxedInt = new Integer(10);] => [boxedInt = Integer.$create__int(10);] "implicitparenthesis.ImplicitParenthesis.examples"
[primitiveInt = primitiveInt == 5 ? new Integer(15) : new Integer(30);] => [primitiveInt = (primitiveInt == 5 ? Integer.$create__int(15) : Integer.$create__int(30)).m_intValue__int();] "implicitparenthesis.ImplicitParenthesis.examples"
[assert primitiveInt == 15;] => [$Asserts.$assert(primitiveInt == 15);] "implicitparenthesis.ImplicitParenthesis.examples"
[primitiveInt = 5;] => [primitiveInt = 5;] "implicitparenthesis.ImplicitParenthesis.examples"
[boxedInt = new Integer(10);] => [boxedInt = Integer.$create__int(10);] "implicitparenthesis.ImplicitParenthesis.examples"
[primitiveInt = boxedInt += primitiveInt;] => [primitiveInt = (boxedInt = Integer.m_valueOf__int__java_lang_Integer(boxedInt.m_intValue__int() + primitiveInt | 0)).m_intValue__int();] "implicitparenthesis.ImplicitParenthesis.examples"
[assert primitiveInt == 15;] => [$Asserts.$assert(primitiveInt == 15);] "implicitparenthesis.ImplicitParenthesis.examples"
[primitiveInt = 5;] => [primitiveInt = 5;] "implicitparenthesis.ImplicitParenthesis.examples"
[boxedInt = new Integer(10);] => [boxedInt = Integer.$create__int(10);] "implicitparenthesis.ImplicitParenthesis.examples"
[primitiveInt = boxedInt = primitiveInt;] => [primitiveInt = (boxedInt = Integer.m_valueOf__int__java_lang_Integer(primitiveInt)).m_intValue__int();] "implicitparenthesis.ImplicitParenthesis.examples"
[assert primitiveInt == 5;] => [$Asserts.$assert(primitiveInt == 5);] "implicitparenthesis.ImplicitParenthesis.examples"
[{
      primitiveInt = 5;
...      assert primitiveInt == 10;
    }] => [let /** Integer */ $value;] "implicitparenthesis.ImplicitParenthesis.examples"
[primitiveInt = 5;] => [primitiveInt = 5;] "implicitparenthesis.ImplicitParenthesis.examples"
[boxedInt = new Integer(10);] => [boxedInt = Integer.$create__int(10);] "implicitparenthesis.ImplicitParenthesis.examples"
[primitiveInt = boxedInt++;] => [primitiveInt = ($value = boxedInt, boxedInt = Integer.m_valueOf__int__java_lang_Integer(boxedInt.m_intValue__int() + 1 | 0), $value).m_intValue__int();] "implicitparenthesis.ImplicitParenthesis.examples"
[assert primitiveInt == 10;] => [$Asserts.$assert(primitiveInt == 10);] "implicitparenthesis.ImplicitParenthesis.examples"
[primitiveInt = 5;] => [primitiveInt = 5;] "implicitparenthesis.ImplicitParenthesis.examples"
[boxedInt = new Integer(10);] => [boxedInt = Integer.$create__int(10);] "implicitparenthesis.ImplicitParenthesis.examples"
[primitiveInt = ++boxedInt;] => [primitiveInt = (boxedInt = Integer.m_valueOf__int__java_lang_Integer(boxedInt.m_intValue__int() + 1 | 0)).m_intValue__int();] "implicitparenthesis.ImplicitParenthesis.examples"
[assert primitiveInt == 11;] => [$Asserts.$assert(primitiveInt == 11);] "implicitparenthesis.ImplicitParenthesis.examples"
[nonExamples] => [m_nonExamples__void]
[int primitiveInt;] => [let /** number */ primitiveInt;] "implicitparenthesis.ImplicitParenthesis.nonExamples"
[primitiveInt] => [primitiveInt] "primitiveInt"
[Integer boxedInt;] => [let /** Integer */ boxedInt;] "implicitparenthesis.ImplicitParenthesis.nonExamples"
[boxedInt] => [boxedInt] "boxedInt"
[Boolean boxedBoolean;] => [let /** ?boolean */ boxedBoolean;] "implicitparenthesis.ImplicitParenthesis.nonExamples"
[boxedBoolean] => [boxedBoolean] "boxedBoolean"
[primitiveInt = 5;] => [primitiveInt = 5;] "implicitparenthesis.ImplicitParenthesis.nonExamples"
[boxedInt = new Integer(10);] => [boxedInt = Integer.$create__int(10);] "implicitparenthesis.ImplicitParenthesis.nonExamples"
[primitiveInt = boxedInt - primitiveInt;] => [primitiveInt = boxedInt.m_intValue__int() - primitiveInt | 0;] "implicitparenthesis.ImplicitParenthesis.nonExamples"
[assert primitiveInt == 5;] => [$Asserts.$assert(primitiveInt == 5);] "implicitparenthesis.ImplicitParenthesis.nonExamples"
[primitiveInt = 5;] => [primitiveInt = 5;] "implicitparenthesis.ImplicitParenthesis.nonExamples"
[boxedInt = new Integer(10);] => [boxedInt = Integer.$create__int(10);] "implicitparenthesis.ImplicitParenthesis.nonExamples"
[boxedBoolean = true;] => [boxedBoolean = true;] "implicitparenthesis.ImplicitParenthesis.nonExamples"
[boxedBoolean = boxedInt == primitiveInt;] => [boxedBoolean = boxedInt.m_intValue__int() == primitiveInt;] "implicitparenthesis.ImplicitParenthesis.nonExamples"
[assert boxedBoolean == false;] => [$Asserts.$assert(Boolean.m_booleanValue__java_lang_Boolean__boolean(boxedBoolean) == false);] "implicitparenthesis.ImplicitParenthesis.nonExamples"
[parenthesisRemoval] => [m_parenthesisRemoval__void]
[new Integer(((1 + 2)));] => [Integer.$create__int(1 + 2 | 0);] "implicitparenthesis.ImplicitParenthesis.parenthesisRemoval"
[ImplicitParenthesis] => [$clinit]
[ImplicitParenthesis] => [ImplicitParenthesis.$clinit = () =>{};] "implicitparenthesis.ImplicitParenthesis.<clinit>"
[ImplicitParenthesis] => [ImplicitParenthesis.$loadModules();] "implicitparenthesis.ImplicitParenthesis.<clinit>"
[ImplicitParenthesis] => [j_l_Object.$clinit();] "implicitparenthesis.ImplicitParenthesis.<clinit>"
