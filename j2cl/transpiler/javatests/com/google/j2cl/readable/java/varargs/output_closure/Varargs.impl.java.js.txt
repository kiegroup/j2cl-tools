goog.module('varargs.Varargs$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Serializable = goog.forwardDeclare('java.io.Serializable$impl');
let Cloneable = goog.forwardDeclare('java.lang.Cloneable$impl');
let FunctionalInterface = goog.forwardDeclare('varargs.Varargs.FunctionalInterface$impl');
let $Arrays = goog.forwardDeclare('vmbootstrap.Arrays$impl');
let $$int = goog.forwardDeclare('vmbootstrap.primitives.$int$impl');

class Varargs extends j_l_Object {
 /** @protected @nodts */
 constructor() {
  super();
  /**@type {Array<*>} @nodts*/
  this.f_args__varargs_Varargs_;
 }
 //Factory method corresponding to constructor 'Varargs(int...)'.
 /** @nodts @return {!Varargs} */
 static $create__arrayOf_int(/** Array<number> */ args) {
  Varargs.$clinit();
  let $instance = new Varargs();
  $instance.$ctor__varargs_Varargs__arrayOf_int__void(args);
  return $instance;
 }
 //Initialization from constructor 'Varargs(int...)'.
 /** @nodts */
 $ctor__varargs_Varargs__arrayOf_int__void(/** Array<number> */ args) {
  this.$ctor__java_lang_Object__void();
 }
 //Factory method corresponding to constructor 'Varargs()'.
 /** @nodts @return {!Varargs} */
 static $create__() {
  Varargs.$clinit();
  let $instance = new Varargs();
  $instance.$ctor__varargs_Varargs__void();
  return $instance;
 }
 //Initialization from constructor 'Varargs()'.
 /** @nodts */
 $ctor__varargs_Varargs__void() {
  this.$ctor__varargs_Varargs__arrayOf_int__void(/**@type {!Array<number>}*/ ($Arrays.$init([1], $$int)));
 }
 /** @nodts */
 m_test__int__arrayOf_java_lang_Object__void(/** number */ a, /** Array<*> */ args) {}
 /** @nodts */
 m_testCloneable__arrayOf_java_lang_Cloneable__void(/** Array<(Cloneable|Array)> */ args) {}
 /** @nodts */
 m_testSerializable__arrayOf_java_io_Serializable__void(/** Array<(Serializable|Array)> */ args) {}
 /** @nodts */
 m_testAssignment__arrayOf_java_lang_Object__void(/** Array<*> */ args) {
  this.f_args__varargs_Varargs_ = args;
 }
 /** @nodts */
 m_testLambda__varargs_Varargs_FunctionalInterface__void(/** FunctionalInterface */ functionalInterface) {}
 /** @nodts @template T */
 static m_fun__arrayOf_java_lang_Object__void(/** Array<T> */ elements) {
  Varargs.$clinit();
 }
 /** @nodts @template E */
 static m_bar__java_lang_Object__java_lang_Object__void(/** E */ a, /** E */ b) {
  Varargs.$clinit();
  Varargs.m_fun__arrayOf_java_lang_Object__void([a, b]);
 }
 /** @nodts */
 m_main__void() {
  let v = Varargs.$create__();
  v.m_test__int__arrayOf_java_lang_Object__void(1, []);
  v.m_test__int__arrayOf_java_lang_Object__void(1, [j_l_Object.$create__()]);
  v.m_test__int__arrayOf_java_lang_Object__void(1, [j_l_Object.$create__()]);
  v.m_test__int__arrayOf_java_lang_Object__void(1, []);
  v.m_test__int__arrayOf_java_lang_Object__void(1, /**@type {!Array<Array<*>>}*/ ($Arrays.$init([], j_l_Object, 2)));
  v.m_testCloneable__arrayOf_java_lang_Cloneable__void(/**@type {!Array<Array<*>>}*/ ($Arrays.$init([], j_l_Object, 2)));
  v.m_testSerializable__arrayOf_java_io_Serializable__void(/**@type {!Array<Array<*>>}*/ ($Arrays.$init([], j_l_Object, 2)));
  v.m_testLambda__varargs_Varargs_FunctionalInterface__void(FunctionalInterface.$adapt((/** Array<?string> */ it) =>{
   this.f_args__varargs_Varargs_ = it;
  }));
 }
 /** @nodts */
 static $clinit() {
  Varargs.$clinit = () =>{};
  Varargs.$loadModules();
  j_l_Object.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof Varargs;
 }
 
 /** @nodts */
 static $loadModules() {
  FunctionalInterface = goog.module.get('varargs.Varargs.FunctionalInterface$impl');
  $Arrays = goog.module.get('vmbootstrap.Arrays$impl');
  $$int = goog.module.get('vmbootstrap.primitives.$int$impl');
 }
}
$Util.$setClassMetadata(Varargs, 'varargs.Varargs');

exports = Varargs;

//# sourceMappingURL=Varargs.js.map
