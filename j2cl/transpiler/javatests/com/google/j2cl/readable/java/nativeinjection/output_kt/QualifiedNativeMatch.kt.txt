// Generated from "nativeinjection/QualifiedNativeMatch.java"
@file:OptIn(ExperimentalObjCName::class)
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "REPEATED_BOUND",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_ANONYMOUS_PARAMETER",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER")

package nativeinjection

import javaemul.lang.*
import jsinterop.annotations.JsMethod
import jsinterop.annotations.JsType
import kotlin.Int
import kotlin.OptIn
import kotlin.Suppress
import kotlin.experimental.ExperimentalObjCName
import kotlin.jvm.JvmStatic
import kotlin.native.ObjCName

@ObjCName("J2ktNativeinjectionQualifiedNativeMatch", exact = true)
@JsType(name = "SomeOtherName", namespace = "some.other.pkg")
class QualifiedNativeMatch {
 @ObjCName("J2ktNativeinjectionQualifiedNativeMatchCompanion", exact = true)
 companion object {
  @JvmStatic
  @ObjCName("getValue")
  external fun getValue(): Int
 }

 @ObjCName("J2ktNativeinjectionQualifiedNativeMatch_InnerClass", exact = true)
 class InnerClass {
  @ObjCName("J2ktNativeinjectionQualifiedNativeMatch_InnerClassCompanion", exact = true)
  companion object {
   @JvmStatic
   @ObjCName("getOtherValue")
   @JsMethod
   external fun getOtherValue(): Int
  }
 }
}
