[TestUnqualifiedSuperCall] => [TestUnqualifiedSuperCall]
[TestUnqualifiedSuperCall] => [constructor]
[TestUnqualifiedSuperCall] => [super();] "innerclassinitorder.InnerClassInitOrder$Outer$TestUnqualifiedSuperCall.<synthetic: ctor_js>"
[TestUnqualifiedSuperCall] => [/**@type {Outer} @nodts*/
  this.$outer_this__innerclassinitorder_InnerClassInitOrder_Outer_TestUnqualifiedSuperCall;] "innerclassinitorder.InnerClassInitOrder$Outer$TestUnqualifiedSuperCall.<synthetic: ctor_js>"
[TestUnqualifiedSuperCall] => [$create__innerclassinitorder_InnerClassInitOrder_Outer]
[TestUnqualifiedSuperCall] => [TestUnqualifiedSuperCall.$clinit();] "innerclassinitorder.InnerClassInitOrder$Outer$TestUnqualifiedSuperCall.<synthetic: ctor_create>"
[TestUnqualifiedSuperCall] => [let $instance = new TestUnqualifiedSuperCall();] "innerclassinitorder.InnerClassInitOrder$Outer$TestUnqualifiedSuperCall.<synthetic: ctor_create>"
[TestUnqualifiedSuperCall] => [$instance.$ctor__innerclassinitorder_InnerClassInitOrder_Outer_TestUnqualifiedSuperCall__innerclassinitorder_InnerClassInitOrder_Outer__void($outer_this);] "innerclassinitorder.InnerClassInitOrder$Outer$TestUnqualifiedSuperCall.<synthetic: ctor_create>"
[TestUnqualifiedSuperCall] => [return $instance;] "innerclassinitorder.InnerClassInitOrder$Outer$TestUnqualifiedSuperCall.<synthetic: ctor_create>"
[TestUnqualifiedSuperCall] => [$ctor__innerclassinitorder_InnerClassInitOrder_Outer_TestUnqualifiedSuperCall__innerclassinitorder_InnerClassInitOrder_Outer__void]
[TestUnqualifiedSuperCall] => [this.$outer_this__innerclassinitorder_InnerClassInitOrder_Outer_TestUnqualifiedSuperCall = $outer_this;] "innerclassinitorder.InnerClassInitOrder$Outer$TestUnqualifiedSuperCall.<init>"
[super();] => [this.$ctor__innerclassinitorder_InnerClassInitOrder_Outer_OuterIsNotSuper__innerclassinitorder_InnerClassInitOrder_Outer__void($outer_this);] "innerclassinitorder.InnerClassInitOrder$Outer$TestUnqualifiedSuperCall.<init>"
[TestUnqualifiedSuperCall] => [$clinit]
[TestUnqualifiedSuperCall] => [TestUnqualifiedSuperCall.$clinit = () =>{};] "innerclassinitorder.InnerClassInitOrder$Outer$TestUnqualifiedSuperCall.<clinit>"
[TestUnqualifiedSuperCall] => [TestUnqualifiedSuperCall.$loadModules();] "innerclassinitorder.InnerClassInitOrder$Outer$TestUnqualifiedSuperCall.<clinit>"
[TestUnqualifiedSuperCall] => [OuterIsNotSuper.$clinit();] "innerclassinitorder.InnerClassInitOrder$Outer$TestUnqualifiedSuperCall.<clinit>"
