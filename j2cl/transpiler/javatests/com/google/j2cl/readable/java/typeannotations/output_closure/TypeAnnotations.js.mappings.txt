[TypeAnnotations] => [TypeAnnotations]
[TypeAnnotations] => [constructor]
[TypeAnnotations] => [super();] "typeannotations.TypeAnnotations.<synthetic: ctor_js>"
[TypeAnnotations] => [$create__]
[TypeAnnotations] => [TypeAnnotations.$clinit();] "typeannotations.TypeAnnotations.<synthetic: ctor_create>"
[TypeAnnotations] => [let $instance = new TypeAnnotations();] "typeannotations.TypeAnnotations.<synthetic: ctor_create>"
[TypeAnnotations] => [$instance.$ctor__typeannotations_TypeAnnotations__void();] "typeannotations.TypeAnnotations.<synthetic: ctor_create>"
[TypeAnnotations] => [return $instance;] "typeannotations.TypeAnnotations.<synthetic: ctor_create>"
[TypeAnnotations] => [$ctor__typeannotations_TypeAnnotations__void]
[TypeAnnotations] => [this.$ctor__java_lang_Object__void();] "typeannotations.TypeAnnotations.<init>"
[main] => [m_main__void]
[{
    // The ArrayList should be inferred as ArrayList<@JsNonNull String>();
    List<@JsNonNull String> list = new ArrayList<>();
  }] => [TypeAnnotations.$clinit();] "typeannotations.TypeAnnotations.main"
[List<@JsNonNull String> list = new ArrayList<>();] => [let list = /**@type {!ArrayList<string>}*/ (ArrayList.$create__());] "typeannotations.TypeAnnotations.main"
[list] => [list] "list"
[TypeAnnotations] => [$clinit]
[TypeAnnotations] => [TypeAnnotations.$clinit = () =>{};] "typeannotations.TypeAnnotations.<clinit>"
[TypeAnnotations] => [TypeAnnotations.$loadModules();] "typeannotations.TypeAnnotations.<clinit>"
[TypeAnnotations] => [j_l_Object.$clinit();] "typeannotations.TypeAnnotations.<clinit>"
