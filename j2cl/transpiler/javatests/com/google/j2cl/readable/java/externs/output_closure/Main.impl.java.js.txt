goog.module('externs.Main$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Inner = goog.forwardDeclare('externs.Main.FooImpl');
let FooImpl = goog.forwardDeclare('externs.Main.FooImpl$impl');
let j_l_String = goog.forwardDeclare('java.lang.String$impl');

class Main extends j_l_Object {
 /** @protected @nodts */
 constructor() {
  super();
  /**@type {Foo} @nodts*/
  this.f_aFoo__externs_Main;
  /**@type {TopLevelExtern.InnerExtern} @nodts*/
  this.f_innerExtern__externs_Main;
  /**@type {Inner} @nodts*/
  this.f_inner__externs_Main;
 }
 /** @nodts @return {!Main} */
 static $create__() {
  Main.$clinit();
  let $instance = new Main();
  $instance.$ctor__externs_Main__void();
  return $instance;
 }
 /** @nodts */
 $ctor__externs_Main__void() {
  this.$ctor__java_lang_Object__void();
 }
 /** @nodts @return {boolean} */
 static m_testFooOverlay__externs_Main_FooOverlay__boolean(/** Foo */ fooOverlay) {
  return j_l_String.m_equals__java_lang_String__java_lang_Object__boolean(fooOverlay.foo, 'Hello');
 }
 // 
 // native static useDirectlyAsFoo(/** * */ fooOverlay) 
 /** @nodts */
 static m_main__arrayOf_java_lang_String__void(/** Array<?string> */ args) {
  Main.$clinit();
  Main.m_testFooOverlay__externs_Main_FooOverlay__boolean(/**@type {!Foo}*/ (FooImpl.$create__()));
  Main.useDirectlyAsFoo(FooImpl.$create__());
 }
 /** @nodts */
 static $clinit() {
  Main.$clinit = () =>{};
  Main.$loadModules();
  j_l_Object.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof Main;
 }
 
 /** @nodts */
 static $loadModules() {
  FooImpl = goog.module.get('externs.Main.FooImpl$impl');
  j_l_String = goog.module.get('java.lang.String$impl');
 }
}
$Util.$setClassMetadata(Main, 'externs.Main');

/* NATIVE.JS EPILOG */

const externs_Main = Main;

// Copyright 2017 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/**
 * @param {Foo} foo
 * @returns {string}
 */
function useFoo(foo) {
  return foo.foo;
}

/**
 * @param {*} foo
 * @return {void}
 * @public
 */
Main.useDirectlyAsFoo = function(foo) {
  useFoo(/** @type {Foo} */ (foo));
};


exports = Main;

//# sourceMappingURL=Main.js.map
