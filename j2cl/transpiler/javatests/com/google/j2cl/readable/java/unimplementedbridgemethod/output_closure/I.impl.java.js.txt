goog.module('unimplementedbridgemethod.I$impl');

const $Util = goog.require('nativebootstrap.Util$impl');

let $LambdaAdaptor = goog.forwardDeclare('unimplementedbridgemethod.I.$LambdaAdaptor$impl');

/**
 * @interface
 * @template T
 */
class I {
 /** @abstract @nodts @return {number} */
 m_foo__java_lang_Object__int(/** T */ t) {}
 /** @nodts @return {number} */
 static m_staticFoo__int() {
  I.$clinit();
  return 0;
 }
 /** @nodts @template T @return {I<T>} */
 static $adapt(/** ?function(T):number */ fn) {
  I.$clinit();
  return /**@type {!$LambdaAdaptor<T>}*/ (new $LambdaAdaptor(fn));
 }
 /** @nodts */
 static $clinit() {
  I.$clinit = () =>{};
  I.$loadModules();
 }
 
 static $markImplementor(/** Function */ ctor) {
  ctor.prototype.$implements__unimplementedbridgemethod_I = true;
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance != null && !!instance.$implements__unimplementedbridgemethod_I;
 }
 
 /** @nodts */
 static $loadModules() {
  $LambdaAdaptor = goog.module.get('unimplementedbridgemethod.I.$LambdaAdaptor$impl');
 }
}
I.$markImplementor(/**@type {Function}*/ (I));
$Util.$setClassMetadataForInterface(I, 'unimplementedbridgemethod.I');

exports = I;

//# sourceMappingURL=I.js.map
