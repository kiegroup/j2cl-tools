// Generated from "unreachableclass/Main.java"
@file:OptIn(ExperimentalObjCName::class)
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "REPEATED_BOUND",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_ANONYMOUS_PARAMETER",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER")

package unreachableclass

import javaemul.lang.*
import kotlin.Any
import kotlin.OptIn
import kotlin.RuntimeException
import kotlin.Suppress
import kotlin.experimental.ExperimentalObjCName
import kotlin.native.ObjCName

@ObjCName("J2ktUnreachableclassMain", exact = true)
open class Main {
 init {
  try {} catch (e: RuntimeException) {
   open class A internal constructor() {
    internal open fun m_pp_unreachableclass() {
     open class B internal constructor() {
      internal fun n_private_2() {}
     }
    }
   }
   A().m_pp_unreachableclass()
   object : Any() {}
  }
 }
}
