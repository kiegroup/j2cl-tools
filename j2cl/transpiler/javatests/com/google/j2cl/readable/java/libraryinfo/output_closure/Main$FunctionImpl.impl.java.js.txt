goog.module('libraryinfo.Main.FunctionImpl$impl');

const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');
const $JavaScriptFunction = goog.require('vmbootstrap.JavaScriptFunction$impl');

/**
 * @final
 */
class FunctionImpl extends j_l_Object {
 /** @protected @nodts */
 constructor() {
  super();
 }
 /** @nodts @return {function(?string):void} */
 static $create__() {
  FunctionImpl.$clinit();
  let $instance = new FunctionImpl();
  $instance.$ctor__libraryinfo_Main_FunctionImpl__void();
  return $Util.$makeLambdaFunction(FunctionImpl.prototype.m_apply__java_lang_String__void, $instance, FunctionImpl.$copy);
 }
 /** @nodts */
 $ctor__libraryinfo_Main_FunctionImpl__void() {
  this.$ctor__java_lang_Object__void();
 }
 
 m_apply__java_lang_String__void(/** ?string */ s) {}
 /** @nodts */
 static $clinit() {
  FunctionImpl.$clinit = () =>{};
  FunctionImpl.$loadModules();
  j_l_Object.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance != null && !!instance.$is__libraryinfo_Main_FunctionImpl;
 }
 /** @nodts */
 static $copy(/** ? */ from, /** ? */ to) {
  to.$is__libraryinfo_Main_FunctionImpl = true;
 }
 
 /** @nodts */
 static $loadModules() {}
}
$JavaScriptFunction.$markImplementor(FunctionImpl);
$Util.$setClassMetadata(FunctionImpl, 'libraryinfo.Main$FunctionImpl');

exports = FunctionImpl;

//# sourceMappingURL=Main$FunctionImpl.js.map
