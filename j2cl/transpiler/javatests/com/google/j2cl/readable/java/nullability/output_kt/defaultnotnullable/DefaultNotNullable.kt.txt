// Generated from "nullability/defaultnotnullable/DefaultNotNullable.java"
@file:OptIn(ExperimentalObjCName::class, ExperimentalObjCRefinement::class)
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "REPEATED_BOUND",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER")

package nullability.defaultnotnullable

import javaemul.lang.*
import java.lang.RuntimeException
import java.lang.Void
import kotlin.Any
import kotlin.Array
import kotlin.Boolean
import kotlin.Double
import kotlin.OptIn
import kotlin.String
import kotlin.Suppress
import kotlin.arrayOf
import kotlin.collections.ArrayList
import kotlin.collections.MutableList
import kotlin.experimental.ExperimentalObjCName
import kotlin.experimental.ExperimentalObjCRefinement
import kotlin.jvm.JvmField
import kotlin.jvm.JvmStatic
import kotlin.native.HiddenFromObjC
import kotlin.native.ObjCName

@ObjCName("J2ktNullabilityDefaultnotnullableDefaultNotNullable", exact = true)
open class DefaultNotNullable {
 @JvmField
 @HiddenFromObjC
 var f1_private_2: String = "Hello"

 @JvmField
 @HiddenFromObjC
 var f2_private_2: String? = null

 @JvmField
 @HiddenFromObjC
 var f3_private_2: String? = null

 @JvmField
 @HiddenFromObjC
 var f4_private_2: MutableList<String> = ArrayList<String>()

 @JvmField
 @HiddenFromObjC
 var f5_private_2: MutableList<String>? = ArrayList<String>()

 @JvmField
 @HiddenFromObjC
 var f6_private_2: MutableList<String?> = ArrayList<String?>()

 @JvmField
 @HiddenFromObjC
 var f7_private_2: MutableList<String?>? = null

 @JvmField
 @HiddenFromObjC
 var f8_private_2: Array<String> = arrayOf<String>()

 @JvmField
 @HiddenFromObjC
 var f9_private_2: Array<String?> = arrayOf<String?>()

 @JvmField
 @HiddenFromObjC
 var f10_private_2: Array<String>? = arrayOf<String>()

 @JvmField
 @HiddenFromObjC
 var f11_private_2: Void? = null

 @JvmField
 @HiddenFromObjC
 var f12_private_2: Any = Any()

 @JvmField
 @HiddenFromObjC
 var f13_private_2: Any

 @JvmField
 @HiddenFromObjC
 var f14_private_2: Any? = null

 constructor() {
  this.f13_private_2 = Any()
 }

 @ObjCName("m1")
 open fun m1(
  @ObjCName("withNSString") a: String,
  @ObjCName("withJavaUtilList") b: MutableList<Double>
 ): String {
  return ""
 }

 @ObjCName("m2")
 open fun m2(
  @ObjCName("withNSString") a: String?,
  @ObjCName("withJavaUtilList") b: MutableList<Double?>
 ): String? {
  return null
 }

 @ObjCName("m3")
 open fun m3(
  vararg @ObjCName("withNSStringArray") args: String
 ) {
  val args_1: Array<String> = args as Array<String>
 }

 @HiddenFromObjC
 open fun <T: DefaultNotNullable.NullableBound<T>?> methodWithNullableBound_pp_nullability_defaultnotnullable() {}

 @HiddenFromObjC
 open fun <T: DefaultNotNullable.NonNullableBound<T>> methodWithNonNullableBound_pp_nullability_defaultnotnullable() {}

 @ObjCName("casts")
 open fun casts() {
  val listOfString: MutableList<String>? = null as MutableList<String>?
  val nullableListOfString: MutableList<String>? = null as MutableList<String>?
  val listOfNullableString: MutableList<String?>? = null as MutableList<String?>?
  val nullableListOfNullableString: MutableList<String?>? = null as MutableList<String?>?
  val nonNullListOfString: MutableList<String>? = null as MutableList<String>?
  val listOfNonNullString: MutableList<String>? = null as MutableList<String>?
  val nonNullListOfNonNullString: MutableList<String>? = null as MutableList<String>?
 }

 @ObjCName("J2ktNullabilityDefaultnotnullableDefaultNotNullableCompanion", exact = true)
 companion object {
  @JvmStatic
  @HiddenFromObjC
  fun <N> genericNullableMethod_pp_nullability_defaultnotnullable(o: DefaultNotNullable.ParameterizedNullable<N>, n: N?) {
   o!!.setNullable_pp_nullability_defaultnotnullable(n)
   o!!.setNonNull_pp_nullability_defaultnotnullable(n!!)
   o!!.setDefaultNullability_pp_nullability_defaultnotnullable(n as N)
   o!!.getNullable_pp_nullability_defaultnotnullable()!!.hashCode()
   o!!.getNonNullable_pp_nullability_defaultnotnullable()!!.hashCode()
   o!!.getDefaultNullability_pp_nullability_defaultnotnullable()!!.hashCode()
   o!!.nullable_pp_nullability_defaultnotnullable = n
   o!!.nonNullable_pp_nullability_defaultnotnullable = n!!
   o!!.defaultNullability_pp_nullability_defaultnotnullable = n as N
   o!!.nullable_pp_nullability_defaultnotnullable!!.hashCode()
   o!!.nonNullable_pp_nullability_defaultnotnullable!!.hashCode()
   o!!.defaultNullability_pp_nullability_defaultnotnullable!!.hashCode()
  }

  @JvmStatic
  @HiddenFromObjC
  fun <N: Any> genericNonNullMethod_pp_nullability_defaultnotnullable(o: DefaultNotNullable.ParameterizedNonNullable<N>, n: N) {
   o!!.setNullable_pp_nullability_defaultnotnullable(n)
   o!!.setNonNull_pp_nullability_defaultnotnullable(n)
   o!!.setDefaultNullability_pp_nullability_defaultnotnullable(n)
   o!!.getNullable_pp_nullability_defaultnotnullable()!!.hashCode()
   o!!.getNonNullable_pp_nullability_defaultnotnullable()!!.hashCode()
   o!!.getDefaultNullability_pp_nullability_defaultnotnullable()!!.hashCode()
   o!!.nullable_pp_nullability_defaultnotnullable = n
   o!!.nonNullable_pp_nullability_defaultnotnullable = n
   o!!.defaultNullability_pp_nullability_defaultnotnullable = n
   o!!.nullable_pp_nullability_defaultnotnullable!!.hashCode()
   o!!.nonNullable_pp_nullability_defaultnotnullable!!.hashCode()
   o!!.defaultNullability_pp_nullability_defaultnotnullable!!.hashCode()
  }

  @JvmStatic
  @HiddenFromObjC
  fun <N: Any> genericDefaultNullabilityMethod_pp_nullability_defaultnotnullable(o: DefaultNotNullable.ParameterizedDefaultNullability<N>, n: N) {
   o!!.setNullable_pp_nullability_defaultnotnullable(n)
   o!!.setNonNull_pp_nullability_defaultnotnullable(n)
   o!!.setDefaultNullability_pp_nullability_defaultnotnullable(n)
   o!!.getNullable_pp_nullability_defaultnotnullable()!!.hashCode()
   o!!.getNonNullable_pp_nullability_defaultnotnullable()!!.hashCode()
   o!!.getDefaultNullability_pp_nullability_defaultnotnullable()!!.hashCode()
   o!!.nullable_pp_nullability_defaultnotnullable = n
   o!!.nonNullable_pp_nullability_defaultnotnullable = n
   o!!.defaultNullability_pp_nullability_defaultnotnullable = n
   o!!.nullable_pp_nullability_defaultnotnullable!!.hashCode()
   o!!.nonNullable_pp_nullability_defaultnotnullable!!.hashCode()
   o!!.defaultNullability_pp_nullability_defaultnotnullable!!.hashCode()
  }

  @JvmStatic
  @HiddenFromObjC
  fun parametrizedNullableMethod_pp_nullability_defaultnotnullable(o: DefaultNotNullable.ParameterizedNullable<String?>, s: String?) {
   o!!.setNullable_pp_nullability_defaultnotnullable(s)
   o!!.setNonNull_pp_nullability_defaultnotnullable(s!!)
   o!!.setDefaultNullability_pp_nullability_defaultnotnullable(s)
   o!!.getNullable_pp_nullability_defaultnotnullable()!!.length
   o!!.getNonNullable_pp_nullability_defaultnotnullable()!!.length
   o!!.getDefaultNullability_pp_nullability_defaultnotnullable()!!.length
   o!!.nullable_pp_nullability_defaultnotnullable = s
   o!!.nonNullable_pp_nullability_defaultnotnullable = s!!
   o!!.defaultNullability_pp_nullability_defaultnotnullable = s
   o!!.nullable_pp_nullability_defaultnotnullable!!.length
   o!!.nonNullable_pp_nullability_defaultnotnullable!!.length
   o!!.defaultNullability_pp_nullability_defaultnotnullable!!.length
  }

  @JvmStatic
  @HiddenFromObjC
  fun parametrizedNonNullMethod_pp_nullability_defaultnotnullable(o: DefaultNotNullable.ParameterizedNonNullable<String>, s: String) {
   o!!.setNullable_pp_nullability_defaultnotnullable(s)
   o!!.setNonNull_pp_nullability_defaultnotnullable(s)
   o!!.setDefaultNullability_pp_nullability_defaultnotnullable(s)
   o!!.getNullable_pp_nullability_defaultnotnullable()!!.length
   o!!.getNonNullable_pp_nullability_defaultnotnullable()!!.length
   o!!.getDefaultNullability_pp_nullability_defaultnotnullable()!!.length
   o!!.nullable_pp_nullability_defaultnotnullable = s
   o!!.nonNullable_pp_nullability_defaultnotnullable = s
   o!!.defaultNullability_pp_nullability_defaultnotnullable = s
   o!!.nullable_pp_nullability_defaultnotnullable!!.length
   o!!.nonNullable_pp_nullability_defaultnotnullable!!.length
   o!!.defaultNullability_pp_nullability_defaultnotnullable!!.length
  }

  @JvmStatic
  @HiddenFromObjC
  fun parametrizedDefaultNullabilityMethod_pp_nullability_defaultnotnullable(o: DefaultNotNullable.ParameterizedDefaultNullability<String>, s: String) {
   o!!.setNullable_pp_nullability_defaultnotnullable(s)
   o!!.setNonNull_pp_nullability_defaultnotnullable(s)
   o!!.setDefaultNullability_pp_nullability_defaultnotnullable(s)
   o!!.getNullable_pp_nullability_defaultnotnullable()!!.length
   o!!.getNonNullable_pp_nullability_defaultnotnullable()!!.length
   o!!.getDefaultNullability_pp_nullability_defaultnotnullable()!!.length
   o!!.nullable_pp_nullability_defaultnotnullable = s
   o!!.nonNullable_pp_nullability_defaultnotnullable = s
   o!!.defaultNullability_pp_nullability_defaultnotnullable = s
   o!!.nullable_pp_nullability_defaultnotnullable!!.length
   o!!.nonNullable_pp_nullability_defaultnotnullable!!.length
   o!!.defaultNullability_pp_nullability_defaultnotnullable!!.length
  }

  @JvmStatic
  @HiddenFromObjC
  fun testListOfWildcard_pp_nullability_defaultnotnullable(l: MutableList<*>) {}

  @JvmStatic
  @HiddenFromObjC
  fun testListOfWildcardExtendsDefaultNullabilityObject_pp_nullability_defaultnotnullable(l: MutableList<*>) {}

  @JvmStatic
  @HiddenFromObjC
  fun testListOfWildcardExtendsNullableObject_pp_nullability_defaultnotnullable(l: MutableList<*>) {}

  @JvmStatic
  @HiddenFromObjC
  fun testListOfWildcardExtendsNonNullObject_pp_nullability_defaultnotnullable(l: MutableList<*>) {}

  @JvmStatic
  @HiddenFromObjC
  fun testListOfWildcardExtendsDefaultNullabilityString_pp_nullability_defaultnotnullable(l: MutableList<out String>) {}

  @JvmStatic
  @HiddenFromObjC
  fun testListOfWildcardExtendsNullableString_pp_nullability_defaultnotnullable(l: MutableList<out String?>) {}

  @JvmStatic
  @HiddenFromObjC
  fun testListOfWildcardExtendsNonNullString_pp_nullability_defaultnotnullable(l: MutableList<out String>) {}

  @JvmStatic
  @HiddenFromObjC
  fun <T: Any> testListOfWildcardExtendsDefaultNullabilityVariable_pp_nullability_defaultnotnullable(l: MutableList<out T>) {}

  @JvmStatic
  @HiddenFromObjC
  fun <T: Any> testListOfWildcardExtendsNullableVariable_pp_nullability_defaultnotnullable(l: MutableList<out T?>) {}

  @JvmStatic
  @HiddenFromObjC
  fun testListOfWildcardSuperDefaultNullabilityObject_pp_nullability_defaultnotnullable(l: MutableList<in Any>) {}

  @JvmStatic
  @HiddenFromObjC
  fun testListOfWildcardSuperNullableObject_pp_nullability_defaultnotnullable(l: MutableList<in Any?>) {}

  @JvmStatic
  @HiddenFromObjC
  fun testListOfWildcardSuperNonNullObject_pp_nullability_defaultnotnullable(l: MutableList<in Any>) {}

  @JvmStatic
  @HiddenFromObjC
  fun testListOfWildcardSuperDefaultNullabilityString_pp_nullability_defaultnotnullable(l: MutableList<in String>) {}

  @JvmStatic
  @HiddenFromObjC
  fun testListOfWildcardSuperNullableString_pp_nullability_defaultnotnullable(l: MutableList<in String?>) {}

  @JvmStatic
  @HiddenFromObjC
  fun testListOfWildcardSuperNonNullString_pp_nullability_defaultnotnullable(l: MutableList<in String>) {}

  @JvmStatic
  @HiddenFromObjC
  fun <T: Any> testListOfWildcardSuperDefaultNullabilityVariable_pp_nullability_defaultnotnullable(l: MutableList<in T>) {}

  @JvmStatic
  @HiddenFromObjC
  fun <T: Any> testListOfWildcardSuperNullableVariable_pp_nullability_defaultnotnullable(l: MutableList<in T?>) {}

  @JvmStatic
  @HiddenFromObjC
  fun <T: Any> testCaptureNullabilityCast_pp_nullability_defaultnotnullable(l: MutableList<in T>, t: T?) {
   l!!.add(t as T)
  }

  @JvmStatic
  @HiddenFromObjC
  fun testParametrizedTypeNullabilityCast_pp_nullability_defaultnotnullable(c: DefaultNotNullable.Consumer<String>, string: String) {
   val localString: String? = string
   c!!.accept(localString!!)
  }

  @JvmStatic
  @HiddenFromObjC
  fun <T: Any> testGenericTypeNullabilityCast_pp_nullability_defaultnotnullable(c: DefaultNotNullable.Consumer<T>, element: T) {
   val localElement: T? = element
   c!!.accept(localElement!!)
  }

  @JvmStatic
  @HiddenFromObjC
  fun testParametrizedWildcardNullabilityCast_pp_nullability_defaultnotnullable(c: DefaultNotNullable.Consumer<in String>, string: String) {
   val localString: String? = string
  }

  @JvmStatic
  @HiddenFromObjC
  fun <T: Any> testGenericWildcardNullabilityCast_pp_nullability_defaultnotnullable(c: DefaultNotNullable.Consumer<in T>, element: T) {
   val localElement: T? = element
   c!!.accept(localElement as T)
  }

  @JvmStatic
  @HiddenFromObjC
  fun testParametrizedArrayNullabilityCast_pp_nullability_defaultnotnullable(array: Array<String>) {
   val localArray: Array<String>? = array
  }

  @JvmStatic
  @HiddenFromObjC
  fun <T: Any> testGenericArrayNullabilityCast_pp_nullability_defaultnotnullable(array: Array<T>) {
   val localArray: Array<T>? = array
  }

  @JvmStatic
  @HiddenFromObjC
  fun testLocalNullability_pp_nullability_defaultnotnullable() {
   val stringConsumer: DefaultNotNullable.Consumer<String>? = null as DefaultNotNullable.Consumer<String>?
   val nullableStringConsumer: DefaultNotNullable.Consumer<String?>? = null as DefaultNotNullable.Consumer<String?>?
   val nonNullStringConsumer: DefaultNotNullable.Consumer<String>? = null as DefaultNotNullable.Consumer<String>?
   val b: Boolean = null is DefaultNotNullable.Consumer<*>
  }

  @JvmStatic
  @HiddenFromObjC
  fun testCodeFragments_pp_nullability_defaultnotnullable() {
   val b: Boolean = true
   val c: DefaultNotNullable.Consumer<String>? = if (b) null as DefaultNotNullable.Consumer<String>? else null
   val s: Array<String>? = arrayOf<String>("1", "2")
  }
 }

 interface ParameterizedInterface<T: Any> {
  @ObjCName("add")
  fun add(
   @ObjCName("withId") t: T
  ): T

  @ObjCName("nullableAdd")
  fun nullableAdd(
   @ObjCName("withId") t: T?
  ): T?
 }

 open inner class ImplementsParameterizedInterface: DefaultNotNullable.ParameterizedInterface<String> {
  open override fun add(s: String): String {
   return "Hey"
  }

  open override fun nullableAdd(s: String?): String? {
   return "Hey"
  }
 }

 interface NullableBound<T: DefaultNotNullable.NullableBound<T>?> {}

 interface NonNullableBound<T: DefaultNotNullable.NonNullableBound<T>> {}

 interface NullableBoundWithNonNullArgument: DefaultNotNullable.NullableBound<DefaultNotNullable.NullableBoundWithNonNullArgument> {}

 interface NullableBoundWithNullableArgument: DefaultNotNullable.NullableBound<DefaultNotNullable.NullableBoundWithNullableArgument?> {}

 interface NonNullBoundWithNonNullArgument: DefaultNotNullable.NonNullableBound<DefaultNotNullable.NonNullBoundWithNonNullArgument> {}

 interface NonNullBoundWithNullableArgument: DefaultNotNullable.NonNullableBound<DefaultNotNullable.NonNullBoundWithNullableArgument> {}

 open class ParameterizedDefaultNullability<N: Any> {
  @JvmField
  @HiddenFromObjC
  var nullable_pp_nullability_defaultnotnullable: N? = null

  @JvmField
  @HiddenFromObjC
  var nonNullable_pp_nullability_defaultnotnullable: N

  @JvmField
  @HiddenFromObjC
  var defaultNullability_pp_nullability_defaultnotnullable: N

  constructor(n: N) {
   this.nonNullable_pp_nullability_defaultnotnullable = n
   this.defaultNullability_pp_nullability_defaultnotnullable = n
  }

  @HiddenFromObjC
  open fun getNullable_pp_nullability_defaultnotnullable(): N? {
   return null
  }

  @HiddenFromObjC
  open fun getNonNullable_pp_nullability_defaultnotnullable(): N {
   throw RuntimeException()
  }

  @HiddenFromObjC
  open fun getDefaultNullability_pp_nullability_defaultnotnullable(): N {
   return null!!
  }

  @HiddenFromObjC
  open fun setNullable_pp_nullability_defaultnotnullable(n: N?) {}

  @HiddenFromObjC
  open fun setNonNull_pp_nullability_defaultnotnullable(n: N) {}

  @HiddenFromObjC
  open fun setDefaultNullability_pp_nullability_defaultnotnullable(n: N) {}
 }

 open class ParameterizedNullable<N> {
  @JvmField
  @HiddenFromObjC
  var nullable_pp_nullability_defaultnotnullable: N? = null

  @JvmField
  @HiddenFromObjC
  var nonNullable_pp_nullability_defaultnotnullable: N & Any

  @JvmField
  @HiddenFromObjC
  var defaultNullability_pp_nullability_defaultnotnullable: N

  constructor(n: N) {
   this.nonNullable_pp_nullability_defaultnotnullable = n!!
   this.defaultNullability_pp_nullability_defaultnotnullable = n
  }

  @HiddenFromObjC
  open fun getNullable_pp_nullability_defaultnotnullable(): N? {
   return null
  }

  @HiddenFromObjC
  open fun getNonNullable_pp_nullability_defaultnotnullable(): N & Any {
   throw RuntimeException()
  }

  @HiddenFromObjC
  open fun getDefaultNullability_pp_nullability_defaultnotnullable(): N {
   return null as N
  }

  @HiddenFromObjC
  open fun setNullable_pp_nullability_defaultnotnullable(n: N?) {}

  @HiddenFromObjC
  open fun setNonNull_pp_nullability_defaultnotnullable(n: N & Any) {}

  @HiddenFromObjC
  open fun setDefaultNullability_pp_nullability_defaultnotnullable(n: N) {}
 }

 open class ParameterizedNonNullable<N: Any> {
  @JvmField
  @HiddenFromObjC
  var nullable_pp_nullability_defaultnotnullable: N? = null

  @JvmField
  @HiddenFromObjC
  var nonNullable_pp_nullability_defaultnotnullable: N

  @JvmField
  @HiddenFromObjC
  var defaultNullability_pp_nullability_defaultnotnullable: N

  constructor(n: N) {
   this.nonNullable_pp_nullability_defaultnotnullable = n
   this.defaultNullability_pp_nullability_defaultnotnullable = n
  }

  @HiddenFromObjC
  open fun getNullable_pp_nullability_defaultnotnullable(): N? {
   return null
  }

  @HiddenFromObjC
  open fun getNonNullable_pp_nullability_defaultnotnullable(): N {
   throw RuntimeException()
  }

  @HiddenFromObjC
  open fun getDefaultNullability_pp_nullability_defaultnotnullable(): N {
   return null!!
  }

  @HiddenFromObjC
  open fun setNullable_pp_nullability_defaultnotnullable(n: N?) {}

  @HiddenFromObjC
  open fun setNonNull_pp_nullability_defaultnotnullable(n: N) {}

  @HiddenFromObjC
  open fun setDefaultNullability_pp_nullability_defaultnotnullable(n: N) {}
 }

 fun interface Consumer<T> {
  @ObjCName("accept")
  fun accept(
   @ObjCName("withId") t: T
  )
 }
}
