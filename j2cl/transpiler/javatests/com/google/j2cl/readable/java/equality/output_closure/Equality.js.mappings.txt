[Equality] => [Equality]
[Equality] => [constructor]
[Equality] => [super();] "equality.Equality.<synthetic: ctor_js>"
[Equality] => [$create__]
[Equality] => [Equality.$clinit();] "equality.Equality.<synthetic: ctor_create>"
[Equality] => [let $instance = new Equality();] "equality.Equality.<synthetic: ctor_create>"
[Equality] => [$instance.$ctor__equality_Equality__void();] "equality.Equality.<synthetic: ctor_create>"
[Equality] => [return $instance;] "equality.Equality.<synthetic: ctor_create>"
[Equality] => [$ctor__equality_Equality__void]
[Equality] => [this.$ctor__java_lang_Object__void();] "equality.Equality.<init>"
[test] => [m_test__void]
[boolean a = false == false;] => [let a = false == false;] "equality.Equality.test"
[a] => [a] "a"
[boolean b = 0 != 1;] => [let b = 0 != 1;] "equality.Equality.test"
[b] => [b] "b"
[boolean c = new Object() != new Object();] => [let c = !$Equality.$same(j_l_Object.$create__(), j_l_Object.$create__());] "equality.Equality.test"
[c] => [c] "c"
[boolean d = (Double) 0.0 == (Double) 0.0;] => [let d = $Equality.$same(/**@type {number}*/ ($Casts.$to(0, Double)), /**@type {number}*/ ($Casts.$to(0, Double)));] "equality.Equality.test"
[d] => [d] "d"
[boolean e = (Float) 0.0f == (Float) 0.0f;] => [let e = $Equality.$same(Float.m_valueOf__float__java_lang_Float(0), Float.m_valueOf__float__java_lang_Float(0));] "equality.Equality.test"
[e] => [e] "e"
[boolean f = null != new Object();] => [let f = !$Equality.$same(null, j_l_Object.$create__());] "equality.Equality.test"
[f] => [f] "f"
[boolean g = new Object() != null;] => [let g = !$Equality.$same(j_l_Object.$create__(), null);] "equality.Equality.test"
[g] => [g] "g"
[boolean h = null != new int[0];] => [let h = !$Equality.$same(null, /**@type {!Array<number>}*/ ($Arrays.$create([0], $$int)));] "equality.Equality.test"
[h] => [h] "h"
[Equality] => [$clinit]
[Equality] => [Equality.$clinit = () =>{};] "equality.Equality.<clinit>"
[Equality] => [Equality.$loadModules();] "equality.Equality.<clinit>"
[Equality] => [j_l_Object.$clinit();] "equality.Equality.<clinit>"
