[InnerClassInitOrder] => [InnerClassInitOrder]
[InnerClassInitOrder] => [constructor]
[InnerClassInitOrder] => [super();] "innerclassinitorder.InnerClassInitOrder.<synthetic: ctor_js>"
[InnerClassInitOrder] => [/**@type {number} @nodts*/
  this.f_number__innerclassinitorder_InnerClassInitOrder = 0;] "innerclassinitorder.InnerClassInitOrder.<synthetic: ctor_js>"
[number] => [f_number__innerclassinitorder_InnerClassInitOrder]
[InnerClassInitOrder] => [/**@type {Outer} @nodts*/
  this.f_outer__innerclassinitorder_InnerClassInitOrder_;] "innerclassinitorder.InnerClassInitOrder.<synthetic: ctor_js>"
[outer] => [f_outer__innerclassinitorder_InnerClassInitOrder_]
[InnerClassInitOrder] => [/**@type {OuterIsSuper} @nodts*/
  this.f_outerIsSuper__innerclassinitorder_InnerClassInitOrder_;] "innerclassinitorder.InnerClassInitOrder.<synthetic: ctor_js>"
[outerIsSuper] => [f_outerIsSuper__innerclassinitorder_InnerClassInitOrder_]
[InnerClassInitOrder] => [$create__]
[InnerClassInitOrder] => [InnerClassInitOrder.$clinit();] "innerclassinitorder.InnerClassInitOrder.<synthetic: ctor_create>"
[InnerClassInitOrder] => [let $instance = new InnerClassInitOrder();] "innerclassinitorder.InnerClassInitOrder.<synthetic: ctor_create>"
[InnerClassInitOrder] => [$instance.$ctor__innerclassinitorder_InnerClassInitOrder__void();] "innerclassinitorder.InnerClassInitOrder.<synthetic: ctor_create>"
[InnerClassInitOrder] => [return $instance;] "innerclassinitorder.InnerClassInitOrder.<synthetic: ctor_create>"
[InnerClassInitOrder] => [$ctor__innerclassinitorder_InnerClassInitOrder__void]
[InnerClassInitOrder] => [this.$ctor__java_lang_Object__void();] "innerclassinitorder.InnerClassInitOrder.<init>"
[InnerClassInitOrder] => [this.$init__void_$p_innerclassinitorder_InnerClassInitOrder();] "innerclassinitorder.InnerClassInitOrder.<init>"
[testOuterThisFromSuperCall] => [m_testOuterThisFromSuperCall__void]
[new OuterRefFromSuperCtorCall();] => [OuterRefFromSuperCtorCall.$create__innerclassinitorder_InnerClassInitOrder(this);] "innerclassinitorder.InnerClassInitOrder.testOuterThisFromSuperCall"
[assert (number == 100);] => [$Asserts.$assert(this.f_number__innerclassinitorder_InnerClassInitOrder == 100);] "innerclassinitorder.InnerClassInitOrder.testOuterThisFromSuperCall"
[testOuterThisFromThisCall] => [m_testOuterThisFromThisCall__void]
[new OuterRefFromThisCtorCall();] => [OuterRefFromThisCtorCall.$create__innerclassinitorder_InnerClassInitOrder(this);] "innerclassinitorder.InnerClassInitOrder.testOuterThisFromThisCall"
[assert (number == 1100);] => [$Asserts.$assert(this.f_number__innerclassinitorder_InnerClassInitOrder == 1100);] "innerclassinitorder.InnerClassInitOrder.testOuterThisFromThisCall"
[testExtendsNested] => [m_testExtendsNested__void]
[ESOuter o = new ESOuter();] => [let o = ESOuter.$create__();] "innerclassinitorder.InnerClassInitOrder.testExtendsNested"
[o] => [o] "o"
[assert (1 == o.new ESInner().value);] => [$Asserts.$assert(1 == ESInner.$create__innerclassinitorder_InnerClassInitOrder_ESOuter(o).f_value__innerclassinitorder_InnerClassInitOrder_ESOuter_ESInner);] "innerclassinitorder.InnerClassInitOrder.testExtendsNested"
[assert (2 == o.new ESInner(2).value);] => [$Asserts.$assert(2 == ESInner.$create__innerclassinitorder_InnerClassInitOrder_ESOuter__int(o, 2).f_value__innerclassinitorder_InnerClassInitOrder_ESOuter_ESInner);] "innerclassinitorder.InnerClassInitOrder.testExtendsNested"
[assert (1 == new ESInnerSubclass(o).value);] => [$Asserts.$assert(1 == ESInnerSubclass.$create__innerclassinitorder_InnerClassInitOrder_ESOuter(o).f_value__innerclassinitorder_InnerClassInitOrder_ESOuter_ESInner);] "innerclassinitorder.InnerClassInitOrder.testExtendsNested"
[assert (2 == new ESInnerSubclass(2, o).value);] => [$Asserts.$assert(2 == ESInnerSubclass.$create__int__innerclassinitorder_InnerClassInitOrder_ESOuter(2, o).f_value__innerclassinitorder_InnerClassInitOrder_ESOuter_ESInner);] "innerclassinitorder.InnerClassInitOrder.testExtendsNested"
[testExtendsNestedWithGenerics] => [m_testExtendsNestedWithGenerics__void]
[ESWGOuter<String> o = new ESWGOuter<String>();] => [let o = /**@type {!ESWGOuter<?string>}*/ (ESWGOuter.$create__());] "innerclassinitorder.InnerClassInitOrder.testExtendsNestedWithGenerics"
[o] => [o] "o"
[assert (1 == o.new ESWGInner().value);] => [$Asserts.$assert(1 == /**@type {!ESWGInner<?string>}*/ (ESWGInner.$create__innerclassinitorder_InnerClassInitOrder_ESWGOuter(o)).f_value__innerclassinitorder_InnerClassInitOrder_ESWGOuter_ESWGInner);] "innerclassinitorder.InnerClassInitOrder.testExtendsNestedWithGenerics"
[assert (2 == o.new ESWGInner(2).value);] => [$Asserts.$assert(2 == /**@type {!ESWGInner<?string>}*/ (ESWGInner.$create__innerclassinitorder_InnerClassInitOrder_ESWGOuter__int(o, 2)).f_value__innerclassinitorder_InnerClassInitOrder_ESWGOuter_ESWGInner);] "innerclassinitorder.InnerClassInitOrder.testExtendsNestedWithGenerics"
[assert (1 == new ESWGInnerSubclass(o).value);] => [$Asserts.$assert(1 == ESWGInnerSubclass.$create__innerclassinitorder_InnerClassInitOrder_ESWGOuter(o).f_value__innerclassinitorder_InnerClassInitOrder_ESWGOuter_ESWGInner);] "innerclassinitorder.InnerClassInitOrder.testExtendsNestedWithGenerics"
[assert (2 == new ESWGInnerSubclass(2, o).value);] => [$Asserts.$assert(2 == ESWGInnerSubclass.$create__int__innerclassinitorder_InnerClassInitOrder_ESWGOuter(2, o).f_value__innerclassinitorder_InnerClassInitOrder_ESWGOuter_ESWGInner);] "innerclassinitorder.InnerClassInitOrder.testExtendsNestedWithGenerics"
[testInnerClassCtors] => [m_testInnerClassCtors__void]
[P1<?> p1 = new P1<Object>();] => [let p1 = /**@type {!P1<*>}*/ (P1.$create__());] "innerclassinitorder.InnerClassInitOrder.testInnerClassCtors"
[p1] => [p1] "p1"
[assert (1 == p1.value);] => [$Asserts.$assert(1 == p1.f_value__innerclassinitorder_InnerClassInitOrder_P1);] "innerclassinitorder.InnerClassInitOrder.testInnerClassCtors"
[assert (2 == new P1<Object>(2).value);] => [$Asserts.$assert(2 == /**@type {!P1<*>}*/ (P1.$create__int(2)).f_value__innerclassinitorder_InnerClassInitOrder_P1);] "innerclassinitorder.InnerClassInitOrder.testInnerClassCtors"
[P1<?>.P2<?> p2 = p1.new P2<Object>();] => [let p2 = /**@type {!P2<*, *>}*/ (P2.$create__innerclassinitorder_InnerClassInitOrder_P1(p1));] "innerclassinitorder.InnerClassInitOrder.testInnerClassCtors"
[p2] => [p2] "p2"
[assert (1 == p2.value);] => [$Asserts.$assert(1 == p2.f_value__innerclassinitorder_InnerClassInitOrder_P1);] "innerclassinitorder.InnerClassInitOrder.testInnerClassCtors"
[assert (2 == p1.new P2<Object>(2).value);] => [$Asserts.$assert(2 == /**@type {!P2<*, *>}*/ (P2.$create__innerclassinitorder_InnerClassInitOrder_P1__int(p1, 2)).f_value__innerclassinitorder_InnerClassInitOrder_P1);] "innerclassinitorder.InnerClassInitOrder.testInnerClassCtors"
[assert (1 == p2.new P3<Object>().value);] => [$Asserts.$assert(1 == /**@type {!P3<*, *, *>}*/ (P3.$create__innerclassinitorder_InnerClassInitOrder_P1_P2(p2)).f_value__innerclassinitorder_InnerClassInitOrder_P1);] "innerclassinitorder.InnerClassInitOrder.testInnerClassCtors"
[assert (2 == p2.new P3<Object>(2).value);] => [$Asserts.$assert(2 == /**@type {!P3<*, *, *>}*/ (P3.$create__innerclassinitorder_InnerClassInitOrder_P1_P2__int(p2, 2)).f_value__innerclassinitorder_InnerClassInitOrder_P1);] "innerclassinitorder.InnerClassInitOrder.testInnerClassCtors"
[testInnerClassInitialization] => [m_testInnerClassInitialization__void]
[new InnerClass();] => [InnerClass.$create__innerclassinitorder_InnerClassInitOrder(this);] "innerclassinitorder.InnerClassInitOrder.testInnerClassInitialization"
[assert (number == 1111);] => [$Asserts.$assert(this.f_number__innerclassinitorder_InnerClassInitOrder == 1111);] "innerclassinitorder.InnerClassInitOrder.testInnerClassInitialization"
[testInnerClassLoop] => [m_testInnerClassLoop__void]
[AddNumber[] results = new AddNumber[10];] => [let results = /**@type {!Array<$1AddNumber>}*/ ($Arrays.$create([10], $1AddNumber));] "innerclassinitorder.InnerClassInitOrder.testInnerClassLoop"
[results] => [results] "results"
[for (int i = 0; i < 10; i++) {
      AddNumber ap = new AddNumber(i) {
...      results[i] = ap;
    }] => [for (let i = 0; i < 10; i = i + 1 | 0) {
   let ap = $1.$create__innerclassinitorder_InnerClassInitOrder__int(this, i);
   $Arrays.$set(results, i, ap);
  }] "innerclassinitorder.InnerClassInitOrder.testInnerClassLoop"
[i] => [i] "i"
[AddNumber ap = new AddNumber(i) {
        @Override
...        }
      };] => [let ap = $1.$create__innerclassinitorder_InnerClassInitOrder__int(this, i);] "innerclassinitorder.InnerClassInitOrder.testInnerClassLoop"
[ap] => [ap] "ap"
[results[i] = ap;] => [$Arrays.$set(results, i, ap);] "innerclassinitorder.InnerClassInitOrder.testInnerClassLoop"
[for (AddNumber theAp : results) {
      theAp.act();
    }] => [for (let $array = results, $index = 0; $index < $array.length; $index++) {
   let theAp = $array[$index];
...   }
  }] "innerclassinitorder.InnerClassInitOrder.testInnerClassLoop"
[for (AddNumber theAp : results) {
      theAp.act();
    }] => [let theAp = $array[$index];] "innerclassinitorder.InnerClassInitOrder.testInnerClassLoop"
[theAp] => [theAp] "theAp"
[theAp.act();] => [theAp.m_act__void();] "innerclassinitorder.InnerClassInitOrder.testInnerClassLoop"
[assert (number == 1156);] => [$Asserts.$assert(this.f_number__innerclassinitorder_InnerClassInitOrder == 1156);] "innerclassinitorder.InnerClassInitOrder.testInnerClassLoop"
[testOuterIsNotSuper] => [m_testOuterIsNotSuper__void]
[Outer.OuterIsNotSuper x = outerIsSuper.new OuterIsNotSuper();] => [let x = OuterIsNotSuper.$create__innerclassinitorder_InnerClassInitOrder_Outer(this.f_outerIsSuper__innerclassinitorder_InnerClassInitOrder_);] "innerclassinitorder.InnerClassInitOrder.testOuterIsNotSuper"
[x] => [x] "x"
[assert (2 == x.getValue());] => [$Asserts.$assert(2 == x.m_getValue__int());] "innerclassinitorder.InnerClassInitOrder.testOuterIsNotSuper"
[testOuterIsNotSuperAnon] => [m_testOuterIsNotSuperAnon__void]
[Outer.OuterIsNotSuper x = outerIsSuper.new OuterIsNotSuper() {
    };] => [let x = $2.$create__innerclassinitorder_InnerClassInitOrder(this);] "innerclassinitorder.InnerClassInitOrder.testOuterIsNotSuperAnon"
[x] => [x] "x"
[assert (2 == x.getValue());] => [$Asserts.$assert(2 == x.m_getValue__int());] "innerclassinitorder.InnerClassInitOrder.testOuterIsNotSuperAnon"
[testQualifiedSuperCall] => [m_testQualifiedSuperCall__void]
[Outer.TestQualifiedSuperCall x = new Outer.TestQualifiedSuperCall();] => [let x = TestQualifiedSuperCall.$create__();] "innerclassinitorder.InnerClassInitOrder.testQualifiedSuperCall"
[x] => [x] "x"
[assert (2 == x.getValue());] => [$Asserts.$assert(2 == x.m_getValue__int());] "innerclassinitorder.InnerClassInitOrder.testQualifiedSuperCall"
[testQualifiedSuperCallAnon] => [m_testQualifiedSuperCallAnon__void]
[Outer.TestQualifiedSuperCall x = new Outer.TestQualifiedSuperCall() {};] => [let x = $3.$create__innerclassinitorder_InnerClassInitOrder(this);] "innerclassinitorder.InnerClassInitOrder.testQualifiedSuperCallAnon"
[x] => [x] "x"
[assert (2 == x.getValue());] => [$Asserts.$assert(2 == x.m_getValue__int());] "innerclassinitorder.InnerClassInitOrder.testQualifiedSuperCallAnon"
[testSuperDispatch] => [m_testSuperDispatch__void]
[assert (1 == outerIsSuper.checkDispatchFromSub1());] => [$Asserts.$assert(1 == this.f_outerIsSuper__innerclassinitorder_InnerClassInitOrder_.m_checkDispatchFromSub1__int());] "innerclassinitorder.InnerClassInitOrder.testSuperDispatch"
[assert (1 == outerIsSuper.checkDispatchFromSub2());] => [$Asserts.$assert(1 == this.f_outerIsSuper__innerclassinitorder_InnerClassInitOrder_.m_checkDispatchFromSub2__int());] "innerclassinitorder.InnerClassInitOrder.testSuperDispatch"
[testUnqualifiedAlloc] => [m_testUnqualifiedAlloc__void]
[Outer.OuterIsNotSuper x = outerIsSuper.unqualifiedAlloc();] => [let x = this.f_outerIsSuper__innerclassinitorder_InnerClassInitOrder_.m_unqualifiedAlloc__innerclassinitorder_InnerClassInitOrder_Outer_OuterIsNotSuper();] "innerclassinitorder.InnerClassInitOrder.testUnqualifiedAlloc"
[x] => [x] "x"
[assert (2 == x.getValue());] => [$Asserts.$assert(2 == x.m_getValue__int());] "innerclassinitorder.InnerClassInitOrder.testUnqualifiedAlloc"
[testUnqualifiedSuperCall] => [m_testUnqualifiedSuperCall__void]
[Outer.TestUnqualifiedSuperCall x = outerIsSuper.new TestUnqualifiedSuperCall();] => [let x = TestUnqualifiedSuperCall.$create__innerclassinitorder_InnerClassInitOrder_Outer(this.f_outerIsSuper__innerclassinitorder_InnerClassInitOrder_);] "innerclassinitorder.InnerClassInitOrder.testUnqualifiedSuperCall"
[x] => [x] "x"
[assert (2 == x.getValue());] => [$Asserts.$assert(2 == x.m_getValue__int());] "innerclassinitorder.InnerClassInitOrder.testUnqualifiedSuperCall"
[testUnqualifiedSuperCallAnon] => [m_testUnqualifiedSuperCallAnon__void]
[Outer.TestUnqualifiedSuperCall x = outerIsSuper.new TestUnqualifiedSuperCall() {
    };] => [let x = $4.$create__innerclassinitorder_InnerClassInitOrder(this);] "innerclassinitorder.InnerClassInitOrder.testUnqualifiedSuperCallAnon"
[x] => [x] "x"
[assert (2 == x.getValue());] => [$Asserts.$assert(2 == x.m_getValue__int());] "innerclassinitorder.InnerClassInitOrder.testUnqualifiedSuperCallAnon"
[main] => [m_main__arrayOf_java_lang_String__void]
[args] => [args] "args"
[{
    InnerClassInitOrder m = new InnerClassInitOrder();
...    m.testUnqualifiedSuperCallAnon();
  }] => [InnerClassInitOrder.$clinit();] "innerclassinitorder.InnerClassInitOrder.main"
[InnerClassInitOrder m = new InnerClassInitOrder();] => [let m = InnerClassInitOrder.$create__();] "innerclassinitorder.InnerClassInitOrder.main"
[m] => [m] "m"
[m.testOuterThisFromSuperCall();] => [m.m_testOuterThisFromSuperCall__void();] "innerclassinitorder.InnerClassInitOrder.main"
[m.testOuterThisFromThisCall();] => [m.m_testOuterThisFromThisCall__void();] "innerclassinitorder.InnerClassInitOrder.main"
[m.testExtendsNested();] => [m.m_testExtendsNested__void();] "innerclassinitorder.InnerClassInitOrder.main"
[m.testExtendsNestedWithGenerics();] => [m.m_testExtendsNestedWithGenerics__void();] "innerclassinitorder.InnerClassInitOrder.main"
[m.testInnerClassCtors();] => [m.m_testInnerClassCtors__void();] "innerclassinitorder.InnerClassInitOrder.main"
[m.testInnerClassInitialization();] => [m.m_testInnerClassInitialization__void();] "innerclassinitorder.InnerClassInitOrder.main"
[m.testInnerClassLoop();] => [m.m_testInnerClassLoop__void();] "innerclassinitorder.InnerClassInitOrder.main"
[m.testOuterIsNotSuper();] => [m.m_testOuterIsNotSuper__void();] "innerclassinitorder.InnerClassInitOrder.main"
[m.testOuterIsNotSuperAnon();] => [m.m_testOuterIsNotSuperAnon__void();] "innerclassinitorder.InnerClassInitOrder.main"
[m.testQualifiedSuperCall();] => [m.m_testQualifiedSuperCall__void();] "innerclassinitorder.InnerClassInitOrder.main"
[m.testQualifiedSuperCallAnon();] => [m.m_testQualifiedSuperCallAnon__void();] "innerclassinitorder.InnerClassInitOrder.main"
[m.testSuperDispatch();] => [m.m_testSuperDispatch__void();] "innerclassinitorder.InnerClassInitOrder.main"
[m.testUnqualifiedAlloc();] => [m.m_testUnqualifiedAlloc__void();] "innerclassinitorder.InnerClassInitOrder.main"
[m.testUnqualifiedSuperCall();] => [m.m_testUnqualifiedSuperCall__void();] "innerclassinitorder.InnerClassInitOrder.main"
[m.testUnqualifiedSuperCallAnon();] => [m.m_testUnqualifiedSuperCallAnon__void();] "innerclassinitorder.InnerClassInitOrder.main"
[InnerClassInitOrder] => [$init__void_$p_innerclassinitorder_InnerClassInitOrder]
[public int number = 0;] => [this.f_number__innerclassinitorder_InnerClassInitOrder = 0;] "innerclassinitorder.InnerClassInitOrder.<init>"
[private final Outer outer = new Outer(1);] => [this.f_outer__innerclassinitorder_InnerClassInitOrder_ = Outer.$create__int(1);] "innerclassinitorder.InnerClassInitOrder.<init>"
[private final Outer.OuterIsSuper outerIsSuper = outer.new OuterIsSuper(2);] => [this.f_outerIsSuper__innerclassinitorder_InnerClassInitOrder_ = OuterIsSuper.$create__innerclassinitorder_InnerClassInitOrder_Outer__int(this.f_outer__innerclassinitorder_InnerClassInitOrder_, 2);] "innerclassinitorder.InnerClassInitOrder.<init>"
[InnerClassInitOrder] => [$clinit]
[InnerClassInitOrder] => [InnerClassInitOrder.$clinit = () =>{};] "innerclassinitorder.InnerClassInitOrder.<clinit>"
[InnerClassInitOrder] => [InnerClassInitOrder.$loadModules();] "innerclassinitorder.InnerClassInitOrder.<clinit>"
[InnerClassInitOrder] => [j_l_Object.$clinit();] "innerclassinitorder.InnerClassInitOrder.<clinit>"
