// Generated from "compiletimeconstant/CompileTimeConstant.java"
@file:OptIn(ExperimentalObjCName::class)
@file:Suppress(
 "ALWAYS_NULL",
 "PARAMETER_NAME_CHANGED_ON_OVERRIDE",
 "REPEATED_BOUND",
 "SENSELESS_COMPARISON",
 "UNCHECKED_CAST",
 "UNNECESSARY_LATEINIT",
 "UNNECESSARY_NOT_NULL_ASSERTION",
 "UNREACHABLE_CODE",
 "UNUSED_PARAMETER",
 "UNUSED_VARIABLE",
 "USELESS_CAST",
 "VARIABLE_IN_SINGLETON_WITHOUT_THREAD_LOCAL",
 "VARIABLE_WITH_REDUNDANT_INITIALIZER")

package compiletimeconstant

import javaemul.lang.*
import java.lang.Class
import kotlin.Any
import kotlin.Boolean
import kotlin.Byte
import kotlin.Char
import kotlin.Int
import kotlin.Long
import kotlin.OptIn
import kotlin.Short
import kotlin.String
import kotlin.Suppress
import kotlin.experimental.ExperimentalObjCName
import kotlin.jvm.JvmField
import kotlin.jvm.javaObjectType
import kotlin.native.ObjCName

@ObjCName("J2ktCompiletimeconstantCompileTimeConstant", exact = true)
open class CompileTimeConstant<T> {
 @JvmField
 @ObjCName("A2_")
 val A2: Int = 10

 @JvmField
 @ObjCName("B2_")
 val B2: Int = 20

 @JvmField
 @ObjCName("C2_")
 val C2: Int = 200

 @JvmField
 @ObjCName("D2_")
 val D2: String = "Tur\"tle"

 @JvmField
 @ObjCName("E2_")
 val E2: String = "Do\"ve"

 @JvmField
 @ObjCName("F2_")
 val F2: String = "Tur\"tleDo\"ve"

 @JvmField
 @ObjCName("G2_")
 val G2: Long = 10000L

 @JvmField
 @ObjCName("H2_")
 val H2: Char = 'A'

 @JvmField
 @ObjCName("I2_")
 val I2: Boolean = true

 init {
  val b: Boolean = this.I2
  val s: String? = "" + CompileTimeConstant.G + CompileTimeConstant.F
  val l: String? = CompileTimeConstant.L
  val m: String? = CompileTimeConstant.M
  val n: String? = CompileTimeConstant.N
  val c: Class<*>? = CompileTimeConstant.classLiteral
 }

 @ObjCName("J2ktCompiletimeconstantCompileTimeConstantCompanion", exact = true)
 companion object {
  @JvmField
  @ObjCName("OBJ_")
  val OBJ: Any? = null

  @ObjCName("A_")
  const val A: Int = 10

  @ObjCName("B_")
  const val B: Int = 20

  @ObjCName("C_")
  const val C: Int = 200

  @ObjCName("D_")
  const val D: String = "Tur\"tle"

  @ObjCName("E_")
  const val E: String = "Do\'ve"

  @ObjCName("F_")
  const val F: String = "Tur\"tleDo\'ve"

  @ObjCName("J_")
  const val J: String = "Tur\"tleDo\'veTur\"tleDo\'ve"

  @JvmField
  @ObjCName("K_")
  val K: String? = null

  @ObjCName("L_")
  const val L: String = "ThisIsALongString"

  @ObjCName("M_")
  const val M: String = "ThisIsALongStringAlso"

  @ObjCName("N_")
  const val N: String = "ThisIsALongStringAlsoButLonger"

  @ObjCName("G_")
  const val G: Long = 10000L

  @ObjCName("H_")
  const val H: Char = 'A'

  @ObjCName("I_")
  const val I: Boolean = true

  @ObjCName("MIN_BYTE_")
  const val MIN_BYTE: Byte = (-128).toByte()

  @ObjCName("MIN_SHORT_")
  const val MIN_SHORT: Short = (-32768).toShort()

  @ObjCName("MIN_BYTE_WITH_CAST_")
  const val MIN_BYTE_WITH_CAST: Byte = (-128).toByte()

  @ObjCName("MIN_SHORT_WITH_CAST_")
  const val MIN_SHORT_WITH_CAST: Short = (-32768).toShort()

  @JvmField
  @ObjCName("classLiteral_")
  val classLiteral: Class<*>? = CompileTimeConstant::class.javaObjectType
 }
}
