goog.module('jsasync.Main.BaseInterface$impl');

const $Util = goog.require('nativebootstrap.Util$impl');

let Integer = goog.forwardDeclare('java.lang.Integer$impl');
let $LambdaAdaptor = goog.forwardDeclare('jsasync.Main.BaseInterface.$LambdaAdaptor$impl');

/**
 * @interface
 */
class BaseInterface {
 /** @abstract @nodts @return {IThenable<Integer>} */
 m_asyncCall__jsasync_Main_IThenable() {}
 /** @nodts @return {BaseInterface} */
 static $adapt(/** ?function():IThenable<Integer> */ fn) {
  BaseInterface.$clinit();
  return new $LambdaAdaptor(fn);
 }
 /** @nodts */
 static $clinit() {
  BaseInterface.$clinit = () =>{};
  BaseInterface.$loadModules();
 }
 
 static $markImplementor(/** Function */ ctor) {
  ctor.prototype.$implements__jsasync_Main_BaseInterface = true;
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance != null && !!instance.$implements__jsasync_Main_BaseInterface;
 }
 
 /** @nodts */
 static $loadModules() {
  $LambdaAdaptor = goog.module.get('jsasync.Main.BaseInterface.$LambdaAdaptor$impl');
 }
}
BaseInterface.$markImplementor(/**@type {Function}*/ (BaseInterface));
$Util.$setClassMetadataForInterface(BaseInterface, 'jsasync.Main$BaseInterface');

exports = BaseInterface;

//# sourceMappingURL=Main$BaseInterface.js.map
