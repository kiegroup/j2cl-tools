// Generated by J2KT from "j2kt/SmartCasts.java"

#import <Foundation/NSObjCRuntime.h>

#import "third_party/java_src/j2objc/jre_emul/Classes/J2ObjC_types.h"

@class J2ktJ2ktSmartCasts;
@class J2ktJ2ktSmartCastsCompanion;
@class J2ktJ2ktSmartCasts_Container;
@class J2ktJ2ktSmartCasts_Container_SubContainer;

@protocol J2ktJ2ktSmartCasts_Foo;

NS_ASSUME_NONNULL_BEGIN

@compatibility_alias J2ktSmartCasts J2ktJ2ktSmartCasts;

@compatibility_alias J2ktSmartCastsCompanion J2ktJ2ktSmartCastsCompanion;

NS_INLINE void J2ktSmartCasts_testParameterReferenceWithJ2ktSmartCasts_Foo_(id<J2ktJ2ktSmartCasts_Foo> foo) {
 [J2ktJ2ktSmartCastsCompanion.shared testParameterReferenceWithJ2ktSmartCasts_Foo:foo];
}

NS_INLINE void J2ktSmartCasts_testFinalVariableReferenceWithJ2ktSmartCasts_Foo_(id<J2ktJ2ktSmartCasts_Foo> foo) {
 [J2ktJ2ktSmartCastsCompanion.shared testFinalVariableReferenceWithJ2ktSmartCasts_Foo:foo];
}

NS_INLINE void J2ktSmartCasts_testNonFinalVariableReferenceWithJ2ktSmartCasts_Foo_withJ2ktSmartCasts_Foo_(id<J2ktJ2ktSmartCasts_Foo> foo, id<J2ktJ2ktSmartCasts_Foo> foo2) {
 [J2ktJ2ktSmartCastsCompanion.shared testNonFinalVariableReferenceWithJ2ktSmartCasts_Foo:foo withJ2ktSmartCasts_Foo:foo2];
}

NS_INLINE void J2ktSmartCasts_testArgumentsWithJ2ktSmartCasts_Foo_(id<J2ktJ2ktSmartCasts_Foo> foo) {
 [J2ktJ2ktSmartCastsCompanion.shared testArgumentsWithJ2ktSmartCasts_Foo:foo];
}

NS_INLINE void J2ktSmartCasts_testIfStatementWithJ2ktSmartCasts_Foo_withBoolean_(id<J2ktJ2ktSmartCasts_Foo> foo, jboolean condition) {
 [J2ktJ2ktSmartCastsCompanion.shared testIfStatementWithJ2ktSmartCasts_Foo:foo withBoolean:condition];
}

NS_INLINE void J2ktSmartCasts_testFinalFieldAccessWithJ2ktSmartCasts_Container_(J2ktJ2ktSmartCasts_Container* container) {
 [J2ktJ2ktSmartCastsCompanion.shared testFinalFieldAccessWithJ2ktSmartCasts_Container:container];
}

NS_INLINE void J2ktSmartCasts_testFinalFieldAccessThroughCastVariableWithJ2ktSmartCasts_Container_(J2ktJ2ktSmartCasts_Container* container) {
 [J2ktJ2ktSmartCastsCompanion.shared testFinalFieldAccessThroughCastVariableWithJ2ktSmartCasts_Container:container];
}

NS_INLINE void J2ktSmartCasts_testNonFinalFieldAccessWithJ2ktSmartCasts_Container_(J2ktJ2ktSmartCasts_Container* container) {
 [J2ktJ2ktSmartCastsCompanion.shared testNonFinalFieldAccessWithJ2ktSmartCasts_Container:container];
}

NS_INLINE void J2ktSmartCasts_testInvocationWithJ2ktSmartCasts_Container_(J2ktJ2ktSmartCasts_Container* container) {
 [J2ktJ2ktSmartCastsCompanion.shared testInvocationWithJ2ktSmartCasts_Container:container];
}

NS_INLINE void J2ktSmartCasts_testTypeArgumentInferenceWithJ2ktSmartCasts_Foo_(id<J2ktJ2ktSmartCasts_Foo> foo) {
 [J2ktJ2ktSmartCastsCompanion.shared testTypeArgumentInferenceWithJ2ktSmartCasts_Foo:foo];
}

NS_INLINE void J2ktSmartCasts_acceptFooOfObjectWithJ2ktSmartCasts_Foo_(id<J2ktJ2ktSmartCasts_Foo> foo) {
 [J2ktJ2ktSmartCastsCompanion.shared acceptFooOfObjectWithJ2ktSmartCasts_Foo:foo];
}

NS_INLINE void J2ktSmartCasts_acceptFooOfTWithJ2ktSmartCasts_Foo_(id<J2ktJ2ktSmartCasts_Foo> foo) {
 [J2ktJ2ktSmartCastsCompanion.shared acceptFooOfTWithJ2ktSmartCasts_Foo:foo];
}

NS_INLINE void J2ktSmartCasts_acceptFooOfObjectAndTWithJ2ktSmartCasts_Foo_withJ2ktSmartCasts_Foo_(id<J2ktJ2ktSmartCasts_Foo> foo, id<J2ktJ2ktSmartCasts_Foo> foo2) {
 [J2ktJ2ktSmartCastsCompanion.shared acceptFooOfObjectAndTWithJ2ktSmartCasts_Foo:foo withJ2ktSmartCasts_Foo:foo2];
}

NS_INLINE void J2ktSmartCasts_acceptTWithId_(id foo) {
 [J2ktJ2ktSmartCastsCompanion.shared acceptTWithId:foo];
}

#define J2ktSmartCasts_Foo J2ktJ2ktSmartCasts_Foo

@compatibility_alias J2ktSmartCasts_Container J2ktJ2ktSmartCasts_Container;

NS_INLINE J2ktJ2ktSmartCasts_Container* create_J2ktSmartCasts_Container_initWithJ2ktSmartCasts_Foo_(id<J2ktJ2ktSmartCasts_Foo> foo) {
 return [[J2ktJ2ktSmartCasts_Container alloc] initWithJ2ktSmartCasts_Foo:foo];
}

NS_INLINE J2ktJ2ktSmartCasts_Container* new_J2ktSmartCasts_Container_initWithJ2ktSmartCasts_Foo_(id<J2ktJ2ktSmartCasts_Foo> foo) {
 return [[J2ktJ2ktSmartCasts_Container alloc] initWithJ2ktSmartCasts_Foo:foo];
}

@compatibility_alias J2ktSmartCasts_Container_SubContainer J2ktJ2ktSmartCasts_Container_SubContainer;

NS_ASSUME_NONNULL_END
