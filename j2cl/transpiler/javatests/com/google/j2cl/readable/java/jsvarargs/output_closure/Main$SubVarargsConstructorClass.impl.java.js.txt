goog.module('jsvarargs.Main.SubVarargsConstructorClass$impl');

const $Util = goog.require('nativebootstrap.Util$impl');

let InternalPreconditions = goog.forwardDeclare('javaemul.internal.InternalPreconditions$impl');

class SubVarargsConstructorClass extends Object {
 
 constructor(/** number */ i, .../** ...* */ args) {
  SubVarargsConstructorClass.$clinit();
  super(...InternalPreconditions.m_checkNotNull__java_lang_Object__java_lang_Object(args));
  this.$ctor__jsvarargs_Main_SubVarargsConstructorClass__int__arrayOf_java_lang_Object__void(i, args);
 }
 /** @nodts */
 $ctor__jsvarargs_Main_SubVarargsConstructorClass__int__arrayOf_java_lang_Object__void(/** number */ i, /** Array<*> */ args) {}
 /** @nodts */
 static $clinit() {
  SubVarargsConstructorClass.$clinit = () =>{};
  SubVarargsConstructorClass.$loadModules();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof SubVarargsConstructorClass;
 }
 
 /** @nodts */
 static $loadModules() {
  InternalPreconditions = goog.module.get('javaemul.internal.InternalPreconditions$impl');
 }
}
$Util.$setClassMetadata(SubVarargsConstructorClass, 'jsvarargs.Main$SubVarargsConstructorClass');

exports = SubVarargsConstructorClass;

//# sourceMappingURL=Main$SubVarargsConstructorClass.js.map
